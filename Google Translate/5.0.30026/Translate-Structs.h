/*
* This header is generated by classdump-dyld 1.0
* on Thursday, May 12, 2016 at 1:01:19 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/E107A69B-5FBA-4958-8D2E-301137467F53/Translate.app/Translate
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@class NSOutputStream, NSData, NSString, PBGeneratedMessage, PBArray, PBEnumDescriptor, TAGPBGeneratedMessage, TAGPBArray, TAGPBEnumDescriptor;

typedef struct CGPoint {
	float x;
	float y;
} CGPoint;

typedef struct UIEdgeInsets {
	float top;
	float left;
	float bottom;
	float right;
} UIEdgeInsets;

typedef struct CGSize {
	float width;
	float height;
} CGSize;

typedef struct CGRect {
	CGPoint origin;
	CGSize size;
} CGRect;

typedef struct _NSZone* NSZoneRef;

typedef struct int2 {
	int x;
	int y;
} int2;

typedef struct _compressed_pair<qv::BasicFrameSpec *, std::__1::allocator<qv::BasicFrameSpec> > {
	BasicFrameSpec __first_;
} compressed_pair<qv::BasicFrameSpec *, std::__1::allocator<qv::BasicFrameSpec> >;

typedef struct vector<qv::BasicFrameSpec, std::__1::allocator<qv::BasicFrameSpec> > {
	BasicFrameSpec __begin_;
	BasicFrameSpec __end_;
	compressed_pair<qv::BasicFrameSpec *, std::__1::allocator<qv::BasicFrameSpec> > __end_cap_;
} vector<qv::BasicFrameSpec, std::__1::allocator<qv::BasicFrameSpec> >;

typedef struct CamFrameConfig {
	int2 frameWindow;
	vector<qv::BasicFrameSpec, std::__1::allocator<qv::BasicFrameSpec> > frameModes;
} CamFrameConfig;

typedef struct shared_ptr<LangBarMessageHandler> {
	LangBarMessageHandler __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<LangBarMessageHandler>;

typedef struct shared_ptr<qv::MessageHandler> {
	MessageHandler __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<qv::MessageHandler>;

typedef struct shared_ptr<GTRWordLensDisplayContext> {
	GTRWordLensDisplayContext __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<GTRWordLensDisplayContext>;

typedef struct shared_ptr<GTRWordLensMessageHandler> {
	GTRWordLensMessageHandler __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<GTRWordLensMessageHandler>;

typedef struct _compressed_pair<eGTRWordLensUIMode *, std::__1::allocator<eGTRWordLensUIMode> > {
	int __first_;
} compressed_pair<eGTRWordLensUIMode *, std::__1::allocator<eGTRWordLensUIMode> >;

typedef struct vector<eGTRWordLensUIMode, std::__1::allocator<eGTRWordLensUIMode> > {
	int __begin_;
	int __end_;
	compressed_pair<eGTRWordLensUIMode *, std::__1::allocator<eGTRWordLensUIMode> > __end_cap_;
} vector<eGTRWordLensUIMode, std::__1::allocator<eGTRWordLensUIMode> >;

typedef struct shared_ptr<translating::native_app::mergeddict::DictionaryManager> {
	DictionaryManager __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<translating::native_app::mergeddict::DictionaryManager>;

typedef struct opaqueCMSampleBuffer* opaqueCMSampleBufferRef;

typedef struct shared_ptr<qv::MessageQueue> {
	MessageQueue __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<qv::MessageQueue>;

typedef struct shared_ptr<MessageQueueListener_iOS> {
	MessageQueueListener_iOS __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<MessageQueueListener_iOS>;

typedef struct shared_ptr<qv::CameraDevice> {
	CameraDevice __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<qv::CameraDevice>;

typedef struct CamVideoHandle {
	shared_ptr<qv::CameraDevice> cam;
	int sessionId;
} CamVideoHandle;

typedef struct RectBorder {
	float left;
	float right;
	float top;
	float bottom;
} RectBorder;

typedef struct sqlite3* sqlite3Ref;

typedef struct sqlite3_stmt* sqlite3_stmtRef;

typedef struct {
	unsigned long field1;
	id field2;
	unsigned long field3;
	unsigned long field4[5];
} SCD_Struct_PB24;

typedef struct PBInputBufferState {
	char* bytes;
	unsigned bufferSize;
	unsigned bufferPos;
	unsigned currentLimit;
} PBInputBufferState;

typedef struct PBOutputBufferState {
	char* bytes;
	unsigned size;
	unsigned position;
	NSOutputStream* output;
} PBOutputBufferState;

typedef union {
	char valueBool;
	unsigned valueFixed32;
	int valueSFixed32;
	float valueFloat;
	unsigned long long valueFixed64;
	long long valueSFixed64;
	double valueDouble;
	int valueInt32;
	long long valueInt64;
	int valueSInt32;
	long long valueSInt64;
	unsigned valueUInt32;
	unsigned long long valueUInt64;
	NSData* valueData;
	NSString* valueString;
	PBGeneratedMessage* valueMessage;
	PBGeneratedMessage* valueGroup;
	int valueEnum;
	PBArray* valueArray;
	id valueObject;
} SCD_Union_PB27;

typedef union {
	PBEnumDescriptor* enumDescriptor_;
	/*function pointer*/void* enumVerifier_;
} SCD_Union_PB28;

typedef struct PBGeneratedMessage_Storage* PBGeneratedMessage_StorageRef;

typedef struct __CFDictionary* CFDictionaryRef;

typedef struct FKArchivedFeedbackReportMetadata {
	unsigned length;
	unsigned version;
	long long timestamp;
} FKArchivedFeedbackReportMetadata;

typedef struct SpeexBits {
	char* chars;
	int nbBits;
	int charPtr;
	int bitPtr;
	int owner;
	int overflow;
	int buf_size;
	int reserved1;
	void reserved2;
} SpeexBits;

typedef struct SpeexPreprocessState_* SpeexPreprocessState_Ref;

typedef struct __CVBuffer* CVBufferRef;

typedef struct __SCNetworkReachability* SCNetworkReachabilityRef;

typedef struct CGAffineTransform {
	float a;
	float b;
	float c;
	float d;
	float tx;
	float ty;
} CGAffineTransform;

typedef struct {
	char dragging;
	CGPoint dragStartOffset;
	CGPoint contentOffset;
	char isLiveTransformRegion;
	char endedDragInHeaderLayoutRegion;
	char handlingOffset;
} SCD_Struct_GO37;

typedef struct {
	CGRect field1;
	CGRect field2;
	CGRect field3;
	CGRect field4;
} SCD_Struct_GO38;

typedef struct {
	float field1;
	float field2;
	float field3[4];
} SCD_Struct_GO39;

typedef struct CGColor* CGColorRef;

typedef struct __CTFrame* CTFrameRef;

typedef struct OpaqueAudioQueue* OpaqueAudioQueueRef;

typedef struct OpaqueAudioFileID* OpaqueAudioFileIDRef;

typedef struct AudioStreamBasicDescription {
	double mSampleRate;
	unsigned mFormatID;
	unsigned mFormatFlags;
	unsigned mBytesPerPacket;
	unsigned mFramesPerPacket;
	unsigned mBytesPerFrame;
	unsigned mChannelsPerFrame;
	unsigned mBitsPerChannel;
	unsigned mReserved;
} AudioStreamBasicDescription;

typedef struct CGContext* CGContextRef;

typedef struct OpaqueAudioConverter* OpaqueAudioConverterRef;

typedef struct GAKPacketData {
	unsigned mNumberPackets;
	AudioStreamPacketDescription mPacketDescriptions;
	AudioBufferList mBufferList;
} GAKPacketData;

typedef struct AudioConverterPrimeInfo {
	unsigned leadingFrames;
	unsigned trailingFrames;
} AudioConverterPrimeInfo;

typedef struct {
	void buffer;
	int length;
	int tail;
	int head;
	int fillCount;
} SCD_Struct_GA49;

typedef struct OpaqueAudioComponentInstance* OpaqueAudioComponentInstanceRef;

typedef struct AudioComponentDescription {
	unsigned componentType;
	unsigned componentSubType;
	unsigned componentManufacturer;
	unsigned componentFlags;
	unsigned componentFlagsMask;
} AudioComponentDescription;

typedef struct OpaqueAUGraph* OpaqueAUGraphRef;

typedef struct OpaqueExtAudioFile* OpaqueExtAudioFileRef;

typedef struct OpaqueAudioFileStreamID* OpaqueAudioFileStreamIDRef;

typedef struct __CFRunLoopSource* CFRunLoopSourceRef;

typedef struct {
	CGPoint field1;
	CGPoint field2;
} SCD_Struct_QT56;

typedef struct {
	float field1;
	CGSize field2;
	float field3;
	float field4;
	CGSize field5;
	float field6;
} SCD_Struct_QT57;

typedef struct CGPath* CGPathRef;

typedef struct __CTLine* CTLineRef;

typedef struct __CTRun* CTRunRef;

typedef struct dispatch_queue_s* dispatch_queue_sRef;

typedef struct TAGPBInputBufferState {
	char* bytes;
	unsigned bufferSize;
	unsigned bufferPos;
	unsigned currentLimit;
} TAGPBInputBufferState;

typedef struct __CFString* CFStringRef;

typedef struct TAGPBOutputBufferState {
	char* bytes;
	unsigned size;
	unsigned position;
	NSOutputStream* output;
} TAGPBOutputBufferState;

typedef union {
	char valueBool;
	unsigned valueFixed32;
	int valueSFixed32;
	float valueFloat;
	unsigned long long valueFixed64;
	long long valueSFixed64;
	double valueDouble;
	int valueInt32;
	long long valueInt64;
	int valueSInt32;
	long long valueSInt64;
	unsigned valueUInt32;
	unsigned long long valueUInt64;
	NSData* valueData;
	NSString* valueString;
	TAGPBGeneratedMessage* valueMessage;
	TAGPBGeneratedMessage* valueGroup;
	int valueEnum;
	TAGPBArray* valueArray;
	id valueObject;
} SCD_Union_TA65;

typedef union {
	TAGPBEnumDescriptor* enumDescriptor_;
	/*function pointer*/void* enumVerifier_;
} SCD_Union_TA66;

typedef struct TAGPBGeneratedMessage_Storage* TAGPBGeneratedMessage_StorageRef;

