/*
* This header is generated by classdump-dyld 1.0
* on Thursday, May 12, 2016 at 1:01:15 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/E107A69B-5FBA-4958-8D2E-301137467F53/Translate.app/Translate
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Translate/Translate-Structs.h>
#import <libobjc.A.dylib/NSURLSessionDelegate.h>

@protocol OS_dispatch_queue, OS_dispatch_group, GTMFetcherAuthorizationProtocol, GTMSessionFetcherServiceProtocol;
@class NSMutableURLRequest, NSURLSession, NSURLSessionConfiguration, NSURLSessionTask, NSString, NSURLResponse, NSMutableData, NSError, NSData, NSURL, NSURLCredential, NSMutableDictionary, NSObject, NSOperationQueue, NSTimer, NSDate, NSDictionary, NSArray, NSHTTPCookieStorage, GTMSessionUploadFetcher;

@interface GTMSessionFetcher : NSObject <NSURLSessionDelegate> {

	NSMutableURLRequest* _request;
	NSURLSession* _session;
	char _shouldInvalidateSession;
	NSURLSession* _sessionNeedingInvalidation;
	NSURLSessionConfiguration* _configuration;
	NSURLSessionTask* _sessionTask;
	NSString* _taskDescription;
	float _taskPriority;
	NSURLResponse* _response;
	NSString* _sessionIdentifier;
	char _wasCreatedFromBackgroundSession;
	char _didCreateSessionIdentifier;
	NSString* _sessionIdentifierUUID;
	char _userRequestedBackgroundSession;
	char _usingBackgroundSession;
	NSMutableData* _downloadedData;
	NSError* _downloadFinishedError;
	NSData* _downloadResumeData;
	NSURL* _destinationFileURL;
	long long _downloadedLength;
	NSURLCredential* _credential;
	NSURLCredential* _proxyCredential;
	char _isStopNotificationNeeded;
	char _isUsingTestBlock;
	id _userData;
	NSMutableDictionary* _properties;
	NSObject*<OS_dispatch_queue> _callbackQueue;
	NSObject*<OS_dispatch_group> _callbackGroup;
	NSOperationQueue* _delegateQueue;
	id<GTMFetcherAuthorizationProtocol> _authorizer;
	id<GTMSessionFetcherServiceProtocol> _service;
	NSString* _serviceHost;
	int _servicePriority;
	char _userStoppedFetching;
	char _isRetryEnabled;
	NSTimer* _retryTimer;
	unsigned _retryCount;
	double _maxRetryInterval;
	double _minRetryInterval;
	double _retryFactor;
	double _lastRetryInterval;
	NSDate* _initialBeginFetchDate;
	NSDate* _initialRequestDate;
	char _hasAttemptedAuthRefresh;
	NSString* _comment;
	NSString* _log;
	NSMutableData* _loggedStreamData;
	NSURL* _redirectedFromURL;
	NSString* _logRequestBody;
	NSString* _logResponseBody;
	char _hasLoggedError;
	char _deferResponseBodyLogging;
	char _canShareSession;
	char _useUploadTask;
	char _allowLocalhostRequest;
	char _allowInvalidServerCertificates;
	char _skipBackgroundTask;
	/*^block*/id _configurationBlock;
	NSDictionary* _sessionUserInfo;
	/*^block*/id _completionHandler;
	NSData* _bodyData;
	NSURL* _bodyFileURL;
	/*^block*/id _bodyStreamProvider;
	/*^block*/id _accumulateDataBlock;
	/*^block*/id _receivedProgressBlock;
	/*^block*/id _downloadProgressBlock;
	/*^block*/id _resumeDataBlock;
	/*^block*/id _didReceiveResponseBlock;
	/*^block*/id _willRedirectBlock;
	/*^block*/id _sendProgressBlock;
	/*^block*/id _willCacheURLResponseBlock;
	/*^block*/id _retryBlock;
	NSArray* _allowedInsecureSchemes;
	NSHTTPCookieStorage* _cookieStorage;
	/*^block*/id _testBlock;
	unsigned _backgroundTaskIdentifier;
	long long _bodyLength;

}

@property (readonly) GTMSessionUploadFetcher * parentUploadFetcher; 
@property (retain) NSMutableURLRequest * mutableRequest;                              //@synthesize request=_request - In the implementation block
@property (retain) NSData * downloadResumeData;                                       //@synthesize downloadResumeData=_downloadResumeData - In the implementation block
@property (retain) NSURLSessionConfiguration * configuration;                         //@synthesize configuration=_configuration - In the implementation block
@property (copy) id configurationBlock;                                               //@synthesize configurationBlock=_configurationBlock - In the implementation block
@property (retain) NSURLSession * session; 
@property (readonly) NSURLSessionTask * sessionTask;                                  //@synthesize sessionTask=_sessionTask - In the implementation block
@property (readonly) NSString * sessionIdentifier; 
@property (readonly) char wasCreatedFromBackgroundSession;                            //@synthesize wasCreatedFromBackgroundSession=_wasCreatedFromBackgroundSession - In the implementation block
@property (retain) NSDictionary * sessionUserInfo;                                    //@synthesize sessionUserInfo=_sessionUserInfo - In the implementation block
@property (copy) NSString * taskDescription;                                          //@synthesize taskDescription=_taskDescription - In the implementation block
@property (assign) float taskPriority;                                                //@synthesize taskPriority=_taskPriority - In the implementation block
@property (assign) char useBackgroundSession;                                         //@synthesize userRequestedBackgroundSession=_userRequestedBackgroundSession - In the implementation block
@property (getter=isUsingBackgroundSession) char usingBackgroundSession;              //@synthesize usingBackgroundSession=_usingBackgroundSession - In the implementation block
@property (assign) char useUploadTask;                                                //@synthesize useUploadTask=_useUploadTask - In the implementation block
@property (readonly) char canShareSession;                                            //@synthesize canShareSession=_canShareSession - In the implementation block
@property (copy) NSArray * allowedInsecureSchemes;                                    //@synthesize allowedInsecureSchemes=_allowedInsecureSchemes - In the implementation block
@property (assign) char allowLocalhostRequest;                                        //@synthesize allowLocalhostRequest=_allowLocalhostRequest - In the implementation block
@property (assign) char allowInvalidServerCertificates;                               //@synthesize allowInvalidServerCertificates=_allowInvalidServerCertificates - In the implementation block
@property (retain) NSHTTPCookieStorage * cookieStorage;                               //@synthesize cookieStorage=_cookieStorage - In the implementation block
@property (retain) NSURLCredential * credential;                                      //@synthesize credential=_credential - In the implementation block
@property (retain) NSURLCredential * proxyCredential;                                 //@synthesize proxyCredential=_proxyCredential - In the implementation block
@property (retain) NSData * bodyData;                                                 //@synthesize bodyData=_bodyData - In the implementation block
@property (retain) NSURL * bodyFileURL;                                               //@synthesize bodyFileURL=_bodyFileURL - In the implementation block
@property (readonly) long long bodyLength;                                            //@synthesize bodyLength=_bodyLength - In the implementation block
@property (copy) id bodyStreamProvider;                                               //@synthesize bodyStreamProvider=_bodyStreamProvider - In the implementation block
@property (retain) id<GTMFetcherAuthorizationProtocol> authorizer;                    //@synthesize authorizer=_authorizer - In the implementation block
@property (retain) id<GTMSessionFetcherServiceProtocol> service;                      //@synthesize service=_service - In the implementation block
@property (copy) NSString * serviceHost;                                              //@synthesize serviceHost=_serviceHost - In the implementation block
@property (assign) int servicePriority;                                               //@synthesize servicePriority=_servicePriority - In the implementation block
@property (copy) id didReceiveResponseBlock;                                          //@synthesize didReceiveResponseBlock=_didReceiveResponseBlock - In the implementation block
@property (copy) id willRedirectBlock;                                                //@synthesize willRedirectBlock=_willRedirectBlock - In the implementation block
@property (copy) id sendProgressBlock;                                                //@synthesize sendProgressBlock=_sendProgressBlock - In the implementation block
@property (copy) id accumulateDataBlock;                                              //@synthesize accumulateDataBlock=_accumulateDataBlock - In the implementation block
@property (copy) id receivedProgressBlock;                                            //@synthesize receivedProgressBlock=_receivedProgressBlock - In the implementation block
@property (copy) id downloadProgressBlock;                                            //@synthesize downloadProgressBlock=_downloadProgressBlock - In the implementation block
@property (copy) id willCacheURLResponseBlock;                                        //@synthesize willCacheURLResponseBlock=_willCacheURLResponseBlock - In the implementation block
@property (getter=isRetryEnabled) char retryEnabled; 
@property (copy) id retryBlock;                                                       //@synthesize retryBlock=_retryBlock - In the implementation block
@property (assign) double maxRetryInterval; 
@property (assign) double minRetryInterval; 
@property (assign) double retryFactor;                                                //@synthesize retryFactor=_retryFactor - In the implementation block
@property (readonly) unsigned retryCount; 
@property (readonly) double nextRetryInterval; 
@property (assign) char skipBackgroundTask;                                           //@synthesize skipBackgroundTask=_skipBackgroundTask - In the implementation block
@property (getter=isFetching,readonly) char fetching; 
@property (copy) id completionHandler;                                                //@synthesize completionHandler=_completionHandler - In the implementation block
@property (copy) id resumeDataBlock;                                                  //@synthesize resumeDataBlock=_resumeDataBlock - In the implementation block
@property (readonly) int statusCode; 
@property (readonly) NSDictionary * responseHeaders; 
@property (readonly) NSURLResponse * response; 
@property (readonly) long long downloadedLength;                                      //@synthesize downloadedLength=_downloadedLength - In the implementation block
@property (retain) NSData * downloadedData; 
@property (retain) NSURL * destinationFileURL; 
@property (readonly) NSDate * initialBeginFetchDate;                                  //@synthesize initialBeginFetchDate=_initialBeginFetchDate - In the implementation block
@property (retain) id userData; 
@property (copy) NSDictionary * properties; 
@property (copy) NSString * comment;                                                  //@synthesize comment=_comment - In the implementation block
@property (copy) NSString * log;                                                      //@synthesize log=_log - In the implementation block
@property (retain) NSObject*<OS_dispatch_queue> callbackQueue;                        //@synthesize callbackQueue=_callbackQueue - In the implementation block
@property (retain) NSOperationQueue * sessionDelegateQueue; 
@property (copy) id testBlock;                                                        //@synthesize testBlock=_testBlock - In the implementation block
@property (copy) NSString * logRequestBody;                                           //@synthesize logRequestBody=_logRequestBody - In the implementation block
@property (assign) char deferResponseBodyLogging; 
@property (copy) NSString * logResponseBody;                                          //@synthesize logResponseBody=_logResponseBody - In the implementation block
@property (readonly) NSData * loggedStreamData; 
@property (assign) char hasLoggedError;                                               //@synthesize hasLoggedError=_hasLoggedError - In the implementation block
@property (retain) NSURL * redirectedFromURL;                                         //@synthesize redirectedFromURL=_redirectedFromURL - In the implementation block
@property (assign) unsigned backgroundTaskIdentifier;                                 //@synthesize backgroundTaskIdentifier=_backgroundTaskIdentifier - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(void)load;
+(id)fetcherWithRequest:(id)arg1 ;
+(id)fetcherWithURL:(id)arg1 ;
+(id)fetcherWithSessionIdentifier:(id)arg1 ;
+(id)fetchersForBackgroundSessions;
+(id)fetcherWithURLString:(id)arg1 ;
+(id)staticCookieStorage;
+(id)loggingDirectory;
+(id)loggingDateStamp;
+(id)processNameLogPrefix;
+(id)loggingProcessName;
+(id)logDirectoryForCurrentRun;
+(id)htmlFileName;
+(id)snipSubstringOfString:(id)arg1 betweenStartString:(id)arg2 endString:(id)arg3 ;
+(id)headersStringForDictionary:(id)arg1 ;
+(id)symlinkNameSuffix;
+(void)setLoggingDirectory:(id)arg1 ;
+(void)setLoggingToFileEnabled:(char)arg1 ;
+(char)isLoggingToFileEnabled;
+(void)setLoggingProcessName:(id)arg1 ;
+(void)setLoggingDateStamp:(id)arg1 ;
+(id)sessionIdentifierToFetcherMap;
+(char)appAllowsInsecureRequests;
+(id)fetcherUIApplication;
+(id)fetcherUserDefaults;
+(id)activePersistedBackgroundSessions;
+(/*^block*/id)systemCompletionHandlerForSessionIdentifier:(id)arg1 ;
+(void)setSystemCompletionHandler:(/*^block*/id)arg1 forSessionIdentifier:(id)arg2 ;
+(id)fetcherWithDownloadResumeData:(id)arg1 ;
+(void)setGlobalTestBlock:(/*^block*/id)arg1 ;
+(void)setSubstituteUIApplication:(id)arg1 ;
+(id)substituteUIApplication;
+(void)setLogDirectoryForCurrentRun:(id)arg1 ;
+(void)deleteLogDirectoriesOlderThanDate:(id)arg1 ;
+(void)application:(id)arg1 handleEventsForBackgroundURLSession:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
+(void)load;
+(char)isLoggingEnabled;
+(void)setLoggingEnabled:(char)arg1 ;
-(void)gtr_setNetworkActivityIndicator:(id)arg1 ;
-(void)beginFetchWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)stopFetching;
-(void)setUseBackgroundSession:(char)arg1 ;
-(void)setRetryEnabled:(char)arg1 ;
-(NSMutableURLRequest *)mutableRequest;
-(void)setRetryBlock:(id)arg1 ;
-(void)setCommentWithFormat:(id)arg1 ;
-(void)beginFetchWithDelegate:(id)arg1 didFinishSelector:(SEL)arg2 ;
-(NSString *)logRequestBody;
-(void)setLogRequestBody:(NSString *)arg1 ;
-(void)setCookieStorageMethod:(int)arg1 ;
-(void)beginFetchMayDelay:(char)arg1 mayAuthorize:(char)arg2 ;
-(void)authorizeRequest;
-(void)setMaxRetryInterval:(double)arg1 ;
-(void)failToBeginFetchWithError:(id)arg1 ;
-(void)releaseCallbacks;
-(void)setAuthorizer:(id<GTMFetcherAuthorizationProtocol>)arg1 ;
-(void)stopFetchReleasingCallbacks:(char)arg1 ;
-(id<GTMFetcherAuthorizationProtocol>)authorizer;
-(void)authorizer:(id)arg1 request:(id)arg2 finishedWithError:(id)arg3 ;
-(void)destroyRetryTimer;
-(void)sendStopNotificationIfNeeded;
-(void)logNowWithError:(id)arg1 ;
-(void)setMutableRequest:(NSMutableURLRequest *)arg1 ;
-(void)beginRetryTimer;
-(char)shouldReleaseCallbacksUponCompletion;
-(void)logFetchWithError:(id)arg1 ;
-(char)isRetryEnabled;
-(double)nextRetryInterval;
-(double)maxRetryInterval;
-(char)isRetryError:(id)arg1 ;
-(void)retryTimerFired:(id)arg1 ;
-(void)retryFetch;
-(void)setMinRetryInterval:(double)arg1 ;
-(void)setRetryFactor:(double)arg1 ;
-(NSHTTPCookieStorage *)cookieStorage;
-(char)waitForCompletionWithTimeout:(double)arg1 ;
-(double)minRetryInterval;
-(void)addPropertiesFromDictionary:(id)arg1 ;
-(NSArray *)allowedInsecureSchemes;
-(void)setAllowedInsecureSchemes:(NSArray *)arg1 ;
-(char)allowLocalhostRequest;
-(void)setAllowLocalhostRequest:(char)arg1 ;
-(NSURLCredential *)proxyCredential;
-(void)setProxyCredential:(NSURLCredential *)arg1 ;
-(void)setServiceHost:(NSString *)arg1 ;
-(int)servicePriority;
-(void)setServicePriority:(int)arg1 ;
-(double)retryFactor;
-(long long)downloadedLength;
-(NSData *)downloadedData;
-(id)retryBlock;
-(id)formattedStringFromData:(id)arg1 contentType:(id)arg2 JSON:(id*)arg3 ;
-(id)stringFromStreamData:(id)arg1 contentType:(id)arg2 ;
-(void)inputStream:(id)arg1 readIntoBuffer:(void*)arg2 length:(long long)arg3 ;
-(void)setLogResponseBody:(NSString *)arg1 ;
-(NSString *)logResponseBody;
-(void)setDownloadResumeData:(NSData *)arg1 ;
-(NSData *)downloadResumeData;
-(void)forgetSessionIdentifierForFetcherWithoutSyncCheck;
-(/*^block*/id)completionHandlerWithTarget:(id)arg1 didFinishSelector:(SEL)arg2 ;
-(char)useBackgroundSession;
-(char)canFetchWithBackgroundSession;
-(NSURL *)bodyFileURL;
-(void)setCanShareSession:(char)arg1 ;
-(id)createSessionIdentifierWithMetadata:(id)arg1 ;
-(void)removePersistedBackgroundSessionFromDefaults;
-(void)setDownloadedLength:(long long)arg1 ;
-(id)loggedInputStreamForInputStream:(id)arg1 ;
-(void)addPersistedBackgroundSessionToDefaults;
-(void)setStopNotificationNeeded:(char)arg1 ;
-(void)postNotificationOnMainThreadWithName:(id)arg1 userInfo:(id)arg2 requireAsync:(char)arg3 ;
-(void)simulateFetchForTestBlock;
-(void)simulateDataCallbacksForTestBlockWithBodyData:(id)arg1 response:(id)arg2 responseData:(id)arg3 error:(id)arg4 ;
-(void)invokeOnCallbackQueue:(id)arg1 afterUserStopped:(char)arg2 block:(/*^block*/id)arg3 ;
-(void)invokeOnCallbackQueueUnlessStopped:(/*^block*/id)arg1 ;
-(void)invokeOnCallbackUnsynchronizedQueueAfterUserStopped:(char)arg1 block:(/*^block*/id)arg2 ;
-(void)simulateByteTransferReportWithDataLength:(long long)arg1 block:(/*^block*/id)arg2 ;
-(void)finishWithError:(id)arg1 shouldRetry:(char)arg2 ;
-(void)shouldRetryNowForStatus:(int)arg1 error:(id)arg2 forceAssumeRetry:(char)arg3 response:(/*^block*/id)arg4 ;
-(void)setSystemCompletionHandler:(/*^block*/id)arg1 ;
-(void)restoreDefaultStateForSessionIdentifierMetadata;
-(id)sessionIdentifierMetadataUnsynchronized;
-(id)sessionIdentifierDefaultMetadata;
-(void)invokeFetchCallbacksOnCallbackQueueWithData:(id)arg1 error:(id)arg2 ;
-(id)responseUnsynchronized;
-(int)statusCodeUnsynchronized;
-(void)setDidReceiveResponseBlock:(id)arg1 ;
-(void)setWillRedirectBlock:(id)arg1 ;
-(void)setSendProgressBlock:(id)arg1 ;
-(void)setReceivedProgressBlock:(id)arg1 ;
-(void)setAccumulateDataBlock:(id)arg1 ;
-(void)setWillCacheURLResponseBlock:(id)arg1 ;
-(void)setResumeDataBlock:(id)arg1 ;
-(/*^block*/id)systemCompletionHandler;
-(void)forgetSessionIdentifierForFetcher;
-(char)userStoppedFetching;
-(id)willRedirectBlock;
-(void)invokeOnCallbackQueueAfterUserStopped:(char)arg1 block:(/*^block*/id)arg2 ;
-(/*^block*/id)loggedStreamProviderForStreamProvider:(/*^block*/id)arg1 ;
-(id)sessionNeedingInvalidation;
-(void)setSessionNeedingInvalidation:(id)arg1 ;
-(char)hasLoggedError;
-(void)setHasLoggedError:(char)arg1 ;
-(char)isRetryEnabledUnsynchronized;
-(char)hasRetryAfterInterval;
-(double)nextRetryIntervalUnsynchronized;
-(id)responseHeadersUnsynchronized;
-(double)retryAfterInterval;
-(NSDictionary *)sessionUserInfo;
-(void)setSessionUserInfo:(NSDictionary *)arg1 ;
-(id)sessionIdentifierMetadata;
-(id)mutableRequestUnsynchronized;
-(long long)bodyLength;
-(void)setBodyFileURL:(NSURL *)arg1 ;
-(NSData *)loggedStreamData;
-(void)appendLoggedStreamData:(id)arg1 ;
-(void)clearLoggedStreamData;
-(void)setDeferResponseBodyLogging:(char)arg1 ;
-(char)deferResponseBodyLogging;
-(char)wasCreatedFromBackgroundSession;
-(float)taskPriority;
-(void)setTaskPriority:(float)arg1 ;
-(id)bodyStreamProvider;
-(void)setBodyStreamProvider:(id)arg1 ;
-(id)accumulateDataBlock;
-(id)receivedProgressBlock;
-(id)resumeDataBlock;
-(id)didReceiveResponseBlock;
-(id)sendProgressBlock;
-(id)willCacheURLResponseBlock;
-(char)useUploadTask;
-(void)setUseUploadTask:(char)arg1 ;
-(NSDate *)initialBeginFetchDate;
-(NSURL *)redirectedFromURL;
-(void)setRedirectedFromURL:(NSURL *)arg1 ;
-(id)initWithRequest:(id)arg1 configuration:(id)arg2 ;
-(NSOperationQueue *)sessionDelegateQueue;
-(void)setSessionDelegateQueue:(NSOperationQueue *)arg1 ;
-(char)allowInvalidServerCertificates;
-(void)setAllowInvalidServerCertificates:(char)arg1 ;
-(char)skipBackgroundTask;
-(void)setSkipBackgroundTask:(char)arg1 ;
-(id)testBlock;
-(void)setTestBlock:(id)arg1 ;
-(char)isUsingBackgroundSession;
-(char)canShareSession;
-(GTMSessionUploadFetcher *)parentUploadFetcher;
-(id)propertyForKey:(id)arg1 ;
-(void)setProperty:(id)arg1 forKey:(id)arg2 ;
-(void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveResponse:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)URLSession:(id)arg1 dataTask:(id)arg2 didBecomeDownloadTask:(id)arg3 ;
-(void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveData:(id)arg3 ;
-(void)URLSession:(id)arg1 dataTask:(id)arg2 willCacheResponse:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)URLSession:(id)arg1 task:(id)arg2 willPerformHTTPRedirection:(id)arg3 newRequest:(id)arg4 completionHandler:(/*^block*/id)arg5 ;
-(void)URLSession:(id)arg1 task:(id)arg2 didReceiveChallenge:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)URLSession:(id)arg1 task:(id)arg2 needNewBodyStream:(/*^block*/id)arg3 ;
-(void)URLSession:(id)arg1 task:(id)arg2 didSendBodyData:(long long)arg3 totalBytesSent:(long long)arg4 totalBytesExpectedToSend:(long long)arg5 ;
-(void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3 ;
-(void)URLSession:(id)arg1 didBecomeInvalidWithError:(id)arg2 ;
-(void)URLSessionDidFinishEventsForBackgroundURLSession:(id)arg1 ;
-(void)setCredential:(NSURLCredential *)arg1 ;
-(NSURLSession *)session;
-(void)setComment:(NSString *)arg1 ;
-(void)dealloc;
-(id)init;
-(NSString *)description;
-(NSString *)sessionIdentifier;
-(id)completionHandler;
-(void)setCompletionHandler:(id)arg1 ;
-(id)copyWithZone:(NSZone*)arg1 ;
-(void)setConfiguration:(NSURLSessionConfiguration *)arg1 ;
-(NSString *)log;
-(NSURLResponse *)response;
-(NSURLSessionConfiguration *)configuration;
-(int)statusCode;
-(id)initWithRequest:(id)arg1 ;
-(id)configurationBlock;
-(void)setConfigurationBlock:(id)arg1 ;
-(id)userData;
-(void)setUserData:(id)arg1 ;
-(NSDictionary *)properties;
-(void)setProperties:(NSDictionary *)arg1 ;
-(void)setBackgroundTaskIdentifier:(unsigned)arg1 ;
-(unsigned)backgroundTaskIdentifier;
-(void)setSessionIdentifier:(NSString *)arg1 ;
-(id<GTMSessionFetcherServiceProtocol>)service;
-(void)setSession:(NSURLSession *)arg1 ;
-(void)setCookieStorage:(NSHTTPCookieStorage *)arg1 ;
-(NSString *)taskDescription;
-(NSDictionary *)responseHeaders;
-(id)downloadProgressBlock;
-(void)setDownloadProgressBlock:(id)arg1 ;
-(void)setTaskDescription:(NSString *)arg1 ;
-(void)setDownloadedData:(NSData *)arg1 ;
-(unsigned)retryCount;
-(NSURLCredential *)credential;
-(void)setCallbackQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(NSObject*<OS_dispatch_queue>)callbackQueue;
-(void)setResponse:(NSURLResponse *)arg1 ;
-(NSURLSessionTask *)sessionTask;
-(void)setSessionTask:(NSURLSessionTask *)arg1 ;
-(id)retryTimer;
-(void)setBodyData:(NSData *)arg1 ;
-(char)isFetching;
-(void)URLSession:(id)arg1 downloadTask:(id)arg2 didFinishDownloadingToURL:(id)arg3 ;
-(void)URLSession:(id)arg1 downloadTask:(id)arg2 didWriteData:(long long)arg3 totalBytesWritten:(long long)arg4 totalBytesExpectedToWrite:(long long)arg5 ;
-(void)URLSession:(id)arg1 downloadTask:(id)arg2 didResumeAtOffset:(long long)arg3 expectedTotalBytes:(long long)arg4 ;
-(NSString *)comment;
-(void)setUsingBackgroundSession:(char)arg1 ;
-(NSData *)bodyData;
-(NSURL *)destinationFileURL;
-(void)setDestinationFileURL:(NSURL *)arg1 ;
-(NSString *)serviceHost;
-(void)endBackgroundTask;
-(void)setService:(id<GTMSessionFetcherServiceProtocol>)arg1 ;
-(void)setLog:(NSString *)arg1 ;
@end

