/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 14, 2016 at 2:35:25 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/ABE77428-6C25-43C9-8AD9-E0579EF1E1DA/WhatsApp.app/WhatsApp
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@class WAPttPlayer, NSData, NSString, GPBMessage, GPBEnumDescriptor, NSOutputStream;

typedef struct CGSize {
	float width;
	float height;
} CGSize;

typedef struct CGPoint {
	float x;
	float y;
} CGPoint;

typedef struct CGRect {
	CGPoint origin;
	CGSize size;
} CGRect;

typedef struct {
	long long value;
	int timescale;
	unsigned flags;
	long long epoch;
} SCD_Struct_WA3;

typedef struct {
	SCD_Struct_WA3 start;
	SCD_Struct_WA3 duration;
} SCD_Struct_WA4;

typedef struct _NSZone* NSZoneRef;

typedef struct {
	double x;
	double y;
} SCD_Struct_WA6;

typedef struct {
	SCD_Struct_WA6 origin;
	SCD_Struct_WA6 size;
} SCD_Struct_WA7;

typedef struct UIEdgeInsets {
	float top;
	float left;
	float bottom;
	float right;
} UIEdgeInsets;

typedef struct CGPDFDocument* CGPDFDocumentRef;

typedef struct __CFString* CFStringRef;

typedef struct {
	char* body_data;
	long body_storage;
	long body_fill;
	long body_returned;
	int lacing_vals;
	long long granule_vals;
	long lacing_storage;
	long lacing_fill;
	long lacing_packet;
	long lacing_returned;
	unsigned char header[282];
	int header_fill;
	int e_o_s;
	int b_o_s;
	long serialno;
	long pageno;
	long long packetno;
	long long granulepos;
} SCD_Struct_WA11;

typedef struct opaque_pthread_mutex_t {
	long __sig;
	char __opaque[40];
} opaque_pthread_mutex_t;

typedef struct opusEncodingInfo {
	__sFILE file;
	long long currentPosition;
	long long recordTime;
	OpusEncoder opusEncoder;
	SCD_Struct_WA11 ogg_stream_state;
	short pcmBuffer[320];
	int pcmBufferCount;
	opaque_pthread_mutex_t opusInfoMutex;
} opusEncodingInfo;

typedef struct OpaqueAudioQueue* OpaqueAudioQueueRef;

typedef struct CGAffineTransform {
	float a;
	float b;
	float c;
	float d;
	float tx;
	float ty;
} CGAffineTransform;

typedef struct {
	unsigned long long field1;
	unsigned long long field2;
	unsigned long long field3;
	unsigned long long field4;
} SCD_Struct_WA16;

typedef struct {
	SCD_Struct_WA16 field1;
	long long field2;
	long long field3;
	long long field4;
	unsigned long long field5;
} SCD_Struct_WA17;

typedef struct CGPattern* CGPatternRef;

typedef struct __SCNetworkReachability* SCNetworkReachabilityRef;

typedef struct {
	int version;
	void info;
	/*function pointer*/void* retain;
	/*function pointer*/void* release;
	/*function pointer*/void* copyDescription;
} SCD_Struct_XM20;

typedef struct opusInfo {
	OggOpusFile file;
	long long length;
	long long currentPosition;
	BOOL reachedEof;
	unsigned short numAqBuffersDisposed;
	WAPttPlayer* pttPlayer;
} opusInfo;

typedef struct amrNBInfo {
	__sFILE file;
	int length;
	int currentPosition;
	void amrNBDecoder;
	BOOL reachedEof;
	unsigned short numAqBuffersDisposed;
	WAPttPlayer* pttPlayer;
} amrNBInfo;

typedef struct amrWBInfo {
	__sFILE file;
	int length;
	int currentPosition;
	void amrWBDecoder;
	BOOL reachedEof;
	unsigned short numAqBuffersDisposed;
	WAPttPlayer* pttPlayer;
} amrWBInfo;

typedef struct axolotl_store_context* axolotl_store_contextRef;

typedef struct ratchet_identity_key_pair* ratchet_identity_key_pairRef;

typedef struct axolotl_context* axolotl_contextRef;

typedef struct sb_stemmer* sb_stemmerRef;

typedef struct ec_public_key* ec_public_keyRef;

typedef struct __CFReadStream* CFReadStreamRef;

typedef struct __CFWriteStream* CFWriteStreamRef;

typedef struct SSLContext* SSLContextRef;

typedef struct __CFHost* CFHostRef;

typedef struct CC_SHA256state_st {
	unsigned count[2];
	unsigned hash[8];
	unsigned wbuf[16];
} CC_SHA256state_st;

typedef struct {
	double call_side;
	double call_result;
	double call_setup_error_type;
	double call_offer_nack_error_code;
	double call_term_reason;
	double call_transport;
	double call_transport_ip_version;
	double call_network;
	double call_p2p_disabled;
	double call_transition_count;
	double call_relay_bind_status;
	double call_self_ipv4;
	double call_peer_ipv4;
	double call_relay_create_t;
	double call_agc_mode;
	double call_aec_mode;
	double call_ns_mode;
	double call_sw_aec_type;
	double call_sw_aec_mode;
	double call_aec_offset;
	double call_aec_tail_length;
	double call_echo_likelihood;
	double call_echo_likelihood_before_ec;
	double call_echo_energy;
	double call_play_cb_avg_t;
	double call_record_cb_avg_t;
	double call_clock_cb_avg_t;
	double call_playback_cb_stopped;
	double call_record_cb_stopped;
	double call_record_get_frame_avg_t;
	double call_tones_detected_in_ringback;
	double call_tones_detected_in_record;
	double call_tones_offset;
	double call_tones_offset_stddev;
	double call_t;
	double call_setup_t;
	double call_ringing_t;
	double call_offer_receipt_delay;
	double call_relay_to_relay_fallback_count;
	double call_p2p_to_relay_fallback_count;
	double call_min_rtt;
	double call_max_rtt;
	double call_avg_rtt;
	double call_last_rtt;
	double call_initial_rtt;
	double call_tx_pkt_loss_pct;
	double call_tx_pkt_error_pct;
	double call_tx_avg_bitrate;
	double call_tx_avg_bwe;
	double call_tx_min_jitter;
	double call_tx_max_jitter;
	double call_tx_avg_jitter;
	double call_tx_min_loss_period;
	double call_tx_max_loss_period;
	double call_tx_avg_loss_period;
	double call_rx_pkt_loss_pct;
	double call_rx_avg_bitrate;
	double call_rx_avg_bwe;
	double call_rx_min_jitter;
	double call_rx_max_jitter;
	double call_rx_avg_jitter;
	double call_rx_min_loss_period;
	double call_rx_max_loss_period;
	double call_rx_avg_loss_period;
	double call_rx_stopped_t;
	double call_start_time;
	double call_end_time;
	double call_accept_time;
	double call_reject_time;
	double create_sound_port_time;
	double avg_encode_ms;
	double avg_decode_ms;
	double avg_target_bitrate;
	double tx_total_bytes;
	double rx_total_bytes;
	double tx_total_bitrate;
	double rx_total_bitrate;
	double num_encoder_comp_stepdowns;
	char abtest_bucket[32];
	double jb_avg_delay;
	double jb_min_delay;
	double jb_max_delay;
	double jb_last_delay;
	double jb_empties;
	double jb_gets;
	double jb_puts;
	double jb_discards;
	char relay_server_address[32];
	double rc_minrtt;
	double rc_maxrtt;
	double call_record_silence_ratio;
	double call_record_max_energy_ratio;
	double call_record_frames_per_second;
	double call_playback_frames_per_second;
	double call_recent_record_frames_per_second;
	double call_recent_playback_frames_per_second;
	double call_audio_restart_count;
	double call_audio_restart_reason;
	double call_ec_restart_count;
	double call_interrupted_count;
	double call_ended_interrupted;
	double call_sampling_rate;
	double audio_buffer_underflow_per_second;
	double audio_buffer_overflow_per_second;
	double audio_buffer_frame_count;
	double low_data_usage_bitrate;
	double pings_sent;
	double pongs_received;
	double reflective_ports_diff;
	double call_end_reconnecting;
	double is_ipv6_capable;
} SCD_Struct_Ca34;

typedef struct {
	unsigned field1;
	unsigned char field2[16];
	unsigned short field3;
	unsigned char field4;
} SCD_Struct_Ca35;

typedef struct {
	int field1;
	int field2;
	unsigned field3;
	unsigned field4;
	unsigned field5;
	unsigned field6;
	unsigned field7;
	int field8;
	int field9;
	unsigned char field10;
	int field11;
	int field12;
	unsigned char field13;
	int field14;
	int field15;
	int field16;
	unsigned char field17;
	unsigned char field18;
	int field19;
} SCD_Struct_Ca36;

typedef struct {
	int field1;
	unsigned char field2;
	unsigned char field3;
	unsigned char field4;
	unsigned char field5;
	unsigned field6;
} SCD_Struct_Ca37;

typedef struct {
	int field1;
	int field2;
	unsigned char field3;
} SCD_Struct_Ca38;

typedef struct {
	unsigned char field1;
} SCD_Struct_Ca39;

typedef struct {
	unsigned char field1;
	unsigned char field2;
	unsigned char field3;
	unsigned char field4;
	unsigned short field5;
	unsigned char field6;
	int field7;
	unsigned short field8;
	int field9;
} SCD_Struct_Ca40;

typedef struct {
	int field1;
	unsigned char field2;
	int field3;
} SCD_Struct_Ca41;

typedef struct {
	unsigned char field1;
	unsigned char field2;
	unsigned field3;
	unsigned field4;
	unsigned field5;
	unsigned char field6;
	unsigned char field7;
	unsigned field8;
	unsigned field9;
	unsigned field10;
	int field11;
	unsigned field12;
	int field13;
	unsigned field14;
	int field15;
	unsigned field16;
	unsigned field17;
	int field18;
	int field19;
	unsigned char field20;
	int field21;
	unsigned field22;
	unsigned field23;
	int field24;
	unsigned field25;
} SCD_Struct_Ca42;

typedef struct {
	int field1;
	int field2;
	int field3;
	int field4;
	unsigned char field5;
} SCD_Struct_Ca43;

typedef struct {
	int field1;
	int field2;
	unsigned field3;
	unsigned field4;
	unsigned field5;
	int field6;
	unsigned char field7;
	int field8;
	unsigned field9;
} SCD_Struct_Ca44;

typedef struct {
	unsigned field1;
	unsigned field2;
	unsigned field3;
} SCD_Struct_Ca45;

typedef struct {
	unsigned char field1;
	unsigned field2;
	unsigned field3;
	int field4;
	unsigned field5;
	int field6;
} SCD_Struct_Ca46;

typedef struct {
	int field1;
	int field2;
	int field3;
	unsigned field4;
	unsigned field5;
	unsigned field6;
} SCD_Struct_Ca47;

typedef struct {
	unsigned char field1[256];
	int field2;
	unsigned char field3[256];
	int field4;
	unsigned char field5[32];
	int field6;
	unsigned char field7[32];
	int field8;
} SCD_Struct_Ca48;

typedef struct {
	SCD_Struct_Ca36 field1;
	SCD_Struct_Ca37 field2;
	SCD_Struct_Ca38 field3;
	SCD_Struct_Ca39 field4;
	SCD_Struct_Ca40 field5;
	SCD_Struct_Ca41 field6;
	int field7;
	SCD_Struct_Ca42 field8;
	SCD_Struct_Ca43 field9;
	SCD_Struct_Ca44 field10;
	SCD_Struct_Ca45 field11;
	SCD_Struct_Ca46 field12;
	SCD_Struct_Ca47 field13;
	unsigned char field14;
	int field15;
	int field16;
	int field17;
	int field18;
	int field19;
	char field20[32];
	unsigned field21;
	int field22;
	int field23;
	int field24;
	unsigned char field25;
	int field26;
	int field27;
	unsigned field28;
	unsigned field29;
	int field30;
	int field31;
	int field32;
	int field33;
} SCD_Struct_Ca49;

typedef struct {
	unsigned char field1;
	wa_call_relay_token field2[8];
} SCD_Struct_Ca50;

typedef struct {
	unsigned char field1;
	wa_call_relay_addr field2[8];
} SCD_Struct_Ca51;

typedef struct {
	unsigned char field1;
	SCD_Struct_Ca35 field2[20];
} SCD_Struct_Ca52;

typedef struct {
	unsigned char field1;
	char field2[32];
	char field3[64];
	unsigned field4;
	unsigned char field5[256];
	int field6;
	unsigned char field7[32];
	int field8;
	SCD_Struct_Ca48 field9;
	SCD_Struct_Ca49 field10;
	SCD_Struct_Ca50 field11;
	SCD_Struct_Ca51 field12;
	unsigned char field13[32];
	int field14;
	SCD_Struct_Ca52 field15;
} SCD_Struct_Ca53;

typedef struct {
	unsigned char field1;
	char field2[32];
	char field3[64];
	unsigned field4;
	SCD_Struct_Ca49 field5;
	SCD_Struct_Ca50 field6;
	SCD_Struct_Ca51 field7;
} SCD_Struct_Ca54;

typedef struct {
	unsigned field1;
	unsigned char field2[16];
	unsigned short field3;
	int field4;
} SCD_Struct_Ca55;

typedef struct {
	unsigned char field1;
	SCD_Struct_Ca55 field2[8];
} SCD_Struct_Ca56;

typedef struct {
	unsigned char field1;
	char field2[32];
	char field3[64];
	unsigned field4;
	unsigned char field5[16];
	unsigned short field6;
	int field7;
} SCD_Struct_Ca57;

typedef struct _CCCryptor* CCCryptorRef;

typedef struct {
	unsigned ctx[96];
} SCD_Struct_WA59;

typedef struct {
	CGSize field1;
	CGPoint field2;
	float field3;
} SCD_Struct_WA60;

typedef struct opaqueCMBufferQueue* opaqueCMBufferQueueRef;

typedef struct opaqueCMSampleBuffer* opaqueCMSampleBufferRef;

typedef struct __CVBuffer* CVBufferRef;

typedef struct fingerprint* fingerprintRef;

typedef struct NSRange {
	unsigned location;
	unsigned length;
} NSRange;

typedef struct {
	tm_zip_s field1;
	unsigned field2;
	unsigned field3;
	unsigned field4;
} SCD_Struct_SS66;

typedef struct CGContext* CGContextRef;

typedef struct __CTFramesetter* CTFramesetterRef;

typedef struct __CTLine* CTLineRef;

typedef struct {
	int field1;
	int field2;
} SCD_Struct_Te70;

typedef struct opaqueCMFormatDescription* opaqueCMFormatDescriptionRef;

typedef struct {
	SCD_Struct_WA3 duration;
	SCD_Struct_WA3 presentationTimeStamp;
	SCD_Struct_WA3 decodeTimeStamp;
} SCD_Struct_WA72;

typedef struct sqlite3* sqlite3Ref;

typedef struct sqlite3_stmt* sqlite3_stmtRef;

typedef struct {
	unsigned long field1;
	id field2;
	unsigned long field3;
	unsigned long field4[5];
} SCD_Struct_WA75;

typedef struct __SecTrust* SecTrustRef;

typedef struct {
	CGSize cropSize;
	CGPoint anchorPoint;
	float rotationAngle;
} SCD_Struct_WA77;

typedef struct __CFRunLoop* CFRunLoopRef;

typedef struct __CFSocket* CFSocketRef;

typedef struct {
	unsigned field1;
	sockaddr field2;
	/*function pointer*/void* field3;
	/*function pointer*/void* field4;
	/*function pointer*/void* field5;
	/*function pointer*/void* field6;
	/*function pointer*/void* field7;
} SCD_Struct_WA80;

typedef struct GPBCodedInputStreamState {
	char* bytes;
	unsigned bufferSize;
	unsigned bufferPos;
	unsigned currentLimit;
	int lastTag;
	unsigned recursionDepth;
} GPBCodedInputStreamState;

typedef struct __CFDictionary* CFDictionaryRef;

typedef union {
	char valueBool;
	int valueInt32;
	long long valueInt64;
	unsigned valueUInt32;
	unsigned long long valueUInt64;
	float valueFloat;
	double valueDouble;
	NSData* valueData;
	NSString* valueString;
	GPBMessage* valueMessage;
	int valueEnum;
} SCD_Union_GP83;

typedef union {
	GPBEnumDescriptor* enumDescriptor_;
	/*function pointer*/void* enumVerifier_;
} SCD_Union_GP84;

typedef struct GPBOutputBufferState {
	char* bytes;
	unsigned size;
	unsigned position;
	NSOutputStream* output;
} GPBOutputBufferState;

