/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 14, 2016 at 2:35:16 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/ABE77428-6C25-43C9-8AD9-E0579EF1E1DA/WhatsApp.app/WhatsApp
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <WhatsApp/XMPPSocketDelegate.h>

@protocol XMPPStreamDelegate;
@class XMPPBinaryCoder, NSMutableData, XMPPSocket, ExecutionTimeProfiler, NSMutableArray, NSDictionary, WATimer, NoiseHandshakeManager, NoiseStreamCipher, WAECPublicKey, NSString, NSData, WAECKeyPair;

@interface XMPPStream : NSObject <XMPPSocketDelegate> {

	XMPPBinaryCoder* _binaryCoder;
	NSMutableData* _incomingBuffer;
	XMPPSocket* _socket;
	ExecutionTimeProfiler* _profiler;
	double _lastSocketReadTime;
	double _systemUptimeAtLastSocketRead;
	NSMutableArray* _messages;
	char _firstPresenceReceived;
	NSDictionary* _connectionInfo;
	unsigned _busySocketTask;
	char _isDisconnecting;
	char _isAckKick;
	WATimer* _socketIdleTimer;
	NoiseHandshakeManager* _handshakeManager;
	NoiseStreamCipher* _streamCipher;
	WAECPublicKey* _serverStaticPublicKey;
	char _contactsAccessAllowed;
	char _xmppPassiveMode;
	char _opened;
	id<XMPPStreamDelegate> _delegate;
	NSString* _xmppUser;
	NSData* _xmppPassword;
	WAECKeyPair* _clientStaticKeyPair;
	double _lastOfflineStanzaTime;

}

@property (assign,nonatomic,__weak) id<XMPPStreamDelegate> delegate;                                 //@synthesize delegate=_delegate - In the implementation block
@property (assign,getter=isContactsAccessAllowed,nonatomic) char contactsAccessAllowed;              //@synthesize contactsAccessAllowed=_contactsAccessAllowed - In the implementation block
@property (nonatomic,retain) NSString * xmppUser;                                                    //@synthesize xmppUser=_xmppUser - In the implementation block
@property (nonatomic,retain) NSData * xmppPassword;                                                  //@synthesize xmppPassword=_xmppPassword - In the implementation block
@property (nonatomic,retain) WAECKeyPair * clientStaticKeyPair;                                      //@synthesize clientStaticKeyPair=_clientStaticKeyPair - In the implementation block
@property (assign,nonatomic) char xmppPassiveMode;                                                   //@synthesize xmppPassiveMode=_xmppPassiveMode - In the implementation block
@property (nonatomic,readonly) double elapsedTimeSinceLastReadData; 
@property (nonatomic,readonly) double lastOfflineStanzaTime;                                         //@synthesize lastOfflineStanzaTime=_lastOfflineStanzaTime - In the implementation block
@property (getter=isOpened,nonatomic,readonly) char opened;                                          //@synthesize opened=_opened - In the implementation block
@property (nonatomic,readonly) NSObject*<OS_dispatch_queue> queue; 
@property (assign,nonatomic) char bindsToCellularNetwork; 
@property (nonatomic,copy,readonly) NSString * currentIPAddress; 
@property (nonatomic,copy,readonly) NSString * currentHost; 
@property (nonatomic,readonly) unsigned short currentPort; 
@property (nonatomic,copy) NSString * hintIPAdress; 
@property (getter=isSocketAlive,nonatomic,readonly) char socketAlive; 
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)savedServerStatic;
+(id)serverStaticKeychainQuery;
+(void)storeServerStatic:(id)arg1 ;
-(unsigned)sendElement:(id)arg1 timeout:(double)arg2 ;
-(void)setXmppUser:(NSString *)arg1 ;
-(void)setXmppPassiveMode:(char)arg1 ;
-(void)setContactsAccessAllowed:(char)arg1 ;
-(NSString *)currentIPAddress;
-(unsigned short)currentPort;
-(NSString *)xmppUser;
-(WAECKeyPair *)clientStaticKeyPair;
-(void)shutDownStream;
-(void)disconnectImmediately;
-(void)setHintIPAdress:(NSString *)arg1 ;
-(double)elapsedTimeSinceLastReadData;
-(char)bindsToCellularNetwork;
-(unsigned)sendElement:(id)arg1 ;
-(void)setClientStaticKeyPair:(WAECKeyPair *)arg1 ;
-(void)setXmppPassword:(NSData *)arg1 ;
-(NSData *)xmppPassword;
-(char)xmppPassiveMode;
-(void)sendStreamEndAndDisconnect;
-(double)lastOfflineStanzaTime;
-(char)isSocketAlive;
-(void)setBindsToCellularNetwork:(char)arg1 ;
-(void)writeNoiseFrameToSocketWithPayload:(id)arg1 encryptWithStreamCipher:(char)arg2 timeout:(double)arg3 ;
-(unsigned)internalSendElements:(id)arg1 timeout:(double)arg2 ;
-(unsigned)sendElements:(id)arg1 timeout:(double)arg2 ;
-(void)processMessages;
-(void)outputProfilingResults;
-(void)processStanza:(id)arg1 ;
-(void)startStreamWithLoginAdditions:(id)arg1 connectionInfo:(id)arg2 ;
-(void)reportIdleSocketAfterDelay;
-(id)clientPayloadWithLoginAdditions:(id)arg1 ;
-(unsigned)noiseFrameLengthFromHeader:(id)arg1 ;
-(void)processElements:(id)arg1 ;
-(void)invalidateBusySocketTimer;
-(void)xmppSocket:(id)arg1 willConnectToHost:(id)arg2 ;
-(void)xmppSocket:(id)arg1 didConnectToHost:(id)arg2 port:(unsigned short)arg3 ;
-(void)xmppSocket:(id)arg1 didReadData:(id)arg2 ;
-(void)xmppSocketDidWriteData:(id)arg1 ;
-(void)xmppSocketDidDisconnect:(id)arg1 ;
-(unsigned)sendElements:(id)arg1 ;
-(NSString *)hintIPAdress;
-(char)isContactsAccessAllowed;
-(NSString *)currentHost;
-(NSObject*<OS_dispatch_queue>)queue;
-(void)setDelegate:(id<XMPPStreamDelegate>)arg1 ;
-(void)dealloc;
-(id<XMPPStreamDelegate>)delegate;
-(id)initWithQueue:(id)arg1 ;
-(void)connect;
-(char)isOpened;
@end

