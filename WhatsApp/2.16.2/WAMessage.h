/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 14, 2016 at 2:35:14 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/ABE77428-6C25-43C9-8AD9-E0579EF1E1DA/WhatsApp.app/WhatsApp
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <WhatsApp/WhatsApp-Structs.h>
#import <CoreData/NSManagedObject.h>
#import <UIKit/UIActivityItemSource.h>
#import <WhatsApp/WAMediaUploadable.h>
#import <libobjc.A.dylib/QLPreviewItem.h>
#import <libobjc.A.dylib/QLPreviewControllerDataSource.h>

@protocol OS_dispatch_group;
@class NSString, NSData, NSSet, NSURL, NSObject, UIImage, WAMessageHelper, NSDate, NSNumber, WAChatSession, WAMediaItem, WAGroupMember, WAMessageInfo, NSArray;

@interface WAMessage : NSManagedObject <UIActivityItemSource, WAMediaUploadable, QLPreviewItem, QLPreviewControllerDataSource> {

	NSObject*<OS_dispatch_group> _locationInfoDispatchGroup;
	NSString* _mediaThumbnailCacheKey;
	NSObject*<OS_dispatch_group> _thumbnailLoadingDispatchGroup;
	int _loadRequestsInProgress;
	UIImage* _loadedThumbnail;
	char _messageSendInProgress;
	CGSize _previewAspectRatio;
	NSObject*<OS_dispatch_group> _sendDispatchGroup;
	char _scheduledForRemovalFromSearchIndex;
	WAMessageHelper* _helper;
	char _isMediaInspected;
	char _networkActivity;
	NSURL* _exportedURL;
	char _offlineStorage;
	char _sending;
	char _active;
	char _needsLocalNotification;
	char _sentFromWebClient;
	char _alwaysAutoDownload;
	int _multiSendMediaIndex;
	int _multiSendMediaCount;
	WAMessage* _precedingMessage;
	int _retrySendCount;
	NSString* _transientParticipantJID;
	NSData* _transientXMPPThumbnailData;

}

@property (nonatomic,retain) NSString * relativeXMPPThumbnailPath; 
@property (nonatomic,retain) NSString * relativeMediaPath; 
@property (getter=isEligibleForNotification,nonatomic,readonly) char eligibleForNotification; 
@property (getter=isEligibleToResortChats,nonatomic,readonly) char eligibleToResortChats; 
@property (getter=isEligibleForUnreadMessages,nonatomic,readonly) char eligibleForUnreadMessages; 
@property (getter=isEligibleForChatList,nonatomic,readonly) char eligibleForChatList; 
@property (nonatomic,readonly) char canBeForwarded; 
@property (nonatomic,readonly) char needsResend; 
@property (getter=isValid,nonatomic,readonly) char valid; 
@property (nonatomic,copy,readonly) NSString * starIcon; 
@property (nonatomic,readonly) CGSize preferredPreviewAspectRatio; 
@property (nonatomic,copy,readonly) NSString * stringRepresentation; 
@property (nonatomic,copy,readonly) NSString * stringRepresentationForChat; 
@property (nonatomic,copy,readonly) NSString * stringRepresentationForNotification; 
@property (nonatomic,copy,readonly) NSString * stringRepresentationForVoiceOver; 
@property (nonatomic,readonly) NSString * mediaBrowserThumbnailPath; 
@property (nonatomic,readonly) float searchQualityScore; 
@property (nonatomic,copy,readonly) NSString * textForSearchIndex; 
@property (nonatomic,readonly) int searchEngineDocumentType; 
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) WAMessageHelper * helper; 
@property (nonatomic,retain) NSString * fromJID; 
@property (nonatomic,retain) NSString * toJID; 
@property (nonatomic,retain) NSString * stanzaID; 
@property (nonatomic,retain) NSString * text; 
@property (nonatomic,retain) NSDate * messageDate; 
@property (nonatomic,retain) NSDate * sentDate; 
@property (nonatomic,retain) NSNumber * messageType; 
@property (getter=isUserMessage,nonatomic,readonly) char userMessage; 
@property (nonatomic,retain) NSNumber * messageStatus; 
@property (nonatomic,retain) NSNumber * messageErrorStatus; 
@property (nonatomic,retain) NSNumber * isFromMe; 
@property (nonatomic,retain) NSNumber * sort; 
@property (nonatomic,retain) NSNumber * groupEventType; 
@property (assign,nonatomic) unsigned systemEvent; 
@property (nonatomic,retain) NSString * pushName; 
@property (nonatomic,retain) NSNumber * flags; 
@property (assign,getter=isBroadcast,nonatomic) char broadcast; 
@property (nonatomic,retain) NSString * mediaSectionID; 
@property (nonatomic,retain) NSNumber * docID; 
@property (nonatomic,retain) NSNumber * spotlightStatus; 
@property (assign,nonatomic) char starred; 
@property (nonatomic,retain) NSNumber * dataItemVersion; 
@property (nonatomic,retain) NSString * phash; 
@property (nonatomic,copy,readonly) NSString * participantJID; 
@property (nonatomic,copy,readonly) NSString * senderJID; 
@property (nonatomic,copy,readonly) NSString * uniqueKey; 
@property (nonatomic,copy,readonly) NSString * downloadIdentifier; 
@property (nonatomic,readonly) char storesMediaExternally; 
@property (nonatomic,readonly) char containsUndownloadedMedia; 
@property (nonatomic,readonly) char containsReplyContext; 
@property (nonatomic,retain) WAChatSession * chatSession; 
@property (nonatomic,retain) WAMediaItem * mediaItem; 
@property (nonatomic,retain) WAGroupMember * groupMember; 
@property (nonatomic,retain) WAMessageInfo * messageInfo; 
@property (nonatomic,retain) WAMessage * parentMessage; 
@property (nonatomic,retain) NSSet * childMessages; 
@property (nonatomic,retain) NSNumber * filteredRecipientCount; 
@property (nonatomic,retain) NSNumber * childMessagesDeliveredCount; 
@property (nonatomic,retain) NSNumber * childMessagesReadCount; 
@property (nonatomic,retain) NSNumber * childMessagesPlayedCount; 
@property (nonatomic,retain) NSNumber * encRetryCount; 
@property (nonatomic,retain) NSString * placeDetails; 
@property (assign,nonatomic) int pageCount; 
@property (nonatomic,copy) NSString * MIMEType; 
@property (nonatomic,copy) NSString * vCardName; 
@property (nonatomic,copy) NSString * vCardString; 
@property (nonatomic,copy) NSString * fileHash; 
@property (nonatomic,copy) NSString * authorName; 
@property (nonatomic,copy) NSString * originalFilename; 
@property (nonatomic,retain) NSNumber * movieDuration; 
@property (nonatomic,retain) NSNumber * longitude; 
@property (nonatomic,retain) NSNumber * latitude; 
@property (assign,nonatomic) int mediaWidth; 
@property (assign,nonatomic) int mediaHeight; 
@property (nonatomic,readonly) char hasValidMediaDimensions; 
@property (nonatomic,readonly) NSString * relativeXMPPThumbnailPath; 
@property (nonatomic,readonly) NSString * relativeMediaPath; 
@property (nonatomic,readonly) NSString * preferredFilenameForExport; 
@property (assign,nonatomic) char offlineStorage;                                                              //@synthesize offlineStorage=_offlineStorage - In the implementation block
@property (assign,nonatomic) char needsLocalNotification;                                                      //@synthesize needsLocalNotification=_needsLocalNotification - In the implementation block
@property (assign,nonatomic) int retrySendCount;                                                               //@synthesize retrySendCount=_retrySendCount - In the implementation block
@property (assign,nonatomic) int multiSendMediaIndex;                                                          //@synthesize multiSendMediaIndex=_multiSendMediaIndex - In the implementation block
@property (assign,nonatomic) int multiSendMediaCount;                                                          //@synthesize multiSendMediaCount=_multiSendMediaCount - In the implementation block
@property (assign,getter=isActive,nonatomic) char active;                                                      //@synthesize active=_active - In the implementation block
@property (nonatomic,copy,readonly) NSArray * changedKeyPaths; 
@property (assign,getter=isSentFromWebClient,nonatomic) char sentFromWebClient;                                //@synthesize sentFromWebClient=_sentFromWebClient - In the implementation block
@property (assign,getter=isSending,nonatomic) char sending;                                                    //@synthesize sending=_sending - In the implementation block
@property (assign,nonatomic) char networkActivity; 
@property (nonatomic,copy) NSString * transientParticipantJID;                                                 //@synthesize transientParticipantJID=_transientParticipantJID - In the implementation block
@property (nonatomic,retain) NSData * transientXMPPThumbnailData;                                              //@synthesize transientXMPPThumbnailData=_transientXMPPThumbnailData - In the implementation block
@property (assign,nonatomic) char alwaysAutoDownload;                                                          //@synthesize alwaysAutoDownload=_alwaysAutoDownload - In the implementation block
@property (nonatomic,copy,readonly) NSString * contactNameMedium; 
@property (nonatomic,copy,readonly) NSString * contactNameShort; 
@property (nonatomic,retain) WAMessage * precedingMessage;                                                     //@synthesize precedingMessage=_precedingMessage - In the implementation block
@property (nonatomic,copy,readonly) NSString * mediaPath; 
@property (nonatomic,readonly) NSString * xmppThumbnailPath; 
@property (nonatomic,retain) NSSet * dataItems; 
@property (nonatomic,readonly) id<NSObject><NSCopying> uniqueID; 
@property (nonatomic,readonly) unsigned mediaType; 
@property (nonatomic,readonly) unsigned mediaOrigin; 
@property (nonatomic,readonly) char isPTT; 
@property (nonatomic,readonly) int httpRetryCount; 
@property (nonatomic,copy,readonly) NSString * mediaCollectionName; 
@property (nonatomic,readonly) NSData * mediaKey; 
@property (nonatomic,readonly) NSSet * recipientsJids; 
@property (nonatomic,readonly) NSURL * previewItemURL; 
@property (nonatomic,readonly) NSString * previewItemTitle; 
+(id)mediaSectionIDLowerBoundForDocumentMessages;
+(id)mediaSectionIDUpperBoundForDocumentMessages;
+(unsigned)orphanedMessagesCount;
+(void)createNewOutgoingMessageWithImage:(id)arg1 caption:(id)arg2 collectionID:(id)arg3 index:(int)arg4 count:(int)arg5 replyingToMessage:(id)arg6 inChatSession:(id)arg7 completion:(/*^block*/id)arg8 ;
+(void)createNewOutgoingMessageWithVideoURL:(id)arg1 caption:(id)arg2 collectionID:(id)arg3 index:(int)arg4 count:(int)arg5 replyingToMessage:(id)arg6 inChatSession:(id)arg7 completion:(/*^block*/id)arg8 ;
+(void)createNewOutgoingMessageWithDocumentAttachment:(id)arg1 replyingToMessage:(id)arg2 inChatSession:(id)arg3 completion:(/*^block*/id)arg4 ;
+(void)createNewOutgoingMessageWithAudioTrack:(id)arg1 replyingToMessage:(id)arg2 inChatSession:(id)arg3 completion:(/*^block*/id)arg4 ;
+(void)createNewOutgoingMessageWithPlace:(id)arg1 replyingToMessage:(id)arg2 inChatSession:(id)arg3 completion:(/*^block*/id)arg4 ;
+(id)mediaDirectoryForFilename:(id)arg1 JID:(id)arg2 ;
+(id)relativeLibraryPathFromAbsolutePath:(id)arg1 ;
+(id)dateFormatterForMediaSectionID;
+(id)mediaSectionIDForMessage:(id)arg1 usingDateFormatter:(id)arg2 ;
+(id)randomMediaUploadIdentifier;
+(id)randomMediaEncryptionKey;
+(id)mediaSectionIDUpperBoundForMediaMessages;
+(char)getChatJID:(id*)arg1 stanzaID:(id*)arg2 participant:(id*)arg3 isFromMe:(char*)arg4 fromUniqueKey:(id)arg5 ;
+(char)areAllMessages:(id)arg1 ofType:(unsigned)arg2 ;
+(void)createNewOutgoingMessageWithMedia:(id)arg1 MIMEType:(id)arg2 caption:(id)arg3 collectionID:(id)arg4 replyingToMessage:(id)arg5 inChatSession:(id)arg6 messageType:(unsigned)arg7 mediaOrigin:(unsigned)arg8 completion:(/*^block*/id)arg9 ;
+(id)mediaThumbnailCache;
+(id)mediaBrowserThumbnailForUnknownMedia;
-(NSString *)participantJID;
-(void)setMessageStatus:(NSNumber *)arg1 ;
-(void)setTransientXMPPThumbnailData:(NSData *)arg1 ;
-(void)setMovieDuration:(NSNumber *)arg1 ;
-(NSString *)mediaCollectionName;
-(int)mediaWidth;
-(int)mediaHeight;
-(void)setMediaWidth:(int)arg1 ;
-(void)setMediaHeight:(int)arg1 ;
-(void)setMIMEType:(NSString *)arg1 ;
-(unsigned)mediaOrigin;
-(void)setVCardName:(NSString *)arg1 ;
-(void)setVCardString:(NSString *)arg1 ;
-(void)setPlaceDetails:(NSString *)arg1 ;
-(char)storesMediaExternally;
-(void)setOfflineStorage:(char)arg1 ;
-(void)setNeedsLocalNotification:(char)arg1 ;
-(void)setSystemEvent:(unsigned)arg1 ;
-(NSData *)transientXMPPThumbnailData;
-(id)incomingFilePathForFileType:(id)arg1 ;
-(char)hasValidMediaDimensions;
-(NSString *)relativeMediaPath;
-(void)requestImageWithQuality:(unsigned)arg1 options:(unsigned)arg2 resultHandler:(/*^block*/id)arg3 ;
-(void)attachXMPPThumbnailData:(id)arg1 completion:(/*^block*/id)arg2 ;
-(id)addChildMessagesIfNeeded;
-(void)sendServerErrorReceiptIfNeeded;
-(int)retrySendCount;
-(void)setRetrySendCount:(int)arg1 ;
-(void)generateKeysForMediaEncryptionIfNeeded;
-(NSString *)relativeXMPPThumbnailPath;
-(void)setRelativeMediaPath:(NSString *)arg1 ;
-(void)setRelativeXMPPThumbnailPath:(NSString *)arg1 ;
-(void)copyMediaItemPropertiesForForwardingFromMessage:(id)arg1 ;
-(void)updateMediaSectionID;
-(void)attachQuotedMessage:(id)arg1 ;
-(void)fetchRequiredDataForWAPlace:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(NSString *)vCardString;
-(char)isEligibleForChatList;
-(char)isEligibleToResortChats;
-(char)isEligibleForUnreadMessages;
-(NSArray *)changedKeyPaths;
-(void)updateReceiptInfoFrom:(id)arg1 status:(unsigned)arg2 date:(id)arg3 ;
-(void)updateWithLocation:(id)arg1 ;
-(NSString *)vCardName;
-(void)setHighQualityImage:(id)arg1 ;
-(NSString *)xmppThumbnailPath;
-(NSString *)contactNameShort;
-(void)fetchMediaBrowserThumbnailWithCompletionHandler:(/*^block*/id)arg1 ;
-(char)canBeForwarded;
-(id)cachedMediaBrowserThumbnail;
-(NSString *)stringRepresentationForVoiceOver;
-(char)offlineStorage;
-(char)isEligibleForNotification;
-(NSString *)stringRepresentationForNotification;
-(char)needsLocalNotification;
-(NSString *)placeDetails;
-(NSString *)senderJID;
-(CGSize)preferredPreviewAspectRatio;
-(char)containsUndownloadedMedia;
-(void)generateMediaThumbnailCacheKey;
-(char)isUserMessage;
-(void)markSendAsCompletedIfNecessary;
-(char)hasFlag:(unsigned)arg1 ;
-(void)unsetFlag:(unsigned)arg1 ;
-(NSString *)transientParticipantJID;
-(void)markSendAsStartedIfNecessary;
-(void)internalSetNetworkActivity:(char)arg1 ;
-(char)isSentFromWebClient;
-(int)httpRetryCount;
-(void)setMediaMimeType:(id)arg1 newMediaPath:(id)arg2 ;
-(char)isPTT;
-(int)multiSendMediaIndex;
-(int)multiSendMediaCount;
-(NSSet *)recipientsJids;
-(NSString *)contactNameMedium;
-(void)setBroadcast:(char)arg1 ;
-(char)containsReplyContext;
-(void)performBlockAfterSendMessageAttempt:(/*^block*/id)arg1 ;
-(void)inspectMediaIfNeeded;
-(unsigned)systemEvent;
-(NSString *)preferredFilenameForExport;
-(void)setMultiSendMediaIndex:(int)arg1 ;
-(void)setMultiSendMediaCount:(int)arg1 ;
-(WAMessage *)precedingMessage;
-(void)setPrecedingMessage:(WAMessage *)arg1 ;
-(void)setTransientParticipantJID:(NSString *)arg1 ;
-(void)setSentFromWebClient:(char)arg1 ;
-(char)alwaysAutoDownload;
-(void)setAlwaysAutoDownload:(char)arg1 ;
-(NSString *)stringRepresentationForChat;
-(NSString *)textForSearchIndex;
-(char)needsResend;
-(NSString *)starIcon;
-(int)searchEngineDocumentType;
-(float)searchQualityScore;
-(id)uniqueMediaPathWithPathExtension:(id)arg1 ;
-(NSString *)mediaBrowserThumbnailPath;
-(void)beginRetainingCachedImages;
-(void)endRetainingCachedImages;
-(void)generateMediaBrowserThumbnailWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)attachMediaAtPath:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)prepareXMPPThumbnailWithBaseImage:(id)arg1 filename:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)prepareXMPPThumbnailWithFilename:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)populateChildMessage:(id)arg1 ;
-(id)mediaPathForIncomingMediaWithFilename:(id)arg1 ;
-(void)updateMediaLocalPathWithAbsolutePath:(id)arg1 ;
-(id)formattedStringWithFormat:(unsigned)arg1 ;
-(NSNumber *)movieDuration;
-(WAMessageHelper *)helper;
-(void)setNetworkActivity:(char)arg1 ;
-(char)networkActivity;
-(NSString *)downloadIdentifier;
-(unsigned)mediaType;
-(NSString *)mediaPath;
-(NSNumber *)latitude;
-(NSNumber *)longitude;
-(char)isActive;
-(char)isValid;
-(void)setActive:(char)arg1 ;
-(NSString *)MIMEType;
-(int)pageCount;
-(void)setPageCount:(int)arg1 ;
-(id)activityViewControllerPlaceholderItem:(id)arg1 ;
-(id)activityViewController:(id)arg1 itemForActivityType:(id)arg2 ;
-(NSURL *)previewItemURL;
-(NSString *)previewItemTitle;
-(int)numberOfPreviewItemsInPreviewController:(id)arg1 ;
-(id)previewController:(id)arg1 previewItemAtIndex:(int)arg2 ;
-(id)activityViewController:(id)arg1 subjectForActivityType:(id)arg2 ;
-(id)activityViewController:(id)arg1 dataTypeIdentifierForActivityType:(id)arg2 ;
-(void)setFlag:(unsigned)arg1 ;
-(id<NSObject><NSCopying>)uniqueID;
-(void)setSending:(char)arg1 ;
-(char)isBroadcast;
-(void)setLatitude:(NSNumber *)arg1 ;
-(void)setLongitude:(NSNumber *)arg1 ;
-(NSString *)authorName;
-(void)setAuthorName:(NSString *)arg1 ;
-(char)isSending;
-(void)setOriginalFilename:(NSString *)arg1 ;
-(NSString *)originalFilename;
-(NSString *)fileHash;
-(void)setFileHash:(NSString *)arg1 ;
-(void)awakeFromInsert;
-(void)willSave;
-(void)awakeFromFetch;
-(void)didTurnIntoFault;
-(NSData *)mediaKey;
-(NSString *)stringRepresentation;
-(NSString *)uniqueKey;
@end

