/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 14, 2016 at 2:35:13 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/ABE77428-6C25-43C9-8AD9-E0579EF1E1DA/WhatsApp.app/WhatsApp
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <WhatsApp/WhatsApp-Structs.h>
#import <WhatsApp/WAViewController.h>
#import <UIKit/UICollectionViewDataSource.h>
#import <UIKit/UICollectionViewDelegate.h>
#import <WhatsApp/WAMediaBrowserCollectionViewCellDelegate.h>
#import <WhatsApp/WAMediaBrowserToolbarDelegate.h>
#import <libobjc.A.dylib/ABPeoplePickerNavigationControllerDelegate.h>
#import <WhatsApp/WANoOpGestureRecognizerTouchDelegate.h>
#import <WhatsApp/WANavigationControllerPopFromAnimating.h>
#import <WhatsApp/WAImageToImageTransitioning.h>
#import <WhatsApp/WAImageToImagePanPopGestureRecognizerDelegate.h>

@class UINavigationController, WAMediaBrowserToolbar, WAMediaCaptionView, WAMediaBrowserCollectionView, UICollectionViewFlowLayout, WAMediaManager, WAImageToImagePanPopGestureRecognizer, UIView, UIActivityIndicatorView, WAMediaBrowserTitleView, NSMutableArray, NSMutableIndexSet, WANoOpGestureRecognizer, UIBarButtonItem, WAStarBarButtonItem, WAMessage, NSIndexPath, NSString;

@interface WAMediaBrowserViewController : WAViewController <UICollectionViewDataSource, UICollectionViewDelegate, WAMediaBrowserCollectionViewCellDelegate, WAMediaBrowserToolbarDelegate, ABPeoplePickerNavigationControllerDelegate, WANoOpGestureRecognizerTouchDelegate, WANavigationControllerPopFromAnimating, WAImageToImageTransitioning, WAImageToImagePanPopGestureRecognizerDelegate> {

	UINavigationController* _lastNavigationController;
	WAMediaBrowserToolbar* _toolbar;
	WAMediaCaptionView* _captionView;
	WAMediaBrowserCollectionView* _collectionView;
	UICollectionViewFlowLayout* _collectionViewLayout;
	WAMediaManager* _mediaManager;
	int _initialPageIndex;
	int _lastDisplayedPageIndex;
	char _needsAdjustCaptionViewAfterLayout;
	WAImageToImagePanPopGestureRecognizer* _panPopGesture;
	UIView* _busySpinnerView;
	UIActivityIndicatorView* _busySpinner;
	WAMediaBrowserTitleView* _titleView;
	NSMutableArray* _indexPathsToInsert;
	NSMutableArray* _indexPathsToDelete;
	NSMutableArray* _moveInfoToProcess;
	NSMutableIndexSet* _sectionsToInsert;
	NSMutableIndexSet* _sectionsToDelete;
	char _autoplayInitialItem;
	char _suppressToolbarUpdate;
	char _ignoreToolbarScrolling;
	WANoOpGestureRecognizer* _touchTracker;
	char _isInterfaceOrientationPinned;
	UIBarButtonItem* _allMediaButton;
	UIBarButtonItem* _trashButton;
	UIBarButtonItem* _actionButton;
	UIBarButtonItem* _playButton;
	UIBarButtonItem* _pauseButton;
	WAStarBarButtonItem* _starButton;
	WAStarBarButtonItem* _unstarButton;
	WAMessage* _messageBeforeChangingContent;
	NSIndexPath* _indexPathBeforeChangingContent;
	char _fullScreen;

}

@property (nonatomic,retain) WAMediaManager * mediaManager; 
@property (assign,nonatomic) int currentPageIndex; 
@property (assign,getter=isFullScreen,nonatomic) char fullScreen;                            //@synthesize fullScreen=_fullScreen - In the implementation block
@property (assign,nonatomic) float currentFractionalIndex; 
@property (assign,getter=isBusySpinnerHidden,nonatomic) char busySpinnerHidden; 
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)wa_fontSizeDidChange;
-(void)didLoadDatabase:(id)arg1 ;
-(void)trashButtonTapped:(id)arg1 ;
-(void)starButtonTapped:(id)arg1 ;
-(void)unstarButtonTapped:(id)arg1 ;
-(void)showAllMedia:(id)arg1 ;
-(void)pauseButtonTapped:(id)arg1 ;
-(void)playButtonTapped:(id)arg1 ;
-(void)reloadMediaManager;
-(void)updateCaptionView;
-(void)wa_applicationDidBecomeActive;
-(void)updateInterfaceForCurrentMessage;
-(void)setUpBusySpinnerView;
-(id)currentCell;
-(WAMediaManager *)mediaManager;
-(void)setFullScreen:(char)arg1 animated:(char)arg2 ;
-(void)updateNavigationBarItems;
-(void)updatePresentationState;
-(void)updateTitleView;
-(char)isBusySpinnerHidden;
-(float)currentFractionalIndex;
-(void)setMediaManager:(WAMediaManager *)arg1 ;
-(void)mediaManagerWillChangeContent:(id)arg1 ;
-(void)mediaManagerDidChangeContent:(id)arg1 ;
-(void)mediaManagerDidInsertItem:(id)arg1 ;
-(void)mediaManagerDidDeleteItem:(id)arg1 ;
-(void)mediaManagerDidMoveItem:(id)arg1 ;
-(void)mediaManagerDidInsertSection:(id)arg1 ;
-(void)mediaManagerDidDeleteSection:(id)arg1 ;
-(void)showBackupSettings;
-(id)nonTransitioningContainerView;
-(void)saveMediaInMessage:(id)arg1 ;
-(void)deleteMessageInCell:(id)arg1 ;
-(void)showActionMenu;
-(void)setMessage:(id)arg1 starred:(char)arg2 ;
-(void)deleteMessage:(id)arg1 ;
-(void)showMissingVideoErrorWhenForwardingMessage:(char)arg1 ;
-(void)showPersonPickerForForwardingMediaInMessage:(id)arg1 ;
-(void)shareMediaInMessageExternally:(id)arg1 ;
-(void)assignContactImageWithMessage:(id)arg1 ;
-(void)assignGroupImageWithMessage:(id)arg1 ;
-(void)setProfilePhotoWithMessage:(id)arg1 ;
-(void)forwardMediaInMessage:(id)arg1 toContactInfo:(id)arg2 ;
-(void)setBusySpinnerHidden:(char)arg1 ;
-(void)presentMoveAndScaleViewControllerWithMediaInMessage:(id)arg1 forPerson:(void*)arg2 ;
-(void)assignImage:(id)arg1 toContactID:(int)arg2 ;
-(UIEdgeInsets)layoutInsetsForMediaBrowserCollectionViewCell:(id)arg1 ;
-(char)isDisplayingMediaBrowserCollectionViewCellInFullScreen:(id)arg1 ;
-(void)mediaBrowserCollectionViewCell:(id)arg1 prefersFullScreen:(char)arg2 ;
-(void)mediaBrowserCollectionViewCell:(id)arg1 didReceiveSingleTapAtPoint:(CGPoint)arg2 ;
-(void)mediaBrowserCollectionViewCellWillBeginChangingVisibleContentViewFrame:(id)arg1 ;
-(void)mediaBrowserCollectionViewCellDidChangeVisibleContentViewFrame:(id)arg1 ;
-(void)mediaBrowserCollectionViewCellDidEndChangingVisibleContentViewFrame:(id)arg1 ;
-(void)mediaBrowserCollectionViewCellDidChangePresentationState:(id)arg1 ;
-(void)mediaBrowserCollectionViewCellDidRequestPresentBackupSettings:(id)arg1 ;
-(char)isPreviewingMediaBrowserCollectionViewCell:(id)arg1 ;
-(id)fastThumbnailForMediaBrowserCollectionViewCell:(id)arg1 ;
-(float)rateOfChangeForMediaBrowserCollectionViewCell:(id)arg1 ;
-(void)toolbarDidActivateActionButton:(id)arg1 ;
-(void)toolbarDidActivateTrashButton:(id)arg1 ;
-(void)toolbarDidActivatePlayButton:(id)arg1 ;
-(void)toolbarDidActivatePauseButton:(id)arg1 ;
-(void)toolbarDidActivateStarButton:(id)arg1 ;
-(void)toolbarDidActivateUnstarButton:(id)arg1 ;
-(void)toolbarDidBeginScrubbing:(id)arg1 ;
-(void)toolbar:(id)arg1 didScrollToIndexPath:(id)arg2 ;
-(void)toolbarDidEndScrubbing:(id)arg1 ;
-(void)noOpGestureRecognizerDidBeginTrackingTouches:(id)arg1 ;
-(void)noOpGestureRecognizerDidEndTrackingTouches:(id)arg1 ;
-(id)popFromAnimationIdentifier;
-(char)usesScreenEdgePanGestureRecognizerForCustomPopTransition;
-(char)shouldUseImageToImageTransitionForOperation:(int)arg1 fromViewController:(id)arg2 toViewController:(id)arg3 context:(id)arg4 ;
-(void)prepareForTransitionWithContext:(id)arg1 ;
-(id)viewForTransitionAnimationWithContext:(id)arg1 ;
-(void)finishTransitionWithView:(id)arg1 context:(id)arg2 ;
-(void)gestureRecognizerWillBeginManagingInteractivePopTransition:(id)arg1 ;
-(void)gestureRecognizerDidBeginManagingInteractivePopTransition:(id)arg1 ;
-(void)gestureRecognizerWillFinishManagingInteractivePopTransition:(id)arg1 ;
-(char)wa_prefersMinimalBackButton;
-(void)setCurrentFractionalIndex:(float)arg1 ;
-(void)deviceOrientationDidChange:(id)arg1 ;
-(void)peoplePickerNavigationController:(id)arg1 didSelectPerson:(void*)arg2 ;
-(void)peoplePickerNavigationControllerDidCancel:(id)arg1 ;
-(char)peoplePickerNavigationController:(id)arg1 shouldContinueAfterSelectingPerson:(void*)arg2 ;
-(char)peoplePickerNavigationController:(id)arg1 shouldContinueAfterSelectingPerson:(void*)arg2 property:(int)arg3 identifier:(int)arg4 ;
-(void)actionButtonTapped:(id)arg1 ;
-(void)dealloc;
-(void)scrollViewDidScroll:(id)arg1 ;
-(void)scrollViewWillBeginDragging:(id)arg1 ;
-(void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(char)arg2 ;
-(void)scrollViewDidEndDecelerating:(id)arg1 ;
-(char)gestureRecognizerShouldBegin:(id)arg1 ;
-(char)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2 ;
-(int)collectionView:(id)arg1 numberOfItemsInSection:(int)arg2 ;
-(id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2 ;
-(int)numberOfSectionsInCollectionView:(id)arg1 ;
-(void)collectionView:(id)arg1 didEndDisplayingCell:(id)arg2 forItemAtIndexPath:(id)arg3 ;
-(char)shouldAutorotate;
-(id)initWithNibName:(id)arg1 bundle:(id)arg2 ;
-(void)viewWillLayoutSubviews;
-(void)viewDidLayoutSubviews;
-(void)viewWillTransitionToSize:(CGSize)arg1 withTransitionCoordinator:(id)arg2 ;
-(void)viewWillAppear:(char)arg1 ;
-(void)viewDidLoad;
-(void)willMoveToParentViewController:(id)arg1 ;
-(void)viewDidAppear:(char)arg1 ;
-(void)viewWillDisappear:(char)arg1 ;
-(void)willRotateToInterfaceOrientation:(int)arg1 duration:(double)arg2 ;
-(void)willAnimateRotationToInterfaceOrientation:(int)arg1 duration:(double)arg2 ;
-(id)previewActionItems;
-(void)setFullScreen:(char)arg1 ;
-(int)currentPageIndex;
-(void)setCurrentPageIndex:(int)arg1 ;
-(id)currentMessage;
-(char)isFullScreen;
-(char)isFullscreen;
@end

