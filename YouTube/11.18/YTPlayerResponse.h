/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:49:31 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/FFD4619E-59E7-49B9-AD90-0E28F5807C56/YouTube.app/YouTube
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@class YTIPlayerResponse, NSDate;

@interface YTPlayerResponse : NSObject {

	char _trailer;
	YTIPlayerResponse* _playerData;
	NSDate* _responseDate;
	NSDate* _offlineStateDate;

}

@property (nonatomic,readonly) YTIPlayerResponse * playerData;                     //@synthesize playerData=_playerData - In the implementation block
@property (nonatomic,readonly) NSDate * responseDate;                              //@synthesize responseDate=_responseDate - In the implementation block
@property (nonatomic,readonly) NSDate * offlineStateDate;                          //@synthesize offlineStateDate=_offlineStateDate - In the implementation block
@property (getter=isFromOffline,nonatomic,readonly) char fromOffline; 
@property (getter=isTrailer,nonatomic,readonly) char trailer;                      //@synthesize trailer=_trailer - In the implementation block
@property (nonatomic,readonly) char displayCaptionsAbovePlayerBar; 
@property (nonatomic,readonly) char enablePrefetchForPlaylist; 
@property (nonatomic,readonly) char enlargeCaptionsInFullscreen; 
@property (nonatomic,readonly) char performActiveLogicOnForeground; 
@property (nonatomic,readonly) char vssPreventDuplicatePlaybackPause; 
-(YTIPlayerResponse *)playerData;
-(char)isTrailer;
-(id)adNextParams;
-(char)isFromOffline;
-(id)initWithPlayerData:(id)arg1 responseDate:(id)arg2 ;
-(id)adPlayerResponse;
-(char)shouldRefreshStreamingData;
-(NSDate *)responseDate;
-(id)initWithPlayerData:(id)arg1 responseDate:(id)arg2 offlineStateDate:(id)arg3 ;
-(NSDate *)offlineStateDate;
-(char)enlargeCaptionsInFullscreen;
-(char)displayCaptionsAbovePlayerBar;
-(char)enablePrefetchForPlaylist;
-(char)performActiveLogicOnForeground;
-(id)trailerPlayerResponse;
-(char)vssPreventDuplicatePlaybackPause;
-(double)timeUntilStreamingDataExpirySeconds;
-(id)initWithPlayerData:(id)arg1 responseDate:(id)arg2 offlineStateDate:(id)arg3 trailer:(char)arg4 ;
-(double)responseAgeSeconds;
-(id)initWithPlayerData:(id)arg1 responseDate:(id)arg2 trailer:(char)arg3 ;
-(id)adPlayerParams;
@end

