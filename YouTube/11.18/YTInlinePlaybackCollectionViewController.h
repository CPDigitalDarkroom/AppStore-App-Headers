/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:49:26 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/FFD4619E-59E7-49B9-AD90-0E28F5807C56/YouTube.app/YouTube
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <YouTube/YouTube-Structs.h>
#import <YouTube/YTInnerTubeCollectionViewController.h>
#import <YouTube/YTInlinePlaybackFlowLayoutDelegate.h>
#import <YouTube/YTInlinePlaybackLayoutProtocol.h>
#import <YouTube/YTInlinePlaybackScrollControllerDelegate.h>
#import <YouTube/YTPageViewControllerObserver.h>
#import <YouTube/YTInlinePlaybackContainerDelegate.h>

@protocol YTInlinePlaybackContainerControllerProtocol;
@class YTInlinePlaybackScrollController, NSString;

@interface YTInlinePlaybackCollectionViewController : YTInnerTubeCollectionViewController <YTInlinePlaybackFlowLayoutDelegate, YTInlinePlaybackLayoutProtocol, YTInlinePlaybackScrollControllerDelegate, YTPageViewControllerObserver, YTInlinePlaybackContainerDelegate> {

	YTInlinePlaybackScrollController* _scrollController;
	id<YTInlinePlaybackContainerControllerProtocol> _videoPreviewController;
	id<YTInlinePlaybackContainerControllerProtocol> _globalVideoPreviewController;
	int _inlinePlaybackLayout;
	char _pendingViewLayout;
	char _visibilityReportingAllowed;

}

@property (assign,nonatomic) char visibilityReportingAllowed;              //@synthesize visibilityReportingAllowed=_visibilityReportingAllowed - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)pageViewControllerDidEndScrolling:(id)arg1 ;
-(void)setInlinePlaybackLayout:(int)arg1 ;
-(void)collectionViewDataDidChange;
-(id)initWithGlobals:(id)arg1 service:(id)arg2 parentResponder:(id)arg3 ;
-(void)setVisibilityReportingAllowed:(char)arg1 ;
-(id)initWithGlobals:(id)arg1 service:(id)arg2 parentResponder:(id)arg3 UIFormatter:(id)arg4 ;
-(char)containerShouldAutorotate;
-(id)initWithGlobals:(id)arg1 service:(id)arg2 parentResponder:(id)arg3 UIFormatter:(id)arg4 layout:(id)arg5 controllerFactory:(id)arg6 ;
-(void)updatePlayIconOnVisibleInlinePlaybackContainers;
-(void)maybeSetActiveContainer;
-(char)isInlinePlaybackContainerAtIndexPath:(id)arg1 ;
-(id)activeInlinePlaybackContainerIndexPath;
-(void)makeActiveCollectionViewController;
-(void)scrollToNextInlinePlaybackContainerFollowingIndexPath:(id)arg1 scrollController:(id)arg2 ;
-(id)baseFeedControllerAtIndexPath:(id)arg1 ;
-(void)setActiveContainer;
-(char)isInlinePlaybackEntry:(id)arg1 ;
-(id)candidateContainer;
-(char)isSuggestionsCellAtIndexPath:(id)arg1 ;
-(void)didScrollWithShouldSetActiveContainer:(char)arg1 ;
-(void)didFinishPlayingVideoWithInlinePlaybackContainer:(id)arg1 ;
-(id)cellControllerAtIndexPath:(id)arg1 ;
-(void)handleInlinePlaybackPresentLandscapeViewControllerResponderEvent:(id)arg1 ;
-(void)claimPlayerViewController:(id)arg1 ;
-(void)relinquishPlayerViewController:(id)arg1 ;
-(void)addRenderers:(id)arg1 afterIndexPath:(id)arg2 ;
-(void)restorePlayerView;
-(CGRect)activePlayerViewRect;
-(id)viewToRotate;
-(void)didFinishTransition;
-(char)visibilityReportingAllowed;
-(void)dealloc;
-(void)scrollViewDidEndDecelerating:(id)arg1 ;
-(id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2 ;
-(char)collectionView:(id)arg1 shouldSelectItemAtIndexPath:(id)arg2 ;
-(char)collectionView:(id)arg1 shouldDeselectItemAtIndexPath:(id)arg2 ;
-(void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2 ;
-(void)viewDidLayoutSubviews;
-(void)viewWillAppear:(char)arg1 ;
-(void)viewDidLoad;
-(void)viewDidAppear:(char)arg1 ;
-(void)viewWillDisappear:(char)arg1 ;
-(id)entryAtIndexPath:(id)arg1 ;
@end

