/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:49:36 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/FFD4619E-59E7-49B9-AD90-0E28F5807C56/YouTube.app/YouTube
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <YouTube/MLDownloadSchedulerDelegate.h>
#import <YouTube/YTSystemNotificationsObserver.h>

@protocol MLServices, MLOfflineVideoDownloadDelegate;
@class NSMutableArray, NSDate, MLVideo, UIApplication, NSTimer, NSString;

@interface MLOfflineVideoDownloadController : NSObject <MLDownloadSchedulerDelegate, YTSystemNotificationsObserver> {

	id<MLServices> _services;
	id<MLOfflineVideoDownloadDelegate> _currentDelegate;
	char _downloadStarted;
	unsigned _downloadID;
	NSMutableArray* _completedLocalStreams;
	NSDate* _startDate;
	char _downloadInBackground;
	MLVideo* _currentVideo;
	UIApplication* _application;
	unsigned _backgroundTask;
	NSTimer* _backgroundTimer;
	NSMutableArray* _incompleteSegmentLists;

}

@property (nonatomic,readonly) MLVideo * currentVideo;                             //@synthesize currentVideo=_currentVideo - In the implementation block
@property (assign,nonatomic) char downloadInBackground;                            //@synthesize downloadInBackground=_downloadInBackground - In the implementation block
@property (nonatomic,retain) UIApplication * application;                          //@synthesize application=_application - In the implementation block
@property (assign,nonatomic) unsigned backgroundTask;                              //@synthesize backgroundTask=_backgroundTask - In the implementation block
@property (nonatomic,readonly) NSTimer * backgroundTimer;                          //@synthesize backgroundTimer=_backgroundTimer - In the implementation block
@property (nonatomic,retain) NSMutableArray * incompleteSegmentLists;              //@synthesize incompleteSegmentLists=_incompleteSegmentLists - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)appDidEnterBackground:(id)arg1 ;
-(void)cancelDownloadWithVideoID:(id)arg1 ;
-(char)downloadVideo:(id)arg1 withMaximumResolution:(unsigned)arg2 delegate:(id)arg3 ;
-(id)initWithServices:(id)arg1 ;
-(MLVideo *)currentVideo;
-(void)beginBackgroundHelpers;
-(void)beginDownloadWithRemoteStream:(id)arg1 downloadID:(unsigned)arg2 ;
-(void)beginBackgroundTask;
-(char)checkUserInfo:(id)arg1 ;
-(id)incompleteSegmentListForSegment:(id)arg1 ;
-(long long)downloadedLengthForCurrentVideo;
-(long long)estimatedContentLengthForCurrentVideo;
-(void)downloadNextSegmentFromIncompleteSegmentList:(id)arg1 ;
-(void)endBackgroundTimer;
-(char)checkDownloadID:(unsigned)arg1 ;
-(void)didFinishDownloadingIncompleteSegmentList:(id)arg1 ;
-(void)scheduleDownloadWithRemoteSegment:(id)arg1 localSegment:(id)arg2 localStream:(id)arg3 ;
-(id)downloadScheduler;
-(long long)estimatedContentLengthForStream:(id)arg1 duration:(double)arg2 ;
-(void)beginBackgroundTimer;
-(void)maybeBeginBackgroundDownload;
-(char)shouldBeginBackgroundDownload;
-(void)beginBackgroundDownload;
-(double)backgroundDownloadTimeRemainingThreshold;
-(void)downloadDidStartWithSegment:(id)arg1 userInfo:(id)arg2 ;
-(void)downloadDidPauseWithSegment:(id)arg1 userInfo:(id)arg2 ;
-(void)downloadDidReceiveData:(id)arg1 withSegment:(id)arg2 userInfo:(id)arg3 ;
-(void)downloadDidCompleteWithSegment:(id)arg1 userInfo:(id)arg2 ;
-(void)downloadDidFailWithSegment:(id)arg1 userInfo:(id)arg2 error:(id)arg3 ;
-(char)downloadInBackground;
-(void)setDownloadInBackground:(char)arg1 ;
-(unsigned)backgroundTask;
-(NSTimer *)backgroundTimer;
-(NSMutableArray *)incompleteSegmentLists;
-(void)setIncompleteSegmentLists:(NSMutableArray *)arg1 ;
-(void)setApplication:(UIApplication *)arg1 ;
-(void)failWithError:(id)arg1 ;
-(void)appWillEnterForeground:(id)arg1 ;
-(void)application:(id)arg1 handleEventsForBackgroundURLSession:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)clear;
-(void)setBackgroundTask:(unsigned)arg1 ;
-(void)cancelDownload;
-(unsigned)downloadID;
-(void)endBackgroundTask;
-(UIApplication *)application;
@end

