/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:49:24 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/FFD4619E-59E7-49B9-AD90-0E28F5807C56/YouTube.app/YouTube
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <YouTube/DIALDiscoveryDelegate.h>
#import <YouTube/GCKDeviceScannerListener.h>
#import <YouTube/GCKLoggerDelegate.h>
#import <YouTube/MDXAppStateRecorderObserver.h>
#import <YouTube/MDXScreenSessionConnectionDelegate.h>
#import <YouTube/YTSystemNotificationsObserver.h>
#import <YouTube/YTUserChangedObserver.h>
#import <YouTube/YTResponder.h>

@protocol MDXConfig, YTDataServices, MDXBrowserChannelFactory, MDXScreenStorage, YTIdentityProvider, YTResponder, MDXDiscoveryInterruptDelegate;
@class MDXAppStateRecorder, MDXTheme, MDXScreenAppControllerFactory, NSHashTable, NSMutableArray, MDXDIALStorage, NSMutableDictionary, MDXCTTRevocationController, MDXDevicesWhitelisting, DIALDiscovery, GCKDeviceScanner, GTMLogger, NSTimer, MDXInteractionHistory, GIMMe, MDXScreenSession, MDXPairingHandler, MDXCastMediaControlChannel, NSString;

@interface MDXScreenManager : NSObject <DIALDiscoveryDelegate, GCKDeviceScannerListener, GCKLoggerDelegate, MDXAppStateRecorderObserver, MDXScreenSessionConnectionDelegate, YTSystemNotificationsObserver, YTUserChangedObserver, YTResponder> {

	id<MDXConfig> _config;
	id<YTDataServices> _dataServices;
	id<MDXBrowserChannelFactory> _browserChannelFactory;
	MDXAppStateRecorder* _appStateRecorder;
	MDXTheme* _theme;
	MDXScreenAppControllerFactory* _screenAppControllerFactory;
	NSHashTable* _screenManagerObservers;
	char _screenSessionBeingChanged;
	NSMutableArray* _DIALScreens;
	NSMutableArray* _castScreens;
	id<MDXScreenStorage> _screenStorage;
	MDXDIALStorage* _DIALStorage;
	NSMutableDictionary* _DIALScreenIDs;
	MDXCTTRevocationController* _CTTController;
	MDXDevicesWhitelisting* _devicesWhitelisting;
	DIALDiscovery* _dialDiscovery;
	GCKDeviceScanner* _castDiscovery;
	GTMLogger* _castLogger;
	char _screenDiscoveryEnabled;
	char _screenDiscoveryAutoSuspended;
	NSTimer* _screenAvailabilityPoller;
	char _enableDIALSupportForChromecast;
	char _hasAvailableSessionBeenRecorded;
	MDXInteractionHistory* _interactionHistory;
	id<YTIdentityProvider> _identityProvider;
	id<YTResponder> _parentResponder;
	GIMMe* _gimme;
	id<MDXDiscoveryInterruptDelegate> _discoveryInterruptDelegate;
	MDXScreenSession* _screenSession;
	NSMutableArray* _pairedScreens;
	NSMutableDictionary* _DIALScreenClientNames;
	MDXPairingHandler* _pairingHandler;

}

@property (assign,nonatomic,__weak) GIMMe * gimme;                                                             //@synthesize gimme=_gimme - In the implementation block
@property (assign,nonatomic,__weak) id<MDXDiscoveryInterruptDelegate> discoveryInterruptDelegate;              //@synthesize discoveryInterruptDelegate=_discoveryInterruptDelegate - In the implementation block
@property (nonatomic,readonly) MDXScreenSession * screenSession;                                               //@synthesize screenSession=_screenSession - In the implementation block
@property (nonatomic,readonly) MDXCastMediaControlChannel * audioCastHandler; 
@property (nonatomic,retain) NSMutableArray * pairedScreens;                                                   //@synthesize pairedScreens=_pairedScreens - In the implementation block
@property (nonatomic,readonly) NSMutableDictionary * DIALScreenClientNames;                                    //@synthesize DIALScreenClientNames=_DIALScreenClientNames - In the implementation block
@property (nonatomic,readonly) MDXPairingHandler * pairingHandler;                                             //@synthesize pairingHandler=_pairingHandler - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,__weak,readonly) id<YTResponder> parentResponder;                                         //@synthesize parentResponder=_parentResponder - In the implementation block
-(void)logFromFunction:(const char*)arg1 message:(id)arg2 ;
-(void)deviceDidComeOnline:(id)arg1 ;
-(void)deviceDidGoOffline:(id)arg1 ;
-(id<YTResponder>)parentResponder;
-(GIMMe *)gimme;
-(void)appDidBecomeActive:(id)arg1 ;
-(void)appDidEnterBackground:(id)arg1 ;
-(void)userDidChange;
-(void)setGimme:(GIMMe *)arg1 ;
-(id)onlineScreens;
-(void)removeScreenManagerObserver:(id)arg1 ;
-(void)addScreenManagerObserver:(id)arg1 ;
-(MDXScreenSession *)screenSession;
-(id)remoteClient;
-(MDXCastMediaControlChannel *)audioCastHandler;
-(id)onlinePairedScreens;
-(void)disconnectFromScreen;
-(void)removePairedScreen:(id)arg1 ;
-(void)updateScreen:(id)arg1 withName:(id)arg2 ;
-(void)fetchScreenWithPairingCode:(id)arg1 completionBlock:(/*^block*/id)arg2 ;
-(unsigned)pairedScreenCount;
-(void)addPairedScreen:(id)arg1 withName:(id)arg2 ;
-(void)connectToScreen:(id)arg1 ;
-(void)setDiscoveryInterruptDelegate:(id<MDXDiscoveryInterruptDelegate>)arg1 ;
-(void)stopScreenDiscovery;
-(id)initWithConfig:(id)arg1 dataServices:(id)arg2 browserChannelFactory:(id)arg3 appStateRecorder:(id)arg4 parentResponder:(id)arg5 ;
-(void)startScreenDiscovery;
-(void)revokeCredentialsForCurrentDevice;
-(MDXPairingHandler *)pairingHandler;
-(NSMutableDictionary *)DIALScreenClientNames;
-(char)isConnectedToScreen;
-(void)connectToScreen:(id)arg1 withWatchEndpoint:(id)arg2 ;
-(id)newPairedScreenStorage;
-(id)newGCKDeviceScanner;
-(void)setupCastSDKLogger;
-(id)newDIALDiscovery;
-(id)newScreenAppControllerFactory;
-(void)startDialDiscovery;
-(void)startScreenAvailabilityPoller;
-(void)setPairedScreens:(NSMutableArray *)arg1 ;
-(void)stopDialDiscovery;
-(void)stopScreenAvailabilityPoller;
-(void)notifyScreenSessionWillChange;
-(void)screenSessionDidChange;
-(void)disconnectFromScreenWithUserAction:(char)arg1 ;
-(void)connectToScreenWithUDN:(id)arg1 ;
-(void)onlineScreensDidChange;
-(void)notifyRemoteScreenNameDidChange;
-(NSMutableArray *)pairedScreens;
-(void)updatePairedScreenAvailabilityWithAvailabilityChangedBlock:(/*^block*/id)arg1 ;
-(id)DIALScreenWithDeviceID:(id)arg1 ;
-(void)updateDIALScreen:(id)arg1 withDIALResponse:(id)arg2 ;
-(char)isDIALEnabledForScreen:(id)arg1 ;
-(void)addDIALScreen:(id)arg1 ;
-(void)appStatusChangedForDIALScreen:(id)arg1 ;
-(void)removeDIALScreen:(id)arg1 ;
-(id)castScreenWithDeviceID:(id)arg1 ;
-(void)addCastScreen:(id)arg1 ;
-(void)removeCastScreen:(id)arg1 ;
-(void)suspendScreenDiscovery;
-(void)resumeScreenDiscovery;
-(void)updateStoredDIALScreenIDsForScreen:(id)arg1 ;
-(int)MDXDeviceStatusFromDIALAppStatus:(int)arg1 ;
-(void)recordAvailableSession;
-(void)notifyOnlineScreensDidChange;
-(void)recordConnection;
-(void)notifyScreenSessionDidChange;
-(void)updateScreenAvailability;
-(void)DIALDeviceAppeared:(id)arg1 shouldConnect:(char)arg2 ;
-(void)DIALDeviceDisappeared:(id)arg1 ;
-(void)MDXAppStateRecorderActiveVideoDidChange;
-(void)fetchOnlineScreensWithCompletionBlock:(/*^block*/id)arg1 ;
-(char)enableDIALSupportForChromecast;
-(id<MDXDiscoveryInterruptDelegate>)discoveryInterruptDelegate;
-(void)didUpdateScreenClientName:(id)arg1 ;
-(void)connectionStateDidChange:(int)arg1 ;
-(void)dealloc;
@end

