/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:49:35 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/FFD4619E-59E7-49B9-AD90-0E28F5807C56/YouTube.app/YouTube
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol GTLQueryProtocol;
@class GTLService, NSMutableDictionary, NSDictionary, GTMHTTPFetcher, GTLObject, NSError, NSString, NSOperation;

@interface GTLServiceTicket : NSObject {

	GTLService* service_;
	NSMutableDictionary* ticketProperties_;
	NSDictionary* surrogates_;
	GTMHTTPFetcher* objectFetcher_;
	SEL uploadProgressSelector_;
	char shouldFetchNextPages_;
	char isRetryEnabled_;
	SEL retrySelector_;
	double maxRetryInterval_;
	/*^block*/id retryBlock_;
	/*^block*/id uploadProgressBlock_;
	GTLObject* postedObject_;
	GTLObject* fetchedObject_;
	id<GTLQueryProtocol> executingQuery_;
	id<GTLQueryProtocol> originalQuery_;
	NSError* fetchError_;
	char hasCalledCallback_;
	unsigned pagesFetchedCounter_;
	NSString* apiKey_;
	char isREST_;
	NSOperation* parseOperation_;

}

@property (nonatomic,retain) GTMHTTPFetcher * objectFetcher; 
@property (assign,nonatomic) SEL uploadProgressSelector; 
@property (nonatomic,copy) NSString * APIKey; 
@property (nonatomic,copy) NSDictionary * properties; 
@property (nonatomic,retain) id userData; 
@property (nonatomic,retain) GTLObject * postedObject; 
@property (nonatomic,retain) GTLObject * fetchedObject; 
@property (nonatomic,retain) id<GTLQueryProtocol> executingQuery; 
@property (nonatomic,retain) id<GTLQueryProtocol> originalQuery; 
@property (nonatomic,retain) NSDictionary * surrogates; 
@property (assign,getter=isRetryEnabled,nonatomic) char retryEnabled; 
@property (assign,nonatomic) SEL retrySelector; 
@property (copy) id retryBlock; 
@property (assign,nonatomic) double maxRetryInterval; 
@property (nonatomic,readonly) int statusCode; 
@property (nonatomic,retain) NSError * fetchError; 
@property (assign,nonatomic) char hasCalledCallback; 
@property (assign,nonatomic) char shouldFetchNextPages; 
@property (assign,nonatomic) unsigned pagesFetchedCounter; 
@property (copy) id uploadProgressBlock; 
@property (retain) NSOperation * parseOperation; 
@property (assign) char isREST; 
+(id)ticketForService:(id)arg1 ;
-(void)setOriginalQuery:(id<GTLQueryProtocol>)arg1 ;
-(void)setRetryEnabled:(char)arg1 ;
-(GTLObject *)fetchedObject;
-(void)setShouldFetchNextPages:(char)arg1 ;
-(char)isRetryEnabled;
-(double)maxRetryInterval;
-(void)setMaxRetryInterval:(double)arg1 ;
-(void)setRetrySelector:(SEL)arg1 ;
-(void)setRetryBlock:(id)arg1 ;
-(void)pauseUpload;
-(id<GTLQueryProtocol>)originalQuery;
-(void)cancelTicket;
-(id)queryForRequestID:(id)arg1 ;
-(NSDictionary *)surrogates;
-(void)setSurrogates:(NSDictionary *)arg1 ;
-(void)setIsREST:(char)arg1 ;
-(NSString *)APIKey;
-(SEL)uploadProgressSelector;
-(SEL)retrySelector;
-(void)setPostedObject:(GTLObject *)arg1 ;
-(void)setExecutingQuery:(id<GTLQueryProtocol>)arg1 ;
-(id)retryBlock;
-(void)setObjectFetcher:(GTMHTTPFetcher *)arg1 ;
-(char)hasCalledCallback;
-(unsigned)pagesFetchedCounter;
-(GTMHTTPFetcher *)objectFetcher;
-(id<GTLQueryProtocol>)executingQuery;
-(void)setParseOperation:(NSOperation *)arg1 ;
-(NSOperation *)parseOperation;
-(char)isREST;
-(char)shouldFetchNextPages;
-(void)setFetchedObject:(GTLObject *)arg1 ;
-(void)setHasCalledCallback:(char)arg1 ;
-(void)setPagesFetchedCounter:(unsigned)arg1 ;
-(void)setUploadProgressSelector:(SEL)arg1 ;
-(void)setAPIKey:(NSString *)arg1 ;
-(void)updateObjectFetcherProgressCallbacks;
-(void)resumeUpload;
-(char)isUploadPaused;
-(GTLObject *)postedObject;
-(id)propertyForKey:(id)arg1 ;
-(void)setProperty:(id)arg1 forKey:(id)arg2 ;
-(void)dealloc;
-(id)description;
-(int)statusCode;
-(id)userData;
-(void)setUserData:(id)arg1 ;
-(NSDictionary *)properties;
-(void)setProperties:(NSDictionary *)arg1 ;
-(id)service;
-(id)uploadProgressBlock;
-(void)setUploadProgressBlock:(id)arg1 ;
-(NSError *)fetchError;
-(void)setFetchError:(NSError *)arg1 ;
-(id)initWithService:(id)arg1 ;
@end

