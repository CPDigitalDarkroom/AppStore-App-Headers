/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:49:24 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/FFD4619E-59E7-49B9-AD90-0E28F5807C56/YouTube.app/YouTube
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <YouTube/YouTube-Structs.h>
#import <YouTube/MDXScreenManagerObserver.h>
#import <YouTube/MDXScreenSessionObserver.h>
#import <YouTube/YTAdVideoPlayerOverlayDelegate.h>
#import <YouTube/YTAudioTrackSwitchDelegate.h>
#import <YouTube/YTCaptionsVisibilityResponderProvider.h>
#import <YouTube/YTCollapsedPlayerUIResponderProvider.h>
#import <YouTube/YTContentVideoPlayerOverlayDelegate.h>
#import <YouTube/YTPlaybackController.h>

@protocol YTPlayerOverlayFactory, YTAdVideoPlayerOverlayProtocol, YTContentVideoPlayerOverlayProtocol, YTCaptionConfig, YTPlayerTransition, YTVideoPlayerOverlayProtocol, YTPlaybackControllerAutoplayDelegate, YTPlaybackControllerEventsDelegate, YTResponder, YTPlaybackControllerUIDelegate;
@class UIViewController, YTPlayerView, MDXScreenManager, MDXScreenSession, YTPlayerService, YTPlayerRequestFactory, NSTimer, YTPlayerResponse, YTCaptionTrack, NSString, YTAudioTrackSwitchController, YTVideoQualitySwitchController;

@interface MDXPlaybackController : NSObject <MDXScreenManagerObserver, MDXScreenSessionObserver, YTAdVideoPlayerOverlayDelegate, YTAudioTrackSwitchDelegate, YTCaptionsVisibilityResponderProvider, YTCollapsedPlayerUIResponderProvider, YTContentVideoPlayerOverlayDelegate, YTPlaybackController> {

	UIViewController* _parentViewController;
	YTPlayerView* _playerView;
	id<YTPlayerOverlayFactory> _overlayFactory;
	UIViewController*<YTAdVideoPlayerOverlayProtocol> _adVideoPlayerOverlay;
	UIViewController*<YTContentVideoPlayerOverlayProtocol> _contentVideoPlayerOverlay;
	MDXScreenManager* _screenManager;
	MDXScreenSession* _screenSession;
	id<YTCaptionConfig> _captionConfig;
	YTPlayerService* _playerService;
	YTPlayerRequestFactory* _playerRequestFactory;
	NSTimer* _videoProgressTimer;
	char _userScrubbing;
	id<YTPlayerTransition> _playerTransition;
	int _playerViewLayout;
	YTPlayerResponse* _playerResponse;
	double _scrubTime;
	unsigned _playerRequestID;
	float _expansionCoefficient;
	char _visible;
	YTCaptionTrack* _delayedSetScreenCaptionTrack;
	char _delayedUnsetScreenCaptionTrack;
	char _enableFijiControls;
	char _inlinePlaybackActive;
	NSString* _remoteScreenName;
	char _hasNextVideo;
	char _hasPreviousVideo;
	char _playlistControlsHidden;
	char _transitioningPlayerViewLayout;
	UIViewController*<YTVideoPlayerOverlayProtocol> _activeVideoPlayerOverlay;
	YTAudioTrackSwitchController* _audioTrackController;
	id<YTPlaybackControllerAutoplayDelegate> _autoplayDelegate;
	id<YTPlaybackControllerEventsDelegate> _eventsDelegate;
	id<YTResponder> _parentResponder;
	int _state;
	id<YTPlaybackControllerUIDelegate> _UIDelegate;
	NSString* _videoID;

}

@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) YTAudioTrackSwitchController * audioTrackController;                                   //@synthesize audioTrackController=_audioTrackController - In the implementation block
@property (nonatomic,readonly) YTVideoQualitySwitchController * videoQualityController; 
@property (nonatomic,__weak,readonly) id<YTResponder> parentResponder;                                                //@synthesize parentResponder=_parentResponder - In the implementation block
@property (assign,nonatomic,__weak) id<YTPlaybackControllerAutoplayDelegate> autoplayDelegate;                        //@synthesize autoplayDelegate=_autoplayDelegate - In the implementation block
@property (assign,nonatomic,__weak) id<YTPlaybackControllerEventsDelegate> eventsDelegate;                            //@synthesize eventsDelegate=_eventsDelegate - In the implementation block
@property (assign,nonatomic,__weak) id<YTPlaybackControllerUIDelegate> UIDelegate;                                    //@synthesize UIDelegate=_UIDelegate - In the implementation block
@property (nonatomic,readonly) int playerState; 
@property (nonatomic,readonly) NSString * videoID;                                                                    //@synthesize videoID=_videoID - In the implementation block
@property (getter=isCurrentVideoVertical,nonatomic,readonly) char currentVideoVertical; 
@property (nonatomic,readonly) int state;                                                                             //@synthesize state=_state - In the implementation block
@property (nonatomic,readonly) char isPlayingAd; 
@property (nonatomic,readonly) char isPlayingAdSurvey; 
@property (nonatomic,readonly) char isPlayingAdIntro; 
@property (assign,nonatomic) char playlistControlsHidden;                                                             //@synthesize playlistControlsHidden=_playlistControlsHidden - In the implementation block
@property (assign,nonatomic) char hasPreviousVideo;                                                                   //@synthesize hasPreviousVideo=_hasPreviousVideo - In the implementation block
@property (assign,nonatomic) char hasNextVideo;                                                                       //@synthesize hasNextVideo=_hasNextVideo - In the implementation block
@property (assign,getter=isTransitioningPlayerViewLayout,nonatomic) char transitioningPlayerViewLayout;               //@synthesize transitioningPlayerViewLayout=_transitioningPlayerViewLayout - In the implementation block
@property (nonatomic,readonly) UIViewController*<YTVideoPlayerOverlayProtocol> activeVideoPlayerOverlay;              //@synthesize activeVideoPlayerOverlay=_activeVideoPlayerOverlay - In the implementation block
-(void)handleRemoteControlEvent:(int)arg1 ;
-(id<YTResponder>)parentResponder;
-(char)hasNextVideo;
-(char)hasPreviousVideo;
-(id)playerResponse;
-(void)setAutoplayDelegate:(id<YTPlaybackControllerAutoplayDelegate>)arg1 ;
-(void)MDXConnectionStateDidChange:(int)arg1 ;
-(void)MDXPlayerStateDidChange:(int)arg1 ;
-(void)MDXVideoDidChangeToVideoID:(id)arg1 listID:(id)arg2 videoIndex:(unsigned)arg3 ;
-(void)MDXAudioTrackListDidChange:(id)arg1 ;
-(id<YTPlaybackControllerAutoplayDelegate>)autoplayDelegate;
-(void)replay;
-(void)activeCaptionTrackDidChange:(id)arg1 ;
-(void)setWatchNextResponse:(id)arg1 ;
-(void)resetAndShowLoading:(char)arg1 ;
-(char)arePlayerControlsHidden;
-(void)setPlaylistControlsHidden:(char)arg1 ;
-(void)setHasPreviousVideo:(char)arg1 ;
-(void)setHasNextVideo:(char)arg1 ;
-(void)setInlinePlaybackLayout:(int)arg1 ;
-(void)setExpansionCoefficient:(float)arg1 ;
-(void)setPlayerViewLayout:(int)arg1 ;
-(int)playerViewLayout;
-(void)setEventsDelegate:(id<YTPlaybackControllerEventsDelegate>)arg1 ;
-(void)loadWithPlayerTransition:(id)arg1 startPlayback:(char)arg2 ;
-(void)MDXScreenSessionDidChange:(id)arg1 ;
-(void)MDXRemoteScreenNameDidChange;
-(void)showAddToMenuFromView:(id)arg1 ;
-(void)setInlinePlayerActive:(char)arg1 ;
-(void)didStartScrubbing;
-(void)didEndScrubbing;
-(void)didPressToggleFullscreen;
-(void)didPressLiveSync;
-(void)didTogglePlayPause;
-(void)didPressPlayerBarNext;
-(void)didPressPlayerBarReplay;
-(char)isCurrentVideoVertical;
-(NSString *)videoID;
-(id)contentPlayerMacroState;
-(void)didPressPlay;
-(void)didPressPause;
-(void)didPressReplay;
-(void)didScrubToTime:(double)arg1 ;
-(id)playbackDebugData;
-(void)didPressCompanionAd;
-(void)setTransitioningPlayerViewLayout:(char)arg1 ;
-(id)currentVideoCPN;
-(double)contentVideoMediaTime;
-(double)currentVideoMediaTime;
-(char)shouldAutoplayForFailedPlayback;
-(char)consecutiveFailedPlaybacksBelowAcceptanceThreshold;
-(void)autoplayForUnplayablePlayerResponseDidFail;
-(char)shouldAutoplayForFinishedVideo;
-(void)prepareToLoadWithPlayerTransition:(id)arg1 ;
-(void)switchToInlinePlayback:(char)arg1 ;
-(void)resetToLoading;
-(char)isInlinePlaybackActive;
-(void)suspendPlayback;
-(void)resumePlayback;
-(char)isPlayingAd;
-(id)currentAd;
-(void)makeWatchNextRequestWithAd:(id)arg1 forController:(id)arg2 ;
-(id)contentVideoThumbnails;
-(id)contentVideoTitle;
-(YTAudioTrackSwitchController *)audioTrackController;
-(YTVideoQualitySwitchController *)videoQualityController;
-(void)didShowSkipAd;
-(void)didPressSkipAdWithTouchPoint:(CGPoint)arg1 ;
-(void)didPressAdThumbnail;
-(void)didPressAdVisitSiteWithTouchPoint:(CGPoint)arg1 ;
-(char)isCurrentAdBreakPreroll;
-(void)adDidFinish;
-(id)lastKnownAdPlayerMacroState;
-(void)willLoseFocus;
-(void)didGainFocus;
-(void)playerCannotPlayThisVideo;
-(id)selectedAudioTrack;
-(id)restorableState;
-(void)restoreToState:(id)arg1 startPlayback:(char)arg2 ;
-(id)contentVideoState;
-(void)setUserAudioOnlyModeActive:(char)arg1 ;
-(id<YTPlaybackControllerEventsDelegate>)eventsDelegate;
-(char)isPlayingAdSurvey;
-(char)isPlayingAdIntro;
-(char)playlistControlsHidden;
-(char)isTransitioningPlayerViewLayout;
-(UIViewController*<YTVideoPlayerOverlayProtocol>)activeVideoPlayerOverlay;
-(void)setActivePlayerOverlay:(id)arg1 ;
-(void)updateController;
-(void)updateRemoteScreenName;
-(void)stopVideoProgressTimer;
-(void)setPlayerResponse:(id)arg1 startPlayback:(char)arg2 ;
-(char)suppressWatchEndpoint;
-(char)isCurrentVideo;
-(id)adVideoPlayerOverlay;
-(id)contentVideoStateWithCurrentMediaTime:(double)arg1 finished:(char)arg2 ;
-(void)setScreenCaptionTrack:(id)arg1 ;
-(void)unsetScreenCaptionTrack;
-(id)availableAudioFormatStreams;
-(void)updatePlayerOverlayForConnectingState;
-(void)updatePlayerOverlayForCurrentVideo;
-(void)playerHandlingOtherVideo;
-(void)updateVideoMediaTime;
-(void)setActiveVideoPlayerOverlayMediaTime:(double)arg1 ;
-(void)startVideoProgressTimer;
-(void)playerIsPlaying;
-(void)playerIsPaused;
-(void)playerHasEndedCurrentVideo;
-(void)playerIsBuffering;
-(void)playerIsLoadingThisVideo;
-(void)audioTrackDidChange:(id)arg1 ;
-(char)isParentedToYTWatchPage;
-(char)captionsRenderingDisabled;
-(id)collapsedPlayerWatermarkView;
-(char)shouldShowCollapsedPlayerControls;
-(id)initWithPlayerServices:(id)arg1 MDXServices:(id)arg2 dataServices:(id)arg3 captionConfig:(id)arg4 parentResponder:(id)arg5 overlayFactory:(id)arg6 playerView:(id)arg7 parentViewController:(id)arg8 enableFijiControls:(char)arg9 ;
-(void)setAudioTrackController:(YTAudioTrackSwitchController *)arg1 ;
-(void)failWithError:(id)arg1 ;
-(void)setVolume:(float)arg1 ;
-(void)dealloc;
-(int)state;
-(void)reset;
-(void)setUIDelegate:(id<YTPlaybackControllerUIDelegate>)arg1 ;
-(int)playerState;
-(id<YTPlaybackControllerUIDelegate>)UIDelegate;
@end

