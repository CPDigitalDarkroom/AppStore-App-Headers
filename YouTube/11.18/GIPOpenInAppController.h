/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:49:13 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/FFD4619E-59E7-49B9-AD90-0E28F5807C56/YouTube.app/YouTube
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <YouTube/YouTube-Structs.h>
#import <UIKit/UIActionSheetDelegate.h>
#import <YouTube/GIPAppDelegate.h>

@protocol GIPShortURLExpander, GIPOpenInAppControllerDelegate;
@class NSMutableArray, GIPApp, NSMutableDictionary, UIActionSheet, NSURL, NSString, NSSet, UIApplication;

@interface GIPOpenInAppController : NSObject <UIActionSheetDelegate, GIPAppDelegate> {

	NSMutableArray* apps_;
	GIPApp* systemApp_;
	NSMutableDictionary* schemesMapping_;
	id<GIPShortURLExpander> shortURLExpander_;
	UIActionSheet* actionSheet_;
	NSURL* currentURL_;
	NSMutableArray* currentApps_;
	char useXCallbackURL_;
	NSString* xSourceApp_;
	NSURL* xSourceIconURL_;
	NSURL* xSuccessURL_;
	NSURL* xErrorURL_;
	NSURL* xCancelURL_;
	NSMutableDictionary* xActionParameters_;
	NSString* hashedUserId_;
	char showsMenuForSingleApp_;
	char allowsAppsDownload_;
	char disableSecureURLs_;
	char isSecureURLActive_;
	NSSet* canQuerySchemes_;
	UIApplication* sharedApplication_;
	id<GIPOpenInAppControllerDelegate> delegate_;

}

@property (nonatomic,retain) id<GIPShortURLExpander> shortURLExpander; 
@property (nonatomic,copy) NSString * hashedUserId; 
@property (assign,nonatomic) char showsMenuForSingleApp; 
@property (assign,nonatomic) char allowsAppsDownload; 
@property (assign,nonatomic) char disableSecureURLs; 
@property (assign,nonatomic,__weak) id<GIPOpenInAppControllerDelegate> delegate; 
@property (nonatomic,retain) UIActionSheet * actionSheet; 
@property (nonatomic,retain) NSURL * currentURL; 
@property (nonatomic,retain) NSMutableArray * currentApps; 
@property (nonatomic,copy) NSString * xSourceApp; 
@property (nonatomic,retain) NSURL * xSuccessURL; 
@property (nonatomic,retain) NSURL * xSourceIconURL; 
@property (nonatomic,retain) NSURL * xErrorURL; 
@property (nonatomic,retain) NSURL * xCancelURL; 
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(char)isDurableDeepLinkURL:(id)arg1 ;
+(id)hashedUserIdForURL:(id)arg1 ;
+(char)originalURL:(id*)arg1 fromSecureURL:(id)arg2 sourceApplication:(id)arg3 ;
-(id)initWithAppsListFile:(id)arg1 ;
-(id)appWithName:(id)arg1 ;
-(char)canOpenInAppStore:(id)arg1 ;
-(char)openInAppStore:(id)arg1 ;
-(id)availableAppsForURL:(id)arg1 ;
-(char)openURL:(id)arg1 inApp:(id)arg2 ;
-(char)openURL:(id)arg1 inApp:(id)arg2 withSuccessURL:(id)arg3 errorURL:(id)arg4 cancelURL:(id)arg5 sourceIconURL:(id)arg6 actionParameters:(id)arg7 ;
-(id)initWithAppsListFile:(id)arg1 tldListFile:(id)arg2 ;
-(id)initWithAppsList:(id)arg1 ;
-(id)initWithAppsList:(id)arg1 tldList:(id)arg2 ;
-(id)initWithAppsList:(id)arg1 tldList:(id)arg2 sharedApplication:(id)arg3 ;
-(void)updateSchemesMapping;
-(void)clearSecureURLEntry;
-(void)appUserPreferencesDidChange:(id)arg1 ;
-(id)knownAppsForURL:(id)arg1 ;
-(NSString *)hashedUserId;
-(char)openURL:(id)arg1 inApp:(id)arg2 hashedUserId:(id)arg3 ;
-(char)openURL:(id)arg1 inApp:(id)arg2 withSuccessURL:(id)arg3 errorURL:(id)arg4 cancelURL:(id)arg5 sourceIconURL:(id)arg6 actionParameters:(id)arg7 hashedUserId:(id)arg8 ;
-(NSString *)xSourceApp;
-(char)openInAppStore:(id)arg1 withCampaignToken:(id)arg2 ;
-(void)setXSuccessURL:(NSURL *)arg1 ;
-(void)setXErrorURL:(NSURL *)arg1 ;
-(void)setXCancelURL:(NSURL *)arg1 ;
-(void)setXSourceIconURL:(NSURL *)arg1 ;
-(UIActionSheet *)actionSheet;
-(void)setActionSheet:(UIActionSheet *)arg1 ;
-(void)setCurrentURL:(NSURL *)arg1 ;
-(void)presentOpenInMenuForURL:(id)arg1 withTitle:(id)arg2 withTags:(id)arg3 fromRect:(CGRect)arg4 inView:(id)arg5 animated:(char)arg6 ;
-(void)prepareActionSheetForURL:(id)arg1 withTitle:(id)arg2 withTags:(id)arg3 ;
-(char)shouldShowActionSheetForCurrentURL;
-(void)openCurrentURLInApp:(id)arg1 ;
-(void)presentOpenInMenuForURL:(id)arg1 withTitle:(id)arg2 withTags:(id)arg3 fromBarButtonItem:(id)arg4 animated:(char)arg5 ;
-(void)presentOpenInMenuForURL:(id)arg1 withTitle:(id)arg2 withTags:(id)arg3 fromTabBar:(id)arg4 ;
-(void)presentOpenInMenuForURL:(id)arg1 withTitle:(id)arg2 withTags:(id)arg3 fromToolbar:(id)arg4 ;
-(void)presentOpenInMenuForURL:(id)arg1 withTitle:(id)arg2 withTags:(id)arg3 inView:(id)arg4 ;
-(void)resetCurrentURL;
-(NSURL *)currentURL;
-(char)app:(id)arg1 canQueryScheme:(id)arg2 ;
-(id)initWithSharedApplication:(id)arg1 ;
-(id)filteredAppsWithBlock:(/*^block*/id)arg1 ;
-(char)openApp:(id)arg1 ;
-(char)openURL:(id)arg1 withXCallbackURLInApp:(id)arg2 ;
-(char)openURL:(id)arg1 withXCallbackURLInApp:(id)arg2 hashedUserId:(id)arg3 ;
-(char)isAppInstalled:(id)arg1 ;
-(void)setXSuccessURL:(id)arg1 xErrorURL:(id)arg2 xCancelURL:(id)arg3 xSourceIconURL:(id)arg4 ;
-(void)addXCallbackActionParameterWithKey:(id)arg1 value:(id)arg2 ;
-(void)clearXCallbackActionParameters;
-(void)presentOpenInMenuForURL:(id)arg1 withTags:(id)arg2 fromRect:(CGRect)arg3 inView:(id)arg4 animated:(char)arg5 ;
-(void)presentOpenInMenuForURL:(id)arg1 withTags:(id)arg2 fromBarButtonItem:(id)arg3 animated:(char)arg4 ;
-(void)presentOpenInMenuForURL:(id)arg1 withTags:(id)arg2 fromTabBar:(id)arg3 ;
-(void)presentOpenInMenuForURL:(id)arg1 withTags:(id)arg2 fromToolbar:(id)arg3 ;
-(void)presentOpenInMenuForURL:(id)arg1 withTags:(id)arg2 inView:(id)arg3 ;
-(void)handleOpenCurrentURLInApp:(id)arg1 ;
-(id<GIPShortURLExpander>)shortURLExpander;
-(void)setShortURLExpander:(id<GIPShortURLExpander>)arg1 ;
-(void)setHashedUserId:(NSString *)arg1 ;
-(char)showsMenuForSingleApp;
-(void)setShowsMenuForSingleApp:(char)arg1 ;
-(char)allowsAppsDownload;
-(void)setAllowsAppsDownload:(char)arg1 ;
-(char)disableSecureURLs;
-(void)setDisableSecureURLs:(char)arg1 ;
-(void)setXSourceApp:(NSString *)arg1 ;
-(NSURL *)xSourceIconURL;
-(NSURL *)xSuccessURL;
-(NSURL *)xErrorURL;
-(NSURL *)xCancelURL;
-(void)setDelegate:(id<GIPOpenInAppControllerDelegate>)arg1 ;
-(void)dealloc;
-(id)init;
-(id<GIPOpenInAppControllerDelegate>)delegate;
-(char)openURL:(id)arg1 ;
-(void)dismissMenuAnimated:(char)arg1 ;
-(void)actionSheet:(id)arg1 clickedButtonAtIndex:(int)arg2 ;
-(void)actionSheetCancel:(id)arg1 ;
-(NSMutableArray *)currentApps;
-(void)setCurrentApps:(NSMutableArray *)arg1 ;
-(void)configure:(id)arg1 ;
@end

