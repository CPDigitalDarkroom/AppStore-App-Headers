/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:49:23 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/FFD4619E-59E7-49B9-AD90-0E28F5807C56/YouTube.app/YouTube
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

@class NSString;


@protocol YTPlaybackController <YTMacroExpansionProvider,YTPlayerMenuProtocol,YTPlayerViewLayoutProtocol,YTResponder>
@property (assign,nonatomic,__weak) id<YTPlaybackControllerAutoplayDelegate> autoplayDelegate; 
@property (assign,nonatomic,__weak) id<YTPlaybackControllerEventsDelegate> eventsDelegate; 
@property (assign,nonatomic,__weak) id<YTPlaybackControllerUIDelegate> UIDelegate; 
@property (nonatomic,readonly) int playerState; 
@property (nonatomic,readonly) NSString * videoID; 
@property (getter=isCurrentVideoVertical,nonatomic,readonly) char currentVideoVertical; 
@property (nonatomic,readonly) int state; 
@property (nonatomic,readonly) char isPlayingAd; 
@property (nonatomic,readonly) char isPlayingAdSurvey; 
@property (nonatomic,readonly) char isPlayingAdIntro; 
@property (assign,nonatomic) char playlistControlsHidden; 
@property (assign,nonatomic) char hasPreviousVideo; 
@property (assign,nonatomic) char hasNextVideo; 
@property (assign,getter=isTransitioningPlayerViewLayout,nonatomic) char transitioningPlayerViewLayout; 
@property (nonatomic,readonly) UIViewController*<YTVideoPlayerOverlayProtocol> activeVideoPlayerOverlay; 
@optional
-(void)setAutonavController:(id)arg1;

@required
-(void)handleRemoteControlEvent:(int)arg1;
-(char)hasNextVideo;
-(char)hasPreviousVideo;
-(id)playerResponse;
-(void)setAutoplayDelegate:(id)arg1;
-(id<YTPlaybackControllerAutoplayDelegate>)autoplayDelegate;
-(void)replay;
-(void)setWatchNextResponse:(id)arg1;
-(char)arePlayerControlsHidden;
-(void)setPlaylistControlsHidden:(char)arg1;
-(void)setHasPreviousVideo:(char)arg1;
-(void)setHasNextVideo:(char)arg1;
-(void)setInlinePlaybackLayout:(int)arg1;
-(void)setExpansionCoefficient:(float)arg1;
-(void)setEventsDelegate:(id)arg1;
-(void)loadWithPlayerTransition:(id)arg1 startPlayback:(char)arg2;
-(char)isCurrentVideoVertical;
-(NSString *)videoID;
-(void)didPressPlay;
-(void)didPressPause;
-(id)playbackDebugData;
-(void)didPressCompanionAd;
-(void)setTransitioningPlayerViewLayout:(char)arg1;
-(id)currentVideoCPN;
-(double)contentVideoMediaTime;
-(double)currentVideoMediaTime;
-(char)shouldAutoplayForFailedPlayback;
-(char)consecutiveFailedPlaybacksBelowAcceptanceThreshold;
-(void)autoplayForUnplayablePlayerResponseDidFail;
-(char)shouldAutoplayForFinishedVideo;
-(void)prepareToLoadWithPlayerTransition:(id)arg1;
-(void)switchToInlinePlayback:(char)arg1;
-(void)resetToLoading;
-(char)isInlinePlaybackActive;
-(void)suspendPlayback;
-(void)resumePlayback;
-(char)isPlayingAd;
-(void)willLoseFocus;
-(void)didGainFocus;
-(id)restorableState;
-(void)restoreToState:(id)arg1 startPlayback:(char)arg2;
-(id)contentVideoState;
-(void)setUserAudioOnlyModeActive:(char)arg1;
-(id<YTPlaybackControllerEventsDelegate>)eventsDelegate;
-(char)isPlayingAdSurvey;
-(char)isPlayingAdIntro;
-(char)playlistControlsHidden;
-(char)isTransitioningPlayerViewLayout;
-(UIViewController*<YTVideoPlayerOverlayProtocol>)activeVideoPlayerOverlay;
-(void)failWithError:(id)arg1;
-(void)setVolume:(float)arg1;
-(int)state;
-(void)reset;
-(void)setUIDelegate:(id)arg1;
-(int)playerState;
-(id<YTPlaybackControllerUIDelegate>)UIDelegate;

@end

