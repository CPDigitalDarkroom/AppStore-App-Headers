/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:50:05 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/FFD4619E-59E7-49B9-AD90-0E28F5807C56/YouTube.app/YouTube
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol EXOStallPredictor, OS_dispatch_queue, OS_dispatch_source, EXOPlayerInternalDelegate;
#import <YouTube/YouTube-Structs.h>
@class EXOIdleTimer, EXOEventCenter, NSObject, NSMutableArray, EXOTrackRenderer, EXOMediaTime;

@interface EXOPlayerInternal : NSObject {

	EXOIdleTimer* _idleTimer;
	id<EXOStallPredictor> _stallPredictor;
	EXOEventCenter* _eventCenter;
	NSObject*<OS_dispatch_queue> _playerQueue;
	NSObject*<OS_dispatch_source> _playerTimer;
	id<EXOPlayerInternalDelegate> _delegate;
	NSObject*<OS_dispatch_queue> _delegateQueue;
	NSMutableArray* _trackRenderers;
	EXOTrackRenderer* _timeSourceTrackRenderer;
	EXOMediaTime* _currentTime;
	char _playWhenReady;
	char _playWhenNotLikelyToStall;
	char _idleTimerDisabled;
	char _isInBackground;
	char _wasInterrupted;
	int _status;

}

@property (assign,nonatomic) int status;                       //@synthesize status=_status - In the implementation block
@property (nonatomic,readonly) char isEmpty; 
@property (nonatomic,readonly) char isPreparing; 
@property (nonatomic,readonly) char isPlaying; 
@property (nonatomic,readonly) char isPaused; 
@property (nonatomic,readonly) char isBuffering; 
@property (nonatomic,readonly) char isEnded; 
@property (nonatomic,readonly) char isSeeking; 
@property (nonatomic,readonly) char isTerminated; 
-(void)setTimeSourceTrackRenderer:(id)arg1 ;
-(void)addTrackRenderer:(id)arg1 ;
-(char)isTerminated;
-(id)initWithIdleTimer:(id)arg1 stallPredictor:(id)arg2 eventCenter:(id)arg3 playerQueue:(id)arg4 ;
-(void)handleAudioSessionInterruptionWithType:(unsigned)arg1 options:(unsigned)arg2 ;
-(void)onPlayerTimer;
-(void)startPlayerLoop;
-(char)stopAllTrackRenderers;
-(void)stopPlayerLoop;
-(char)disableAllTrackRenderers;
-(char)enableAllTrackRenderers;
-(char)isBuffering;
-(void)prepareLoop;
-(void)playerLoop;
-(void)terminateWithError:(id)arg1 ;
-(SCD_Struct_YT44)computeDurationFromTrackRenderers;
-(char)isEnded;
-(void)internalPlay;
-(char)isSeeking;
-(void)terminate;
-(void)appWillEnterForeground;
-(void)appDidEnterBackground;
-(char)isPreparing;
-(void)prepare;
-(void)play;
-(void)seekToTime:(SCD_Struct_YT44)arg1 completionHandler:(/*^block*/id)arg2 ;
-(char)isPaused;
-(char)isPlaying;
-(void)dealloc;
-(id)init;
-(void)setIdleTimerDisabled:(char)arg1 ;
-(char)isEmpty;
-(void)pause;
-(int)status;
-(void)setStatus:(int)arg1 ;
-(void)setDelegate:(id)arg1 delegateQueue:(id)arg2 ;
@end

