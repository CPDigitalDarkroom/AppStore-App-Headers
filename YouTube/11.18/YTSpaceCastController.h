/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:49:27 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/FFD4619E-59E7-49B9-AD90-0E28F5807C56/YouTube.app/YouTube
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <YouTube/YTSpaceCastDiscoveryDelegate.h>
#import <YouTube/GCKNNetworkReachabilityDelegate.h>
#import <YouTube/YTAcceleratedUIProvider.h>

@class YTSpaceCastDiscoveryService, YTSpaceCastDeviceSummaryService, YTSpaceCastCacheService, YTSpaceCastMetadataService, YTSpaceCastLoggingService, GCKNNetworkReachability, NSMutableDictionary, YTSpaceCastDevice, NSRegularExpression, NSHashTable, NSTimer, GIMMe, NSString;

@interface YTSpaceCastController : NSObject <YTSpaceCastDiscoveryDelegate, GCKNNetworkReachabilityDelegate, YTAcceleratedUIProvider> {

	YTSpaceCastDiscoveryService* _discoveryService;
	YTSpaceCastDeviceSummaryService* _deviceSummaryService;
	YTSpaceCastCacheService* _cacheService;
	YTSpaceCastMetadataService* _metadataService;
	YTSpaceCastLoggingService* _loggingService;
	GCKNNetworkReachability* _reachability;
	NSMutableDictionary* _devicesByFQDN;
	YTSpaceCastDevice* _currentDevice;
	NSRegularExpression* _FQDNRegex;
	NSHashTable* _observers;
	char _isUIEnabledGlobally;
	NSTimer* _checkAvailabilityTimer;
	GIMMe* _gimme;

}

@property (assign,nonatomic,__weak) GIMMe * gimme;                  //@synthesize gimme=_gimme - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)discoverSpaceCastDevice;
-(GIMMe *)gimme;
-(void)setGimme:(GIMMe *)arg1 ;
-(char)isUIEnabledGlobally;
-(char)isAcceptingRequests;
-(void)fetchCachedVideoIDs:(id)arg1 successBlock:(/*^block*/id)arg2 errorBlock:(/*^block*/id)arg3 attempt:(unsigned)arg4 ;
-(char)isAcceleratedUIEnabledForDevice:(id)arg1 ;
-(char)handleError:(id)arg1 forDevice:(id)arg2 ;
-(id)getCachedStreamURLForVideoID:(id)arg1 originalStreamURL:(id)arg2 ;
-(void)invalidateDiscoveredDevices;
-(void)pinDevice:(id)arg1 ;
-(void)notifySpaceCastDidBecomeAvailable;
-(char)isValidFQDN:(id)arg1 ;
-(void)obtainDevice;
-(void)disconnectCurrentDevice;
-(void)notifySpaceCastDidBecomeUnavailable;
-(void)temporarilyDisableCurrentDevice;
-(id)randomDevice;
-(void)checkAvailabilityTimerDidFire:(id)arg1 ;
-(void)didFindDeviceWithFQDN:(id)arg1 ;
-(void)didRemoveDeviceWithFQDN:(id)arg1 ;
-(void)networkReachabilityStatusDidChange:(int)arg1 networkDidChange:(char)arg2 ;
-(char)isAcceleratedUIEnabled;
-(void)fetchCachedVideoIDs:(id)arg1 successBlock:(/*^block*/id)arg2 errorBlock:(/*^block*/id)arg3 ;
-(void)getMetadataForVideo:(id)arg1 successBlock:(/*^block*/id)arg2 errorBlock:(/*^block*/id)arg3 ;
-(void)setDevicesByFQDN:(id)arg1 ;
-(id)currentDevice;
-(void)dealloc;
-(id)init;
-(void)addObserver:(id)arg1 ;
-(void)removeObserver:(id)arg1 ;
@end

