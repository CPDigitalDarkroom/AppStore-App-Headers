/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:49:22 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/FFD4619E-59E7-49B9-AD90-0E28F5807C56/YouTube.app/YouTube
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <YouTube/YouTube-Structs.h>
#import <YouTube/GPUImageFilter.h>

@interface GPUImageTransformFilter : GPUImageFilter {

	int transformMatrixUniform;
	int orthographicMatrixUniform;
	GPUMatrix4x4 orthographicMatrix;
	char _ignoreAspectRatio;
	char _anchorTopLeft;
	CGAffineTransform affineTransform;
	CATransform3D _transform3D;

}

@property (assign,nonatomic) CGAffineTransform affineTransform; 
@property (assign,nonatomic) CATransform3D transform3D;                      //@synthesize transform3D=_transform3D - In the implementation block
@property (assign,nonatomic) char ignoreAspectRatio;                         //@synthesize ignoreAspectRatio=_ignoreAspectRatio - In the implementation block
@property (assign,nonatomic) char anchorTopLeft;                             //@synthesize anchorTopLeft=_anchorTopLeft - In the implementation block
-(void)setupFilterForSize:(CGSize)arg1 ;
-(void)newFrameReadyAtTime:(SCD_Struct_YT44)arg1 atIndex:(int)arg2 ;
-(void)loadOrthoMatrix:(float*)arg1 left:(float)arg2 right:(float)arg3 bottom:(float)arg4 top:(float)arg5 near:(float)arg6 far:(float)arg7 ;
-(void)convert3DTransform:(CATransform3D*)arg1 toMatrix:(GPUMatrix4x4*)arg2 ;
-(void)setIgnoreAspectRatio:(char)arg1 ;
-(void)setAnchorTopLeft:(char)arg1 ;
-(char)ignoreAspectRatio;
-(char)anchorTopLeft;
-(id)init;
-(CGAffineTransform)affineTransform;
-(void)setAffineTransform:(CGAffineTransform)arg1 ;
-(CATransform3D)transform3D;
-(void)setTransform3D:(CATransform3D)arg1 ;
@end

