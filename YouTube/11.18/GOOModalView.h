/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:50:07 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/FFD4619E-59E7-49B9-AD90-0E28F5807C56/YouTube.app/YouTube
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <YouTube/YouTube-Structs.h>
#import <UIKit/UIView.h>
#import <UIKit/UIGestureRecognizerDelegate.h>
#import <YouTube/GOOModalPresentation.h>

@class UITapGestureRecognizer, UIView, GOODialogView, UIColor, QTMColorGroup, NSString;

@interface GOOModalView : UIView <UIGestureRecognizerDelegate, GOOModalPresentation> {

	float _cachedDialogShadowOpacity;
	UITapGestureRecognizer* _tapRecognizer;
	char postScreenChangeNotificationOnDismiss;
	char _shouldDismissOnBackgroundTap;
	UIView* viewToReceiveVoiceOverFocusAfterDismissal;
	id _target;
	id _userObject;
	GOODialogView* _dialogView;

}

@property (assign,nonatomic,__weak) id target;                                                                                           //@synthesize target=_target - In the implementation block
@property (nonatomic,retain) id userObject;                                                                                              //@synthesize userObject=_userObject - In the implementation block
@property (assign,nonatomic) char shouldDismissOnBackgroundTap;                                                                          //@synthesize shouldDismissOnBackgroundTap=_shouldDismissOnBackgroundTap - In the implementation block
@property (nonatomic,retain) UIColor * dialogBackgroundColor; 
@property (assign,nonatomic) char colorizeActionButtons; 
@property (nonatomic,retain) QTMColorGroup * actionButtonColorGroup; 
@property (nonatomic,retain) UIColor * actionButtonTitleColor; 
@property (nonatomic,retain) UIColor * actionButtonIconColor; 
@property (assign,nonatomic) float actionButtonOpacity; 
@property (nonatomic,retain) GOODialogView * dialogView;                                                                                 //@synthesize dialogView=_dialogView - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (assign,nonatomic,__weak) UIView * viewToReceiveVoiceOverFocusAfterDismissal; 
@property (assign,getter=shouldPostScreenChangeNotificationOnDismiss,nonatomic) char postScreenChangeNotificationOnDismiss; 
+(void)applyContainerShadowToLayer:(id)arg1 ;
-(void)addTitle:(id)arg1 withAction:(/*^block*/id)arg2 ;
-(void)setShouldDismissOnBackgroundTap:(char)arg1 ;
-(void)addTitle:(id)arg1 withCancelSelector:(SEL)arg2 ;
-(void)dismissWithCancelAction:(char)arg1 ;
-(void)addTitle:(id)arg1 withSelector:(SEL)arg2 ;
-(GOODialogView *)dialogView;
-(void)addTitle:(id)arg1 iconImage:(id)arg2 withAction:(/*^block*/id)arg3 ;
-(void)addTitle:(id)arg1 automationIdentifier:(id)arg2 withSelector:(SEL)arg3 ;
-(void)addTitle:(id)arg1 iconImage:(id)arg2 automationIdentifier:(id)arg3 withAction:(/*^block*/id)arg4 ;
-(void)addTitle:(id)arg1 withCancelAction:(/*^block*/id)arg2 ;
-(void)addTitle:(id)arg1 automationIdentifier:(id)arg2 withAction:(/*^block*/id)arg3 ;
-(void)addTitle:(id)arg1 withStyle:(int)arg2 automationIdentifier:(id)arg3 selector:(SEL)arg4 ;
-(void)reposition;
-(void)didTapBackground;
-(void)dismissDialog:(char)arg1 ;
-(void)revealDialog;
-(char)shouldDimBackground;
-(double)showAnimationDuration;
-(double)hideAnimationDuration;
-(UIView *)viewToReceiveVoiceOverFocusAfterDismissal;
-(void)setViewToReceiveVoiceOverFocusAfterDismissal:(UIView *)arg1 ;
-(char)shouldPostScreenChangeNotificationOnDismiss;
-(void)setPostScreenChangeNotificationOnDismiss:(char)arg1 ;
-(void)addTitle:(id)arg1 iconImage:(id)arg2 automationIdentifier:(id)arg3 accessibilityTraits:(unsigned long long)arg4 withAction:(/*^block*/id)arg5 ;
-(void)addButton:(id)arg1 withAction:(/*^block*/id)arg2 ;
-(void)setDialogView:(GOODialogView *)arg1 ;
-(void)addTitle:(id)arg1 iconImage:(id)arg2 automationIdentifier:(id)arg3 withSelector:(SEL)arg4 ;
-(void)addTitle:(id)arg1 automationIdentifier:(id)arg2 withCancelSelector:(SEL)arg3 ;
-(char)colorizeActionButtons;
-(UIColor *)actionButtonIconColor;
-(void)dismissWithAnimations:(/*^block*/id)arg1 completion:(/*^block*/id)arg2 ;
-(void)addTitle:(id)arg1 iconImage:(id)arg2 withStyle:(int)arg3 automationIdentifier:(id)arg4 selector:(SEL)arg5 ;
-(void)addTitle:(id)arg1 iconImage:(id)arg2 withStyle:(int)arg3 automationIdentifier:(id)arg4 action:(/*^block*/id)arg5 ;
-(void)addTitle:(id)arg1 iconImage:(id)arg2 withStyle:(int)arg3 automationIdentifier:(id)arg4 accessibilityTraits:(unsigned long long)arg5 action:(/*^block*/id)arg6 ;
-(void)addTitle:(id)arg1 iconImage:(id)arg2 withStyle:(int)arg3 automationIdentifier:(id)arg4 accessibilityTraits:(unsigned long long)arg5 insets:(UIEdgeInsets)arg6 showHorizontalDivider:(char)arg7 action:(/*^block*/id)arg8 ;
-(void)addTitle:(id)arg1 automationIdentifier:(id)arg2 withCancelAction:(/*^block*/id)arg3 ;
-(void)addTitle:(id)arg1 automationIdentifier:(id)arg2 withDestructiveSelector:(SEL)arg3 ;
-(void)addTitle:(id)arg1 automationIdentifier:(id)arg2 withDestructiveAction:(/*^block*/id)arg3 ;
-(void)addTitle:(id)arg1 withStyle:(int)arg2 automationIdentifier:(id)arg3 action:(/*^block*/id)arg4 ;
-(void)setActionButtonColorGroup:(QTMColorGroup *)arg1 ;
-(void)setActionButtonTitleColor:(UIColor *)arg1 ;
-(void)setActionButtonIconColor:(UIColor *)arg1 ;
-(void)setActionButtonOpacity:(float)arg1 ;
-(void)setColorizeActionButtons:(char)arg1 ;
-(QTMColorGroup *)actionButtonColorGroup;
-(UIColor *)actionButtonTitleColor;
-(float)actionButtonOpacity;
-(void)addTitle:(id)arg1 iconImage:(id)arg2 withSelector:(SEL)arg3 ;
-(void)addTitle:(id)arg1 iconImage:(id)arg2 withStyle:(int)arg3 automationIdentifier:(id)arg4 accessibilityTraits:(unsigned long long)arg5 userObject:(id)arg6 selector:(SEL)arg7 ;
-(void)addButton:(id)arg1 userObject:(id)arg2 withSelector:(SEL)arg3 ;
-(void)dismissDueToApplicationBackground;
-(char)shouldDismissOnBackgroundTap;
-(void)addTitle:(id)arg1 userObject:(id)arg2 withSelector:(SEL)arg3 ;
-(void)addTitle:(id)arg1 iconImage:(id)arg2 accessibilityTraits:(unsigned long long)arg3 withSelector:(SEL)arg4 ;
-(void)addTitle:(id)arg1 withDestructiveSelector:(SEL)arg2 ;
-(void)addTitle:(id)arg1 withDestructiveAction:(/*^block*/id)arg2 ;
-(void)addButton:(id)arg1 withSelector:(SEL)arg2 ;
-(void)setShouldDismissOnApplicationBackground:(char)arg1 ;
-(UIColor *)dialogBackgroundColor;
-(void)setDialogBackgroundColor:(UIColor *)arg1 ;
-(void)show;
-(id)initWithFrame:(CGRect)arg1 ;
-(void)dealloc;
-(id)init;
-(char)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2 ;
-(void)setTarget:(id)arg1 ;
-(id)target;
-(void)sizeToFit;
-(id)initWithTarget:(id)arg1 ;
-(void)willRotateToInterfaceOrientation:(int)arg1 duration:(double)arg2 ;
-(void)willAnimateRotationToInterfaceOrientation:(int)arg1 duration:(double)arg2 ;
-(void)didRotateFromInterfaceOrientation:(int)arg1 ;
-(void)dismiss;
-(id)userObject;
-(void)prepareToShow;
-(void)setUserObject:(id)arg1 ;
@end

