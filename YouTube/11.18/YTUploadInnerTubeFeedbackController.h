/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:49:27 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/FFD4619E-59E7-49B9-AD90-0E28F5807C56/YouTube.app/YouTube
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <YouTube/YTRetryTaskConfig.h>

@class YTRetryTaskController, YTUploadInnerTubeFeedbackRetryableStore, NSArray, NSHashTable, YTUploadFeedbackService, YTUploadInnerTubeTaskStore, NSString;

@interface YTUploadInnerTubeFeedbackController : NSObject <YTRetryTaskConfig> {

	YTRetryTaskController* _retryController;
	YTUploadInnerTubeFeedbackRetryableStore* _retryableStore;
	NSArray* _retryPattern;
	NSHashTable* _observers;
	char _pendingRequest;
	char _pendingContinuationRefresh;
	YTUploadFeedbackService* _feedbackService;
	YTUploadInnerTubeTaskStore* _uploadTaskStore;

}

@property (assign,nonatomic) char pendingRequest;                                         //@synthesize pendingRequest=_pendingRequest - In the implementation block
@property (assign,nonatomic) char pendingContinuationRefresh;                             //@synthesize pendingContinuationRefresh=_pendingContinuationRefresh - In the implementation block
@property (nonatomic,readonly) YTUploadFeedbackService * feedbackService;                 //@synthesize feedbackService=_feedbackService - In the implementation block
@property (nonatomic,readonly) YTUploadInnerTubeTaskStore * uploadTaskStore;              //@synthesize uploadTaskStore=_uploadTaskStore - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(YTUploadFeedbackService *)feedbackService;
-(void)setPendingRequest:(char)arg1 ;
-(id)retryTimeSequence;
-(void)processFeedbackItemRenderer:(id)arg1 feedbackIDsToTasksMap:(id)arg2 ;
-(void)scheduleRefreshWithRenderers:(id)arg1 ;
-(void)retryFeedbackPollingForAssetURL:(id)arg1 ;
-(void)notifyDidRetrieveVideoIDForTaskWithAssetURL:(id)arg1 ;
-(void)notifyVideoIDRegistrationFailedForTaskWithAssetURL:(id)arg1 ;
-(int)videoStatusFromUploadStatus:(int)arg1 ;
-(void)notifyUploadProcessingDidCompleteWithAssetURL:(id)arg1 renderer:(id)arg2 ;
-(void)notifyUploadProcessingDidErrorWithAssetURL:(id)arg1 renderer:(id)arg2 ;
-(void)notifyUploadProcessingDidProgressWithAssetURL:(id)arg1 renderer:(id)arg2 ;
-(void)validateAndCompletePollingForAssetURL:(id)arg1 ;
-(YTUploadInnerTubeTaskStore *)uploadTaskStore;
-(void)scheduleFetchAfterInterval:(double)arg1 ;
-(void)setPendingContinuationRefresh:(char)arg1 ;
-(void)notifyRefreshTimeoutHasExpired;
-(id)initWithUploadTaskStore:(id)arg1 uploadFeedbackService:(id)arg2 retryController:(id)arg3 innerTubeConfig:(id)arg4 ;
-(void)fetchUploadFeedbackWithFetchedTasksBlock:(/*^block*/id)arg1 errorBlock:(/*^block*/id)arg2 ;
-(char)pendingRequest;
-(char)pendingContinuationRefresh;
-(id)init;
-(void)addObserver:(id)arg1 ;
-(void)removeObserver:(id)arg1 ;
@end

