/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:49:08 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/FFD4619E-59E7-49B9-AD90-0E28F5807C56/YouTube.app/YouTube
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <YouTube/YTInnerTubeSectionController.h>
#import <YouTube/YTOfflineVideoControllerObserver.h>
#import <YouTube/YTOfflinePlaylistControllerObserver.h>
#import <YouTube/YTOfflineCoordinatorObserver.h>

@protocol YTOfflineServices;
@class NSArray, GIMMe, NSString;

@interface YTOfflineItemSectionController : YTInnerTubeSectionController <YTOfflineVideoControllerObserver, YTOfflinePlaylistControllerObserver, YTOfflineCoordinatorObserver> {

	id<YTOfflineServices> _offlineServices;
	NSArray* _entries;
	GIMMe* _gimme;

}

@property (assign,nonatomic,__weak) GIMMe * gimme;                  //@synthesize gimme=_gimme - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(GIMMe *)gimme;
-(void)setGimme:(GIMMe *)arg1 ;
-(void)updateEntriesWithVideoID:(id)arg1 ;
-(id)videoIDForEntry:(id)arg1 ;
-(void)updateVideoEntriesMatchingBlock:(/*^block*/id)arg1 withPercentageDownloaded:(float)arg2 ;
-(void)refreshAllEntries;
-(void)updateEntriesWithPlaylistID:(id)arg1 ;
-(id)playlistIDForEntry:(id)arg1 ;
-(void)updatePlaylistEntriesMatchingBlock:(/*^block*/id)arg1 withCompletedVideos:(unsigned)arg2 totalVideos:(unsigned)arg3 ;
-(char)isNopResponseWithNewEntries:(id)arg1 ;
-(void)clearAndHandleEntries:(id)arg1 totalResults:(unsigned)arg2 ;
-(char)isValidVideoEntry:(id)arg1 ;
-(id)rendererForVideo:(id)arg1 ;
-(void)updateCell:(id)arg1 forEntry:(id)arg2 ;
-(void)downloadDidStartWithVideoID:(id)arg1 ;
-(void)downloadDidProgressWithVideoID:(id)arg1 percentageDownloaded:(float)arg2 ;
-(void)downloadDidCancelWithVideoID:(id)arg1 ;
-(void)downloadDidCompleteWithVideoID:(id)arg1 pinTypes:(int)arg2 ;
-(void)downloadDidFailWithVideoID:(id)arg1 error:(id)arg2 ;
-(void)updateClientDataAvailabilityReasonForCell:(id)arg1 entry:(id)arg2 ;
-(char)isValidPlaylistEntry:(id)arg1 ;
-(id)rendererForPlaylist:(id)arg1 ;
-(void)downloadDidProgressWithPlaylistID:(id)arg1 completedVideos:(unsigned)arg2 totalVideos:(unsigned)arg3 ;
-(char)entry:(id)arg1 hasEqualIdentifierToEntry:(id)arg2 ;
-(void)didSaveOfflineVideoWithID:(id)arg1 pinTypes:(int)arg2 ;
-(void)didDeleteOfflineVideoWithID:(id)arg1 pinTypes:(int)arg2 ;
-(void)didDeleteAllOfflineVideos;
-(void)didUpdateStatusForOfflineVideoWithID:(id)arg1 ;
-(void)didSaveThumbnailWithVideoID:(id)arg1 ;
-(void)didSaveMetadataWithPlaylistID:(id)arg1 ;
-(void)didFailToSaveOfflinePlaylistWithID:(id)arg1 ;
-(void)didSaveThumbnailWithPlaylistID:(id)arg1 ;
-(void)didDeleteOfflinePlaylistWithPlaylistID:(id)arg1 ;
-(void)didDeleteAllOfflinePlaylists;
-(void)downloadDidStartWithPlaylistID:(id)arg1 ;
-(void)downloadDidCompleteWithPlaylistID:(id)arg1 ;
-(void)networkTypeDidChange;
-(id)initWithService:(id)arg1 parentResponder:(id)arg2 ;
-(id)behaviorResponderProvider;
@end

