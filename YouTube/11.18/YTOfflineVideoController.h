/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:49:26 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/FFD4619E-59E7-49B9-AD90-0E28F5807C56/YouTube.app/YouTube
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <YouTube/MLOfflineVideoDownloadDelegate.h>
#import <YouTube/YTRetryTaskConfig.h>
#import <YouTube/YTOfflineImageControllerObserver.h>
#import <YouTube/YTOfflineVideoProvider.h>
#import <YouTube/YTOfflineVideoAdPlaylistProvider.h>

@protocol YTOfflineConfig, YTOfflineCoordinatorProtocol;
@class YTOfflineVideoStore, YTOfflineDataService, YTPlayerService, YTPlayerRequestFactory, YTOfflineImageController, YTStorageController, MLOfflineVideoDownloadController, YTRetryTaskController, MLStreamStore, NSHashTable, NSString;

@interface YTOfflineVideoController : NSObject <MLOfflineVideoDownloadDelegate, YTRetryTaskConfig, YTOfflineImageControllerObserver, YTOfflineVideoProvider, YTOfflineVideoAdPlaylistProvider> {

	YTOfflineVideoStore* _offlineVideoStore;
	YTOfflineDataService* _offlineDataService;
	id<YTOfflineConfig> _offlineConfig;
	YTPlayerService* _playerService;
	YTPlayerRequestFactory* _playerRequestFactory;
	YTOfflineImageController* _offlineImageController;
	YTStorageController* _storageController;
	MLOfflineVideoDownloadController* _offlineVideoDownloadController;
	YTRetryTaskController* _retryTaskController;
	MLStreamStore* _streamStore;
	NSHashTable* _observers;
	id<YTOfflineCoordinatorProtocol> _offlineCoordinator;

}

@property (assign,nonatomic,__weak) id<YTOfflineCoordinatorProtocol> offlineCoordinator;              //@synthesize offlineCoordinator=_offlineCoordinator - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id<YTOfflineCoordinatorProtocol>)offlineCoordinator;
-(void)fetchVideoWithID:(id)arg1 responseBlock:(/*^block*/id)arg2 errorBlock:(/*^block*/id)arg3 ;
-(void)fetchVideosWithOffset:(unsigned)arg1 fetchLimit:(unsigned)arg2 onlyPlayable:(char)arg3 pinTypes:(int)arg4 responseBlock:(/*^block*/id)arg5 errorBlock:(/*^block*/id)arg6 ;
-(void)deleteVideoWithID:(id)arg1 pinTypes:(int)arg2 responseBlock:(/*^block*/id)arg3 errorBlock:(/*^block*/id)arg4 ;
-(void)pauseDownloadWithVideoID:(id)arg1 ;
-(void)resumeDownloadWithVideoID:(id)arg1 ;
-(void)saveVideoWithID:(id)arg1 pinTypes:(int)arg2 maximumDownloadQuality:(int)arg3 playerResponse:(id)arg4 clickTrackingParams:(id)arg5 responseBlock:(/*^block*/id)arg6 errorBlock:(/*^block*/id)arg7 ;
-(void)fetchHasOfflineVideoOnDeviceWithResponseBlock:(/*^block*/id)arg1 errorBlock:(/*^block*/id)arg2 ;
-(void)deleteAllWithResponseBlock:(/*^block*/id)arg1 errorBlock:(/*^block*/id)arg2 ;
-(void)setLastPlaybackDateForID:(id)arg1 playbackDate:(id)arg2 responseBlock:(/*^block*/id)arg3 errorBlock:(/*^block*/id)arg4 ;
-(void)setCurrentUserID:(id)arg1 ;
-(void)fetchVideoNeedingAdPlaylistWithResponseBlock:(/*^block*/id)arg1 errorBlock:(/*^block*/id)arg2 ;
-(id)initWithOfflineVideoStore:(id)arg1 offlineDataService:(id)arg2 offlineConfig:(id)arg3 playerService:(id)arg4 playerRequestFactory:(id)arg5 offlineVideoDownloadController:(id)arg6 streamStore:(id)arg7 offlineImageController:(id)arg8 storageController:(id)arg9 retryTaskController:(id)arg10 ;
-(void)didSaveOfflineImageWithFilename:(id)arg1 videoIDs:(id)arg2 playlistIDs:(id)arg3 videoListIDs:(id)arg4 ;
-(void)didDeleteOfflineImageWithFilename:(id)arg1 ;
-(id)retryTimeSequence;
-(void)notifyDidFailToSaveOfflineVideoWithID:(id)arg1 ;
-(void)setVideoStatusForID:(id)arg1 videoStatus:(int)arg2 playerResponse:(id)arg3 responseBlock:(/*^block*/id)arg4 errorBlock:(/*^block*/id)arg5 ;
-(void)setVideoStatusForID:(id)arg1 videoStatus:(int)arg2 error:(id)arg3 ;
-(void)markVideoForRetryWithID:(id)arg1 responseBlock:(/*^block*/id)arg2 ;
-(void)innerTubeSaveOfflineVideoWithPlayerResponse:(id)arg1 pinTypes:(int)arg2 maximumDownloadQuality:(int)arg3 clickTrackingParams:(id)arg4 responseBlock:(/*^block*/id)arg5 errorBlock:(/*^block*/id)arg6 ;
-(void)saveErrorAndNotifyWithID:(id)arg1 playerResponse:(id)arg2 responseBlock:(/*^block*/id)arg3 errorBlock:(/*^block*/id)arg4 ;
-(void)notifyDidUpdateAdPlaylistWithVideoID:(id)arg1 ;
-(void)swapAdPlaylistWithVideoID:(id)arg1 responseBlock:(/*^block*/id)arg2 errorBlock:(/*^block*/id)arg3 ;
-(void)notifyVideoDidDeleteWithVideoID:(id)arg1 pinTypes:(int)arg2 ;
-(void)deleteAssociatedContentForVideoID:(id)arg1 responseBlock:(/*^block*/id)arg2 errorBlock:(/*^block*/id)arg3 ;
-(void)notifyDidDeleteOfflineVideosForUserID:(id)arg1 ;
-(void)deleteVideosForUserID:(id)arg1 responseBlock:(/*^block*/id)arg2 errorBlock:(/*^block*/id)arg3 ;
-(void)deleteExplicitPinnedVideosWithResponseBlock:(/*^block*/id)arg1 errorBlock:(/*^block*/id)arg2 ;
-(void)notifyDidDeleteAllOfflineVideos;
-(void)redownloadAllWithResponseBlock:(/*^block*/id)arg1 errorBlock:(/*^block*/id)arg2 ;
-(void)convertThumbnailURLs:(id)arg1 ;
-(void)fetchPlaylistIDsWithVideoID:(id)arg1 responseBlock:(/*^block*/id)arg2 errorBlock:(/*^block*/id)arg3 ;
-(void)fetchVideoListIDsWithVideoID:(id)arg1 responseBlock:(/*^block*/id)arg2 errorBlock:(/*^block*/id)arg3 ;
-(void)fetchVideosWithOffset:(unsigned)arg1 fetchLimit:(unsigned)arg2 statuses:(id)arg3 pinTypes:(int)arg4 onlyRetryable:(char)arg5 responseBlock:(/*^block*/id)arg6 errorBlock:(/*^block*/id)arg7 ;
-(void)fetchVideoWithOfflineStateActions:(id)arg1 responseBlock:(/*^block*/id)arg2 errorBlock:(/*^block*/id)arg3 ;
-(void)fetchDeletableVideoIDWithResponseBlock:(/*^block*/id)arg1 errorBlock:(/*^block*/id)arg2 ;
-(void)fetchVideoIDNeedingAdPlaylistSwapWithResponseBlock:(/*^block*/id)arg1 errorBlock:(/*^block*/id)arg2 ;
-(void)fetchOfflineRefreshRequestWithResponseBlock:(/*^block*/id)arg1 errorBlock:(/*^block*/id)arg2 ;
-(void)fetchAdPlaybackCountWithAdVideoID:(id)arg1 responseBlock:(/*^block*/id)arg2 errorBlock:(/*^block*/id)arg3 ;
-(void)migrateOfflineVideoEntityForVideoID:(id)arg1 responseBlock:(/*^block*/id)arg2 errorBlock:(/*^block*/id)arg3 ;
-(void)getLatestOfflineActivityDateWithResponseBlock:(/*^block*/id)arg1 errorBlock:(/*^block*/id)arg2 ;
-(void)searchVideosWithString:(id)arg1 searchTypes:(int)arg2 responseBlock:(/*^block*/id)arg3 errorBlock:(/*^block*/id)arg4 ;
-(void)notifyDidUpdateOfflineStateActions;
-(void)cancelDownloadWithVideoID:(id)arg1 status:(int)arg2 ;
-(void)notifyDidUpdateStatusForOfflineVideoWithID:(id)arg1 ;
-(void)notifyDownloadDidStartWithVideoID:(id)arg1 ;
-(void)notifyDownloadDidProgressWithVideoID:(id)arg1 bytesDownloaded:(unsigned long long)arg2 totalBytes:(unsigned long long)arg3 ;
-(void)notifyDownloadDidCompleteWithVideoID:(id)arg1 ;
-(void)resetRetryableVideosWithResponseBlock:(/*^block*/id)arg1 errorBlock:(/*^block*/id)arg2 ;
-(void)notifyDownloadDidPauseWithVideoID:(id)arg1 ;
-(void)notifyDidSaveThumbnailWithVideoID:(id)arg1 ;
-(void)notifyDidSaveOfflineVideo:(id)arg1 ;
-(void)notifyDownloadDidFailWithVideoID:(id)arg1 error:(id)arg2 ;
-(void)deleteStreamForVideoID:(id)arg1 ;
-(void)cancelDownloadWithVideoID:(id)arg1 ;
-(void)notifyDownloadDidCancelWithVideoID:(id)arg1 ;
-(void)reportNotPlayableOfflineWithPlayerResponse:(id)arg1 responseBlock:(/*^block*/id)arg2 ;
-(void)getAllUserIDsWithResponseBlock:(/*^block*/id)arg1 errorBlock:(/*^block*/id)arg2 ;
-(void)offlineDownloadDidStartWithVideo:(id)arg1 ;
-(void)offlineDownloadDidProgressWithVideo:(id)arg1 bytesDownloaded:(unsigned long long)arg2 estimatedTotalBytes:(unsigned long long)arg3 ;
-(void)offlineDownloadDidCompleteWithVideo:(id)arg1 totalBytes:(unsigned long long)arg2 ;
-(void)offlineDownloadDidPauseWithVideo:(id)arg1 ;
-(void)offlineDownloadDidCancelWithVideo:(id)arg1 ;
-(void)offlineDownloadDidFailWithVideo:(id)arg1 error:(id)arg2 ;
-(void)offlinePlayerResponseByVideoID:(id)arg1 responseBlock:(/*^block*/id)arg2 errorBlock:(/*^block*/id)arg3 ;
-(void)refreshPlayerResponseWithVideoID:(id)arg1 clickTrackingParams:(id)arg2 responseBlock:(/*^block*/id)arg3 errorBlock:(/*^block*/id)arg4 ;
-(void)fetchVideoNeedingInnerTubeMigrationWithResponseBlock:(/*^block*/id)arg1 errorBlock:(/*^block*/id)arg2 ;
-(void)processOfflineState:(id)arg1 offlineStateDate:(id)arg2 forVideoIDs:(id)arg3 responseBlock:(/*^block*/id)arg4 errorBlock:(/*^block*/id)arg5 ;
-(void)downloadStreamForOfflineVideo:(id)arg1 pinTypes:(int)arg2 playerResponse:(id)arg3 responseBlock:(/*^block*/id)arg4 errorBlock:(/*^block*/id)arg5 ;
-(void)setOfflineCoordinator:(id<YTOfflineCoordinatorProtocol>)arg1 ;
-(void)dealloc;
-(void)addObserver:(id)arg1 ;
-(void)application:(id)arg1 handleEventsForBackgroundURLSession:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)removeObserver:(id)arg1 ;
@end

