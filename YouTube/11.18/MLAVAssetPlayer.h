/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:49:35 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/FFD4619E-59E7-49B9-AD90-0E28F5807C56/YouTube.app/YouTube
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol NSObject, MLAVAssetPlayerDelegate, AVAssetResourceLoaderDelegate;
#import <YouTube/YouTube-Structs.h>
@class AVURLAsset, NSURL, NSDate, YTIIosAvPlayerConfig, MLFormat, AVPlayer, AVPlayerItem, NSError, AVAsset;

@interface MLAVAssetPlayer : NSObject {

	AVURLAsset* _asset;
	NSURL* _assetURL;
	id<NSObject> _timeObserver;
	double _lastReportedPlaybackTime;
	unsigned _HLSErrorCount;
	NSDate* _HLSErrorObserverStartDate;
	char _seekWillRetry;
	double _savedSeekTime;
	SCD_Struct_YT44 _savedSeekToleranceBefore;
	SCD_Struct_YT44 _savedSeekToleranceAfter;
	/*^block*/id _savedSeekCompletionHandler;
	YTIIosAvPlayerConfig* _config;
	NSDate* _suspendAfterDate;
	char _externalPlaybackActive;
	char _observeSeekableTimeRange;
	MLFormat* _format;
	AVPlayer* _player;
	AVPlayerItem* _playerItem;
	NSError* _error;
	int _state;
	id<MLAVAssetPlayerDelegate> _delegate;
	id<AVAssetResourceLoaderDelegate> _resourceLoaderDelegate;
	id _HLSErrorObserver;
	unsigned _HLSErrorObserverLogIndex;
	unsigned _pendingSeeks;
	double _bufferedMediaTime;
	double _totalMediaTime;
	double _initialMediaTime;

}

@property (nonatomic,readonly) MLFormat * format;                                                          //@synthesize format=_format - In the implementation block
@property (nonatomic,readonly) AVPlayer * player;                                                          //@synthesize player=_player - In the implementation block
@property (nonatomic,readonly) AVAsset * asset;                                                            //@synthesize asset=_asset - In the implementation block
@property (nonatomic,readonly) AVPlayerItem * playerItem;                                                  //@synthesize playerItem=_playerItem - In the implementation block
@property (nonatomic,readonly) NSError * error;                                                            //@synthesize error=_error - In the implementation block
@property (nonatomic,readonly) int state;                                                                  //@synthesize state=_state - In the implementation block
@property (getter=isExternalPlaybackActive,nonatomic,readonly) char externalPlaybackActive;                //@synthesize externalPlaybackActive=_externalPlaybackActive - In the implementation block
@property (assign,nonatomic) float volume; 
@property (assign,getter=isMuted,nonatomic) char muted; 
@property (assign,nonatomic) char observeSeekableTimeRange;                                                //@synthesize observeSeekableTimeRange=_observeSeekableTimeRange - In the implementation block
@property (assign,nonatomic,__weak) id<MLAVAssetPlayerDelegate> delegate;                                  //@synthesize delegate=_delegate - In the implementation block
@property (assign,nonatomic,__weak) id<AVAssetResourceLoaderDelegate> resourceLoaderDelegate;              //@synthesize resourceLoaderDelegate=_resourceLoaderDelegate - In the implementation block
@property (nonatomic,readonly) double bufferedMediaTime;                                                   //@synthesize bufferedMediaTime=_bufferedMediaTime - In the implementation block
@property (assign,nonatomic) double totalMediaTime;                                                        //@synthesize totalMediaTime=_totalMediaTime - In the implementation block
@property (assign,nonatomic) id HLSErrorObserver;                                                          //@synthesize HLSErrorObserver=_HLSErrorObserver - In the implementation block
@property (assign,nonatomic) unsigned HLSErrorObserverLogIndex;                                            //@synthesize HLSErrorObserverLogIndex=_HLSErrorObserverLogIndex - In the implementation block
@property (assign,nonatomic) double initialMediaTime;                                                      //@synthesize initialMediaTime=_initialMediaTime - In the implementation block
@property (assign,nonatomic) unsigned pendingSeeks;                                                        //@synthesize pendingSeeks=_pendingSeeks - In the implementation block
+(double)secondsWithCMTime:(SCD_Struct_YT44)arg1 ;
-(double)maximumSeekableTime;
-(void)currentMediaTimeDidChangeToTime:(SCD_Struct_YT44)arg1 ;
-(void)setTotalMediaTime:(double)arg1 ;
-(double)totalMediaTime;
-(double)bufferedMediaTime;
-(double)initialMediaTime;
-(void)addPlayerObservers;
-(void)removePlayerItemErrorLogObserver;
-(void)removePlayerObservers;
-(unsigned)pendingSeeks;
-(void)setPendingSeeks:(unsigned)arg1 ;
-(id)captionsMediaSelectionGroup;
-(void)playbackDidReachEnd:(id)arg1 ;
-(void)playbackDidStall:(id)arg1 ;
-(void)playerItemLoadedTimeRangesDidChange:(id)arg1 ;
-(void)playerItemStatusDidChange:(id)arg1 ;
-(void)playerRateDidChange:(id)arg1 ;
-(void)playerItemPlaybackLikelyToKeepUpStatusDidChange:(id)arg1 ;
-(void)playerItemBufferEmptyStatusDidChange:(id)arg1 ;
-(void)playerExternalPlaybackActiveDidChange:(id)arg1 ;
-(void)playerItemSeekableTimeRangesDidChange:(id)arg1 ;
-(void)playerItemDurationDidChange:(id)arg1 ;
-(void)createTimeObserver;
-(char)isPlaybackBufferNearEmpty;
-(char)isPlaybackAlmostFinished;
-(double)bufferedMediaTimeFromLoadedTimeRanges:(id)arg1 ;
-(char)timeIsNearMediaEndTime:(double)arg1 ;
-(void)addStuckBufferStateObserverWithDelay:(double)arg1 ;
-(void)removeStuckBufferStateObserver;
-(void)addPlayerItemErrorLogObserver;
-(void)checkForHLSErrors;
-(void)stuckInBufferingState;
-(id)initWithAssetURL:(id)arg1 format:(id)arg2 player:(id)arg3 config:(id)arg4 ;
-(void)setObserveSeekableTimeRange:(char)arg1 ;
-(void)loadCaptionsOptionsWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)setCaptionsMediaSelectionOption:(id)arg1 ;
-(void)suspendAfterDelay:(double)arg1 ;
-(void)selectAudibleMediaWithTitle:(id)arg1 ;
-(char)observeSeekableTimeRange;
-(void)setResourceLoaderDelegate:(id<AVAssetResourceLoaderDelegate>)arg1 ;
-(id)HLSErrorObserver;
-(void)setHLSErrorObserver:(id)arg1 ;
-(unsigned)HLSErrorObserverLogIndex;
-(void)setHLSErrorObserverLogIndex:(unsigned)arg1 ;
-(void)bufferThenPlay;
-(void)setInitialMediaTime:(double)arg1 ;
-(char)isTerminated;
-(id<AVAssetResourceLoaderDelegate>)resourceLoaderDelegate;
-(void)terminate;
-(char)isExternalPlaybackActive;
-(void)setMuted:(char)arg1 ;
-(AVPlayerItem *)playerItem;
-(NSError *)error;
-(void)play;
-(void)seekToTime:(double)arg1 toleranceBefore:(SCD_Struct_YT44)arg2 toleranceAfter:(SCD_Struct_YT44)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)failWithError:(id)arg1 ;
-(char)isPlaybackLikelyToKeepUp;
-(MLFormat *)format;
-(void)setPlayerItem:(AVPlayerItem *)arg1 ;
-(AVPlayer *)player;
-(void)setVolume:(float)arg1 ;
-(void)setDelegate:(id<MLAVAssetPlayerDelegate>)arg1 ;
-(void)dealloc;
-(id<MLAVAssetPlayerDelegate>)delegate;
-(int)state;
-(void)setState:(int)arg1 ;
-(void)suspend;
-(void)resume;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(void)load;
-(AVAsset *)asset;
-(void)pause;
-(double)currentMediaTime;
-(float)volume;
-(char)isMuted;
@end

