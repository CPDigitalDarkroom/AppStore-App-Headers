/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:49:16 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/FFD4619E-59E7-49B9-AD90-0E28F5807C56/YouTube.app/YouTube
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol DrishtiGraphDelegate;
#import <YouTube/YouTube-Structs.h>
@class EAGLContext, NSRecursiveLock, DrishtiGraphGPUData;

@interface DrishtiGraph : NSObject {

	CalculatorGraph* _graph;
	map<std::__1::basic_string<char>, drishti::Packet, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, drishti::Packet> > >* _inputSidePackets;
	map<std::__1::basic_string<char>, drishti::Packet, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, drishti::Packet> > >* _streamHeaders;
	int _framesInFlight;
	Timestamp _frameTimestamp;
	long long _frameNumber;
	EAGLContext* _glContext;
	CalculatorGraphConfig* _config;
	char _started;
	DrishtiGraph* _myself;
	id<DrishtiGraphDelegate> _delegate;
	NSRecursiveLock* _glLock;
	int _maxFramesInFlight;
	DrishtiGraphGPUData* _gpuData;

}

@property (__weak) id<DrishtiGraphDelegate> delegate;                    //@synthesize delegate=_delegate - In the implementation block
@property (readonly) EAGLContext * glContext; 
@property (readonly) NSRecursiveLock * glLock;                           //@synthesize glLock=_glLock - In the implementation block
@property (assign,nonatomic) int maxFramesInFlight;                      //@synthesize maxFramesInFlight=_maxFramesInFlight - In the implementation block
@property (nonatomic,retain) DrishtiGraphGPUData * gpuData;              //@synthesize gpuData=_gpuData - In the implementation block
-(id)initWithGraphConfig:(const CalculatorGraphConfig*)arg1 ;
-(void)addSidePackets:(const map<std::__1::basic_string<char>, drishti::Packet, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, drishti::Packet> > >*)arg1 ;
-(void)addFrameOutputStream:(const basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)arg1 outputPacketType:(int)arg2 ;
-(void)setMaxFramesInFlight:(int)arg1 ;
-(char)startWithError:(id*)arg1 ;
-(char)sendPacket:(const Packet*)arg1 intoStream:(const basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)arg2 error:(id*)arg3 ;
-(void)sendPixelBuffer:(CVBufferRef)arg1 intoStream:(const basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)arg2 packetType:(int)arg3 timestamp:(const Timestamp*)arg4 ;
-(char)closeInputStream:(const basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)arg1 error:(id*)arg2 ;
-(char)waitUntilDoneWithError:(id*)arg1 ;
-(void)setGpuData:(DrishtiGraphGPUData *)arg1 ;
-(void)initGPU;
-(void)initGPU;
-(Packet*)packetWithPixelBuffer:(CVBufferRef)arg1 packetType:(int)arg2 ;
-(void)setHeaderPacket:(const Packet*)arg1 forStream:(const basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)arg2 ;
-(void)setSidePacket:(const Packet*)arg1 named:(const basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)arg2 ;
-(void)sendPixelBuffer:(CVBufferRef)arg1 intoStream:(const basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)arg2 packetType:(int)arg3 ;
-(NSRecursiveLock *)glLock;
-(int)maxFramesInFlight;
-(DrishtiGraphGPUData *)gpuData;
-(EAGLContext *)glContext;
-(void)cancel;
-(void)setDelegate:(id<DrishtiGraphDelegate>)arg1 ;
-(id)description;
-(id<DrishtiGraphDelegate>)delegate;
@end

