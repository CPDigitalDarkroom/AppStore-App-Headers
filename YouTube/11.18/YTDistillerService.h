/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:49:15 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/FFD4619E-59E7-49B9-AD90-0E28F5807C56/YouTube.app/YouTube
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <YouTube/YTBaseApiaryService.h>
#import <YouTube/YTListOperation.h>

@protocol YTApiaryConfig;
@class YTDistillerPageParser, YTCache, GIMMe, NSString;

@interface YTDistillerService : YTBaseApiaryService <YTListOperation> {

	YTDistillerPageParser* _distillerPageParser;
	id<YTApiaryConfig> _apiaryConfig;
	YTCache* _responseCache;

}

@property (assign,nonatomic,__weak) GIMMe * gimme; 
@property (nonatomic,readonly) YTCache * responseCache;              //@synthesize responseCache=_responseCache - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id)apiaryDistillerURLBase;
-(id)requestForDistillerRepliesWithCommentID:(id)arg1 identity:(id)arg2 ;
-(id)requestForDistillerCommentsWithVideoID:(id)arg1 identity:(id)arg2 sortBy:(int)arg3 linkedCommentID:(id)arg4 ;
-(void)makeDistillerPermissionsRequest:(id)arg1 responseBlock:(/*^block*/id)arg2 errorBlock:(/*^block*/id)arg3 ;
-(void)makeDistillerDeleteReplyRequestWithID:(id)arg1 identity:(id)arg2 responseBlock:(/*^block*/id)arg3 errorBlock:(/*^block*/id)arg4 ;
-(void)makeDistillerDeleteCommentRequestWithID:(id)arg1 identity:(id)arg2 responseBlock:(/*^block*/id)arg3 errorBlock:(/*^block*/id)arg4 ;
-(void)makeDistillerRejectReplyRequestWithID:(id)arg1 videoID:(id)arg2 identity:(id)arg3 responseBlock:(/*^block*/id)arg4 errorBlock:(/*^block*/id)arg5 ;
-(void)makeDistillerRejectCommentRequestWithID:(id)arg1 videoID:(id)arg2 identity:(id)arg3 responseBlock:(/*^block*/id)arg4 errorBlock:(/*^block*/id)arg5 ;
-(void)makeDistillerFlagReplyRequestWithID:(id)arg1 identity:(id)arg2 responseBlock:(/*^block*/id)arg3 errorBlock:(/*^block*/id)arg4 ;
-(void)makeDistillerFlagCommentRequestWithID:(id)arg1 identity:(id)arg2 responseBlock:(/*^block*/id)arg3 errorBlock:(/*^block*/id)arg4 ;
-(void)makeDistillerLikeReplyRequestWithID:(id)arg1 identity:(id)arg2 responseBlock:(/*^block*/id)arg3 errorBlock:(/*^block*/id)arg4 ;
-(void)makeDistillerLikeCommentRequestWithID:(id)arg1 identity:(id)arg2 responseBlock:(/*^block*/id)arg3 errorBlock:(/*^block*/id)arg4 ;
-(void)makeDistillerUnlikeReplyRequestWithID:(id)arg1 identity:(id)arg2 responseBlock:(/*^block*/id)arg3 errorBlock:(/*^block*/id)arg4 ;
-(void)makeDistillerUnlikeCommentRequestWithID:(id)arg1 identity:(id)arg2 responseBlock:(/*^block*/id)arg3 errorBlock:(/*^block*/id)arg4 ;
-(void)makeListRequest:(id)arg1 responseBlock:(/*^block*/id)arg2 errorBlock:(/*^block*/id)arg3 ;
-(YTCache *)responseCache;
-(void)makeCustomRequest:(id)arg1 method:(id)arg2 parser:(id)arg3 responseBlock:(/*^block*/id)arg4 errorBlock:(/*^block*/id)arg5 retryEnabled:(char)arg6 timeoutInterval:(double)arg7 ;
-(id)requestToDeleteDistillerCommentWithID:(id)arg1 identity:(id)arg2 ;
-(/*^block*/id)responseBlockWithBlock:(/*^block*/id)arg1 ;
-(id)requestToDeleteDistillerReplyWithID:(id)arg1 identity:(id)arg2 ;
-(id)requestToRejectDistillerCommentWithID:(id)arg1 videoID:(id)arg2 identity:(id)arg3 ;
-(/*^block*/id)cacheableResponseBlockWithBlock:(/*^block*/id)arg1 ;
-(id)requestToRejectDistillerReplyWithID:(id)arg1 videoID:(id)arg2 identity:(id)arg3 ;
-(id)requestToLikeDistillerCommentWithID:(id)arg1 identity:(id)arg2 ;
-(id)requestToLikeDistillerReplyWithID:(id)arg1 identity:(id)arg2 ;
-(id)requestToUnlikeDistillerCommentWithID:(id)arg1 identity:(id)arg2 ;
-(id)requestToUnlikeDistillerReplyWithID:(id)arg1 identity:(id)arg2 ;
-(id)requestToFlagDistillerCommentWithID:(id)arg1 identity:(id)arg2 ;
-(id)requestToFlagDistillerReplyWithID:(id)arg1 identity:(id)arg2 ;
-(void)clearCaches;
-(id)init;
@end

