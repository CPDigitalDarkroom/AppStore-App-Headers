/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:49:09 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/FFD4619E-59E7-49B9-AD90-0E28F5807C56/YouTube.app/YouTube
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <UIKit/UIViewController.h>
#import <YouTube/GOOActionSheetDelegate.h>
#import <YouTube/MDXPlayerOverlayViewDelegate.h>
#import <YouTube/YTCaptionControllerDelegate.h>
#import <YouTube/YTContentVideoPlayerOverlayProtocol.h>
#import <YouTube/YTResponder.h>

@protocol YTCaptionControllerProtocol, YTDataServices, YTCaptionConfig, YTResponder, YTContentVideoPlayerOverlayDelegate, MLPlayerCaptionProtocol;
@class MDXPlayerOverlayView, MDXAutoplayCoordinator, GOOActionSheet, YTIServiceEndpoint, YTCaptionTrack, GIMMe, NSString;

@interface MDXPlayerOverlayViewController : UIViewController <GOOActionSheetDelegate, MDXPlayerOverlayViewDelegate, YTCaptionControllerDelegate, YTContentVideoPlayerOverlayProtocol, YTResponder> {

	MDXPlayerOverlayView* _playerOverlayView;
	MDXAutoplayCoordinator* _MDXAutoplayCoordinator;
	GOOActionSheet* _actionSheet;
	id<YTCaptionControllerProtocol> _captionController;
	id<YTDataServices> _dataServices;
	id<YTCaptionConfig> _captionConfig;
	YTIServiceEndpoint* _likeServiceEndpoint;
	char _playlistControlsHidden;
	char _hasPreviousVideo;
	char _hasNextVideo;
	char _userScrubbing;
	char _disallowQualitySwitch;
	id<YTResponder> _parentResponder;
	id<YTContentVideoPlayerOverlayDelegate> _delegate;
	id<MLPlayerCaptionProtocol> _playerCaptionDelegate;
	YTCaptionTrack* _activeCaptionTrack;
	int _foregroundAudioOnlyPlaybackReason;
	GIMMe* _gimme;

}

@property (assign,nonatomic,__weak) GIMMe * gimme;                                                      //@synthesize gimme=_gimme - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (assign,nonatomic,__weak) id<YTPlayerOverlayDelegate> delegate; 
@property (assign,nonatomic,__weak) id<MLPlayerCaptionProtocol> playerCaptionDelegate;                  //@synthesize playerCaptionDelegate=_playerCaptionDelegate - In the implementation block
@property (assign,getter=arePlaylistControlsHidden,nonatomic) char playlistControlsHidden;              //@synthesize playlistControlsHidden=_playlistControlsHidden - In the implementation block
@property (assign,nonatomic) char hasPreviousVideo;                                                     //@synthesize hasPreviousVideo=_hasPreviousVideo - In the implementation block
@property (assign,nonatomic) char hasNextVideo;                                                         //@synthesize hasNextVideo=_hasNextVideo - In the implementation block
@property (assign,getter=isUserScrubbing,nonatomic) char userScrubbing;                                 //@synthesize userScrubbing=_userScrubbing - In the implementation block
@property (nonatomic,readonly) YTCaptionTrack * activeCaptionTrack;                                     //@synthesize activeCaptionTrack=_activeCaptionTrack - In the implementation block
@property (assign,nonatomic) int foregroundAudioOnlyPlaybackReason;                                     //@synthesize foregroundAudioOnlyPlaybackReason=_foregroundAudioOnlyPlaybackReason - In the implementation block
@property (assign,nonatomic) char disallowQualitySwitch;                                                //@synthesize disallowQualitySwitch=_disallowQualitySwitch - In the implementation block
@property (assign,nonatomic) char externalPlaybackActive; 
@property (nonatomic,retain) id<YTNerdStatsVideoDataProtocol> nerdStatsVideoData; 
@property (assign,nonatomic) char MDXPlaybackActive; 
@property (assign,nonatomic) char tapToKeepWatchingActive; 
@property (nonatomic,__weak,readonly) id<YTResponder> parentResponder;                                  //@synthesize parentResponder=_parentResponder - In the implementation block
-(id<YTResponder>)parentResponder;
-(char)hasNextVideo;
-(char)hasPreviousVideo;
-(GIMMe *)gimme;
-(void)setGimme:(GIMMe *)arg1 ;
-(void)didTapPlay;
-(void)didTapPause;
-(void)didTapReplay;
-(void)didTapPlayPrevious;
-(void)didTapPlayNext;
-(void)didTapOverflowButton:(id)arg1 ;
-(void)setMediaTime:(double)arg1 ;
-(void)didTapNavigateToWatchPage;
-(void)navigateToWatchPage;
-(id)newActionSheet;
-(void)didPressClosedCaptions;
-(void)didPressLikeButton;
-(void)cleanupActionSheet;
-(id)newCaptionControllerWithPlayerData:(id)arg1 ;
-(void)activeCaptionTrackDidChange:(id)arg1 ;
-(void)playerStateDidChangeToState:(int)arg1 ;
-(void)actionSheetDidDisappear:(id)arg1 cancelAction:(char)arg2 ;
-(void)captionTrackPickerDidFailWithError:(id)arg1 message:(id)arg2 ;
-(void)didLoadFormat3Captions:(id)arg1 ;
-(void)setUserVisibleCaptionsSelected:(char)arg1 ;
-(void)setCaptionsActive:(char)arg1 ;
-(void)setCaptionsAvailable:(char)arg1 ;
-(void)setMarkers:(id)arg1 ;
-(void)setPlayerResponse:(id)arg1 ;
-(void)setWatchNextResponse:(id)arg1 ;
-(void)resetAndShowLoading:(char)arg1 ;
-(void)playerDidFailWithError:(id)arg1 ;
-(id<MLPlayerCaptionProtocol>)playerCaptionDelegate;
-(void)setPlayerCaptionDelegate:(id<MLPlayerCaptionProtocol>)arg1 ;
-(char)arePlaylistControlsHidden;
-(void)setPlaylistControlsHidden:(char)arg1 ;
-(void)setHasPreviousVideo:(char)arg1 ;
-(void)setHasNextVideo:(char)arg1 ;
-(char)isUserScrubbing;
-(void)setUserScrubbing:(char)arg1 ;
-(YTCaptionTrack *)activeCaptionTrack;
-(int)foregroundAudioOnlyPlaybackReason;
-(void)setForegroundAudioOnlyPlaybackReason:(int)arg1 ;
-(char)disallowQualitySwitch;
-(void)setDisallowQualitySwitch:(char)arg1 ;
-(char)externalPlaybackActive;
-(void)setExpansionCoefficient:(float)arg1 ;
-(void)setPlayerViewLayout:(int)arg1 ;
-(int)playerViewLayout;
-(void)setDownloadedTime:(double)arg1 ;
-(void)setMinimumSeekableTime:(double)arg1 maximumSeekableTime:(double)arg2 ;
-(void)setAirPlayAllowed:(char)arg1 ;
-(void)setPlaybackInSyncWithLivePlayhead:(char)arg1 ;
-(id)initWithAutoplayCoordinator:(id)arg1 parentResponder:(id)arg2 ;
-(char)isStoryboardEnabled;
-(void)setStoryboardEnabled:(char)arg1 ;
-(id)storyboardControllerDelegate;
-(id)captionController;
-(void)setDelegate:(id<YTPlayerOverlayDelegate>)arg1 ;
-(id<YTPlayerOverlayDelegate>)delegate;
-(void)loadView;
-(void)setTotalTime:(double)arg1 ;
-(void)setExternalPlaybackActive:(char)arg1 ;
@end

