/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:49:52 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/FFD4619E-59E7-49B9-AD90-0E28F5807C56/YouTube.app/YouTube
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <YouTube/PBGeneratedMessage.h>

@class NSString, YTINavigationEndpoint, YTIFormattedString, YTIThumbnailDetails, YTILikeData, YTIShareData, YTIPlaylistHeaderChannelHeaderSupportedRenderers, YTILikeButtonSupportedRenderers, YTIEditableDetails, YTIPlaylistHeaderRenderer_PlaylistHeaderOfflineabilitySupportedRenderers, YTIServiceEndpoint, NSData, PBMutableArray, YTIPlaylistThumbnailSupportedRenderers, YTIPlaylistHeaderBannerSupportedRenderers, YTIButtonSupportedRenderers, YTIPlaylistSaveButtonSupportedRenderers, YTIPlaylistHeaderShareButtonSupportedRenderers;

@interface YTIPlaylistHeaderRenderer : PBGeneratedMessage

@property (assign,nonatomic) char hasPlaylistId; 
@property (nonatomic,retain) NSString * playlistId; 
@property (assign,nonatomic) char hasPlayEndpoint; 
@property (nonatomic,retain) YTINavigationEndpoint * playEndpoint; 
@property (assign,nonatomic) char hasTitle; 
@property (nonatomic,retain) YTIFormattedString * title; 
@property (assign,nonatomic) char hasThumbnail; 
@property (nonatomic,retain) YTIThumbnailDetails * thumbnail; 
@property (assign,nonatomic) char hasNumVideosText; 
@property (nonatomic,retain) YTIFormattedString * numVideosText; 
@property (assign,nonatomic) char hasDescriptionText; 
@property (nonatomic,retain) YTIFormattedString * descriptionText; 
@property (assign,nonatomic) char hasOwnerText; 
@property (nonatomic,retain) YTIFormattedString * ownerText; 
@property (assign,nonatomic) char hasViewCountText; 
@property (nonatomic,retain) YTIFormattedString * viewCountText; 
@property (assign,nonatomic) char hasTotalLengthText; 
@property (nonatomic,retain) YTIFormattedString * totalLengthText; 
@property (assign,nonatomic) char hasLikeData; 
@property (nonatomic,retain) YTILikeData * likeData; 
@property (assign,nonatomic) char hasShareData; 
@property (nonatomic,retain) YTIShareData * shareData; 
@property (assign,nonatomic) char hasIsEditable; 
@property (assign,nonatomic) char isEditable; 
@property (assign,nonatomic) char hasChannelHeader; 
@property (nonatomic,retain) YTIPlaylistHeaderChannelHeaderSupportedRenderers * channelHeader; 
@property (assign,nonatomic) char hasIsPrivate; 
@property (assign,nonatomic) char isPrivate; 
@property (assign,nonatomic) char hasLikeButton; 
@property (nonatomic,retain) YTILikeButtonSupportedRenderers * likeButton; 
@property (assign,nonatomic) char hasPrivacy; 
@property (assign,nonatomic) int privacy; 
@property (assign,nonatomic) char hasOwnerEndpoint; 
@property (nonatomic,retain) YTINavigationEndpoint * ownerEndpoint; 
@property (assign,nonatomic) char hasEditableDetails; 
@property (nonatomic,retain) YTIEditableDetails * editableDetails; 
@property (assign,nonatomic) char hasEditEndpoint; 
@property (nonatomic,retain) YTINavigationEndpoint * editEndpoint; 
@property (assign,nonatomic) char hasOfflineability; 
@property (nonatomic,retain) YTIPlaylistHeaderRenderer_PlaylistHeaderOfflineabilitySupportedRenderers * offlineability; 
@property (assign,nonatomic) char hasCopyEndpoint; 
@property (nonatomic,retain) YTIServiceEndpoint * copyEndpoint; 
@property (assign,nonatomic) char hasTrackingParams; 
@property (nonatomic,retain) NSData * trackingParams; 
@property (assign,nonatomic) char hasServiceEndpointsArray; 
@property (nonatomic,retain) PBMutableArray * serviceEndpointsArray; 
@property (assign,nonatomic) char hasShortViewCountText; 
@property (nonatomic,retain) YTIFormattedString * shortViewCountText; 
@property (assign,nonatomic) char hasLikesCountWithLikeText; 
@property (nonatomic,retain) YTIFormattedString * likesCountWithLikeText; 
@property (assign,nonatomic) char hasLikesCountWithoutLikeText; 
@property (nonatomic,retain) YTIFormattedString * likesCountWithoutLikeText; 
@property (assign,nonatomic) char hasShufflePlayEndpoint; 
@property (nonatomic,retain) YTINavigationEndpoint * shufflePlayEndpoint; 
@property (assign,nonatomic) char hasPlayButtonText; 
@property (nonatomic,retain) YTIFormattedString * playButtonText; 
@property (assign,nonatomic) char hasFlaggingAction; 
@property (nonatomic,retain) NSString * flaggingAction; 
@property (assign,nonatomic) char hasThumbnailRenderer; 
@property (nonatomic,retain) YTIPlaylistThumbnailSupportedRenderers * thumbnailRenderer; 
@property (assign,nonatomic) char hasStatsArray; 
@property (nonatomic,retain) PBMutableArray * statsArray; 
@property (assign,nonatomic) char hasBriefStatsArray; 
@property (nonatomic,retain) PBMutableArray * briefStatsArray; 
@property (assign,nonatomic) char hasPlaylistInfoNavigationEndpoint; 
@property (nonatomic,retain) YTINavigationEndpoint * playlistInfoNavigationEndpoint; 
@property (assign,nonatomic) char hasTranslationEditorEndpoint; 
@property (nonatomic,retain) YTINavigationEndpoint * translationEditorEndpoint; 
@property (assign,nonatomic) char hasEditorEndpoint; 
@property (nonatomic,retain) YTINavigationEndpoint * editorEndpoint; 
@property (assign,nonatomic) char hasShouldColorSampleThumbnail; 
@property (assign,nonatomic) char shouldColorSampleThumbnail; 
@property (assign,nonatomic) char hasPlaylistHeaderBanner; 
@property (nonatomic,retain) YTIPlaylistHeaderBannerSupportedRenderers * playlistHeaderBanner; 
@property (assign,nonatomic) char hasNotificationPreferenceToggleButton; 
@property (nonatomic,retain) YTIButtonSupportedRenderers * notificationPreferenceToggleButton; 
@property (assign,nonatomic) char hasSaveButton; 
@property (nonatomic,retain) YTIPlaylistSaveButtonSupportedRenderers * saveButton; 
@property (assign,nonatomic) char hasShareButton; 
@property (nonatomic,retain) YTIPlaylistHeaderShareButtonSupportedRenderers * shareButton; 
@property (assign,nonatomic) char hasNotificationsArray; 
@property (nonatomic,retain) PBMutableArray * notificationsArray; 
+(id)playlistHeaderRendererWithOfflinePlaylist:(id)arg1 firstVideoID:(id)arg2 index:(unsigned)arg3 ;
+(id)playlistHeaderRendererWithOfflinePlaylist:(id)arg1 firstVideoID:(id)arg2 ;
+(id)playlistHeaderRendererWithPlaylist:(id)arg1 firstVideoID:(id)arg2 ;
+(id)descriptor;
-(id)headerRendererTitle;
@end

