/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:49:35 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/FFD4619E-59E7-49B9-AD90-0E28F5807C56/YouTube.app/YouTube
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@class NSOperationQueue, NSString, GTMHTTPFetcherService, NSMutableDictionary, NSDictionary, NSURL, NSArray;

@interface GTLService : NSObject {

	NSOperationQueue* parseQueue_;
	NSString* userAgent_;
	GTMHTTPFetcherService* fetcherService_;
	NSString* userAgentAddition_;
	NSMutableDictionary* serviceProperties_;
	NSDictionary* surrogates_;
	SEL uploadProgressSelector_;
	/*^block*/id retryBlock_;
	/*^block*/id uploadProgressBlock_;
	/*^block*/id testBlock_;
	unsigned uploadChunkSize_;
	char isRetryEnabled_;
	SEL retrySelector_;
	double maxRetryInterval_;
	char shouldFetchNextPages_;
	char allowInsecureQueries_;
	NSString* apiKey_;
	char isRESTDataWrapperRequired_;
	NSString* apiVersion_;
	NSURL* rpcURL_;
	NSURL* rpcUploadURL_;
	NSDictionary* urlQueryParameters_;
	NSDictionary* additionalHTTPHeaders_;

}

@property (assign,nonatomic) char shouldFetchNextPages; 
@property (assign,getter=isRetryEnabled,nonatomic) char retryEnabled; 
@property (nonatomic,copy) NSString * APIKey; 
@property (nonatomic,retain) id<GTMFetcherAuthorizationProtocol> authorizer; 
@property (assign,nonatomic) SEL retrySelector; 
@property (copy) id retryBlock; 
@property (assign,nonatomic) double maxRetryInterval; 
@property (nonatomic,copy) id testBlock; 
@property (nonatomic,copy) NSDictionary * serviceProperties; 
@property (nonatomic,retain) id serviceUserData; 
@property (nonatomic,retain) NSDictionary * surrogates; 
@property (assign,nonatomic) char shouldFetchInBackground; 
@property (nonatomic,retain) NSOperationQueue * delegateQueue; 
@property (nonatomic,retain) NSArray * runLoopModes; 
@property (assign,nonatomic) char allowInsecureQueries; 
@property (nonatomic,copy) NSString * userAgentAddition; 
@property (nonatomic,copy) NSString * userAgent; 
@property (nonatomic,readonly) NSString * requestUserAgent; 
@property (nonatomic,retain) NSOperationQueue * parseQueue; 
@property (nonatomic,retain) GTMHTTPFetcherService * fetcherService; 
@property (assign,nonatomic) int cookieStorageMethod; 
@property (assign,nonatomic) char isRESTDataWrapperRequired; 
@property (copy) NSDictionary * urlQueryParameters; 
@property (copy) NSDictionary * additionalHTTPHeaders; 
@property (nonatomic,copy) NSString * apiVersion; 
@property (nonatomic,retain) NSURL * rpcURL; 
@property (nonatomic,retain) NSURL * rpcUploadURL; 
@property (assign,nonatomic) unsigned serviceUploadChunkSize; 
@property (assign,nonatomic) SEL uploadProgressSelector; 
@property (copy) id uploadProgressBlock; 
+(unsigned)defaultServiceUploadChunkSize;
+(Class)ticketClass;
+(void)invokeCallback:(SEL)arg1 target:(id)arg2 ticket:(id)arg3 object:(id)arg4 error:(id)arg5 ;
+(id)mockServiceWithFakedObject:(id)arg1 fakedError:(id)arg2 ;
-(GTMHTTPFetcherService *)fetcherService;
-(void)setRetryEnabled:(char)arg1 ;
-(void)setFetcherService:(GTMHTTPFetcherService *)arg1 ;
-(void)setAuthorizer:(id<GTMFetcherAuthorizationProtocol>)arg1 ;
-(void)setShouldFetchInBackground:(char)arg1 ;
-(void)setUrlQueryParameters:(NSDictionary *)arg1 ;
-(id)executeQuery:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)setAdditionalHTTPHeaders:(NSDictionary *)arg1 ;
-(id)fetchObjectWithURL:(id)arg1 objectClass:(Class)arg2 bodyObject:(id)arg3 dataToPost:(id)arg4 ETag:(id)arg5 httpMethod:(id)arg6 mayAuthorize:(char)arg7 isREST:(char)arg8 delegate:(id)arg9 didFinishSelector:(SEL)arg10 completionHandler:(/*^block*/id)arg11 executingQuery:(id)arg12 ticket:(id)arg13 ;
-(id<GTMFetcherAuthorizationProtocol>)authorizer;
-(void)setShouldFetchNextPages:(char)arg1 ;
-(void)setRpcURL:(NSURL *)arg1 ;
-(void)setRpcUploadURL:(NSURL *)arg1 ;
-(char)isRetryEnabled;
-(double)maxRetryInterval;
-(void)setMaxRetryInterval:(double)arg1 ;
-(int)cookieStorageMethod;
-(void)setCookieStorageMethod:(int)arg1 ;
-(void)setRetrySelector:(SEL)arg1 ;
-(void)setRetryBlock:(id)arg1 ;
-(void)setUserAgentAddition:(NSString *)arg1 ;
-(NSDictionary *)additionalHTTPHeaders;
-(id)testBlock;
-(void)setTestBlock:(id)arg1 ;
-(NSDictionary *)urlQueryParameters;
-(NSDictionary *)surrogates;
-(void)setSurrogates:(NSDictionary *)arg1 ;
-(void)setServiceUploadChunkSize:(unsigned)arg1 ;
-(NSString *)userAgentAddition;
-(NSString *)requestUserAgent;
-(id)requestForURL:(id)arg1 ETag:(id)arg2 httpMethod:(id)arg3 ticket:(id)arg4 ;
-(NSString *)APIKey;
-(id)objectRequestForURL:(id)arg1 object:(id)arg2 ETag:(id)arg3 httpMethod:(id)arg4 isREST:(char)arg5 additionalHeaders:(id)arg6 ticket:(id)arg7 ;
-(SEL)uploadProgressSelector;
-(SEL)retrySelector;
-(void)simulateFetchWithTicket:(id)arg1 testBlock:(/*^block*/id)arg2 dataToPost:(id)arg3 delegate:(id)arg4 didFinishSelector:(SEL)arg5 completionHandler:(/*^block*/id)arg6 ;
-(id)uploadFetcherWithRequest:(id)arg1 fetcherService:(id)arg2 params:(id)arg3 ;
-(char)allowInsecureQueries;
-(id)retryBlock;
-(char)objectFetcher:(id)arg1 willRetry:(char)arg2 forError:(id)arg3 ;
-(void)objectFetcher:(id)arg1 finishedWithData:(id)arg2 error:(id)arg3 ;
-(unsigned)serviceUploadChunkSize;
-(id)rpcPayloadForMethodNamed:(id)arg1 parameters:(id)arg2 bodyObject:(id)arg3 requestID:(id)arg4 ;
-(NSURL *)rpcUploadURL;
-(NSURL *)rpcURL;
-(void)invokeProgressCallbackForTicket:(id)arg1 deliveredBytes:(unsigned long long)arg2 totalBytes:(unsigned long long)arg3 ;
-(void)prepareToParseObjectForFetcher:(id)arg1 ;
-(void)handleParsedObjectForFetcher:(id)arg1 ;
-(void)parseObjectFromDataOfFetcher:(id)arg1 ;
-(char)shouldFetchNextPages;
-(id)mergedNewResultObject:(id)arg1 oldResultObject:(id)arg2 forQuery:(id)arg3 ;
-(id)nextPageQueryForQuery:(id)arg1 result:(id)arg2 ticket:(id)arg3 ;
-(char)fetchNextPageWithQuery:(id)arg1 delegate:(id)arg2 didFinishedSelector:(SEL)arg3 completionHandler:(/*^block*/id)arg4 ticket:(id)arg5 ;
-(void)invokeBatchCompletionsWithTicket:(id)arg1 batchQuery:(id)arg2 batchResult:(id)arg3 error:(id)arg4 ;
-(char)invokeRetrySelector:(SEL)arg1 delegate:(id)arg2 ticket:(id)arg3 willRetry:(char)arg4 error:(id)arg5 ;
-(unsigned long long)simulatedUploadLengthForQuery:(id)arg1 dataToPost:(id)arg2 ;
-(id)executeBatchQuery:(id)arg1 delegate:(id)arg2 didFinishSelector:(SEL)arg3 completionHandler:(/*^block*/id)arg4 ticket:(id)arg5 ;
-(id)fetchObjectWithMethodNamed:(id)arg1 objectClass:(Class)arg2 parameters:(id)arg3 bodyObject:(id)arg4 requestID:(id)arg5 urlQueryParameters:(id)arg6 delegate:(id)arg7 didFinishSelector:(SEL)arg8 completionHandler:(/*^block*/id)arg9 executingQuery:(id)arg10 ticket:(id)arg11 ;
-(id)fetchObjectWithURL:(id)arg1 objectClass:(Class)arg2 bodyObject:(id)arg3 ETag:(id)arg4 httpMethod:(id)arg5 mayAuthorize:(char)arg6 delegate:(id)arg7 didFinishSelector:(SEL)arg8 completionHandler:(/*^block*/id)arg9 ticket:(id)arg10 ;
-(void)setExactUserAgent:(id)arg1 ;
-(char)shouldFetchInBackground;
-(void)setServiceProperty:(id)arg1 forKey:(id)arg2 ;
-(id)servicePropertyForKey:(id)arg1 ;
-(id)requestForURL:(id)arg1 ETag:(id)arg2 httpMethod:(id)arg3 ;
-(void)objectFetcher:(id)arg1 didSendBytes:(int)arg2 totalBytesSent:(int)arg3 totalBytesExpectedToSend:(int)arg4 ;
-(id)executeQuery:(id)arg1 delegate:(id)arg2 didFinishSelector:(SEL)arg3 ;
-(id)fetchObjectWithMethodNamed:(id)arg1 parameters:(id)arg2 objectClass:(Class)arg3 delegate:(id)arg4 didFinishSelector:(SEL)arg5 ;
-(id)fetchObjectWithMethodNamed:(id)arg1 insertingObject:(id)arg2 objectClass:(Class)arg3 delegate:(id)arg4 didFinishSelector:(SEL)arg5 ;
-(id)fetchObjectWithMethodNamed:(id)arg1 parameters:(id)arg2 insertingObject:(id)arg3 objectClass:(Class)arg4 delegate:(id)arg5 didFinishSelector:(SEL)arg6 ;
-(id)fetchObjectWithMethodNamed:(id)arg1 parameters:(id)arg2 objectClass:(Class)arg3 completionHandler:(/*^block*/id)arg4 ;
-(id)fetchObjectWithMethodNamed:(id)arg1 insertingObject:(id)arg2 objectClass:(Class)arg3 completionHandler:(/*^block*/id)arg4 ;
-(id)fetchObjectWithMethodNamed:(id)arg1 parameters:(id)arg2 insertingObject:(id)arg3 objectClass:(Class)arg4 completionHandler:(/*^block*/id)arg5 ;
-(id)fetchObjectWithURL:(id)arg1 delegate:(id)arg2 didFinishSelector:(SEL)arg3 ;
-(id)fetchPublicObjectWithURL:(id)arg1 objectClass:(Class)arg2 delegate:(id)arg3 didFinishSelector:(SEL)arg4 ;
-(id)fetchObjectWithURL:(id)arg1 objectClass:(Class)arg2 delegate:(id)arg3 didFinishSelector:(SEL)arg4 ;
-(id)fetchObjectByInsertingObject:(id)arg1 forURL:(id)arg2 delegate:(id)arg3 didFinishSelector:(SEL)arg4 ;
-(id)fetchObjectByUpdatingObject:(id)arg1 forURL:(id)arg2 delegate:(id)arg3 didFinishSelector:(SEL)arg4 ;
-(id)deleteResourceURL:(id)arg1 ETag:(id)arg2 delegate:(id)arg3 didFinishSelector:(SEL)arg4 ;
-(id)fetchObjectWithURL:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(id)fetchObjectByInsertingObject:(id)arg1 forURL:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(id)fetchObjectByUpdatingObject:(id)arg1 forURL:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(id)deleteResourceURL:(id)arg1 ETag:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)setServiceUserData:(id)arg1 ;
-(id)serviceUserData;
-(void)setUploadProgressSelector:(SEL)arg1 ;
-(void)setAPIKey:(NSString *)arg1 ;
-(char)isRESTDataWrapperRequired;
-(void)setIsRESTDataWrapperRequired:(char)arg1 ;
-(void)setAllowInsecureQueries:(char)arg1 ;
-(char)waitForTicket:(id)arg1 timeout:(double)arg2 fetchedObject:(id*)arg3 error:(id*)arg4 ;
-(NSOperationQueue *)delegateQueue;
-(NSArray *)runLoopModes;
-(void)setRunLoopModes:(NSArray *)arg1 ;
-(void)dealloc;
-(id)init;
-(void)setDelegateQueue:(NSOperationQueue *)arg1 ;
-(id)uploadProgressBlock;
-(void)setUploadProgressBlock:(id)arg1 ;
-(NSOperationQueue *)parseQueue;
-(void)setParseQueue:(NSOperationQueue *)arg1 ;
-(NSString *)userAgent;
-(void)setUserAgent:(NSString *)arg1 ;
-(NSDictionary *)serviceProperties;
-(void)setServiceProperties:(NSDictionary *)arg1 ;
-(NSString *)apiVersion;
-(void)setApiVersion:(NSString *)arg1 ;
@end

