/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:49:36 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/FFD4619E-59E7-49B9-AD90-0E28F5807C56/YouTube.app/YouTube
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol OS_dispatch_queue, MLBackgroundDownloadFetcherDelegate, MLDownloadSchedulerDelegate;
@class GTMSessionFetcherService, NSObject, MLStreamStore, MLLocalSegment, MLRemoteSegment, NSDictionary, GTMSessionFetcher;

@interface MLBackgroundDownloadFetcher : NSObject {

	GTMSessionFetcherService* _fetcherService;
	NSObject*<OS_dispatch_queue> _callbackQueue;
	MLStreamStore* _streamStore;
	MLLocalSegment* _localSegment;
	MLRemoteSegment* _remoteSegment;
	NSDictionary* _userInfo;
	char _didFetch;
	char _didResumeFetch;
	char _didWriteSegment;
	id<MLBackgroundDownloadFetcherDelegate> _delegate;
	id<MLDownloadSchedulerDelegate> _schedulerDelegate;
	GTMSessionFetcher* _sessionFetcher;

}

@property (nonatomic,readonly) MLLocalSegment * localSegment;                                       //@synthesize localSegment=_localSegment - In the implementation block
@property (nonatomic,readonly) MLRemoteSegment * remoteSegment;                                     //@synthesize remoteSegment=_remoteSegment - In the implementation block
@property (nonatomic,readonly) NSDictionary * userInfo;                                             //@synthesize userInfo=_userInfo - In the implementation block
@property (assign,nonatomic,__weak) id<MLBackgroundDownloadFetcherDelegate> delegate;               //@synthesize delegate=_delegate - In the implementation block
@property (assign,nonatomic,__weak) id<MLDownloadSchedulerDelegate> schedulerDelegate;              //@synthesize schedulerDelegate=_schedulerDelegate - In the implementation block
@property (nonatomic,readonly) GTMSessionFetcher * sessionFetcher;                                  //@synthesize sessionFetcher=_sessionFetcher - In the implementation block
+(id)backgroundDownloadFetcherWithFetcherService:(id)arg1 streamStore:(id)arg2 localSegment:(id)arg3 remoteSegment:(id)arg4 userInfo:(id)arg5 callbackQueue:(id)arg6 ;
-(MLRemoteSegment *)remoteSegment;
-(id)initWithFetcherService:(id)arg1 streamStore:(id)arg2 localSegment:(id)arg3 remoteSegment:(id)arg4 userInfo:(id)arg5 callbackQueue:(id)arg6 ;
-(void)failWithErrorCode:(int)arg1 underlyingError:(id)arg2 ;
-(void)writeSegment;
-(void)beginFetch;
-(void)resumeFetchWithSessionIdentifier:(id)arg1 ;
-(void)cancelFetch;
-(MLLocalSegment *)localSegment;
-(id<MLDownloadSchedulerDelegate>)schedulerDelegate;
-(void)setSchedulerDelegate:(id<MLDownloadSchedulerDelegate>)arg1 ;
-(GTMSessionFetcher *)sessionFetcher;
-(void)setDelegate:(id<MLBackgroundDownloadFetcherDelegate>)arg1 ;
-(void)dealloc;
-(id<MLBackgroundDownloadFetcherDelegate>)delegate;
-(/*^block*/id)completionHandler;
-(NSDictionary *)userInfo;
-(void)failWithErrorCode:(int)arg1 ;
@end

