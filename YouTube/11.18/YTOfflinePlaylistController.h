/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:49:26 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/FFD4619E-59E7-49B9-AD90-0E28F5807C56/YouTube.app/YouTube
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <YouTube/YTOfflineImageControllerObserver.h>
#import <YouTube/YTOfflineVideoControllerObserver.h>

@protocol YTOfflineConfig;
@class YTOfflineDataService, YTOfflinePlaylistSyncCheckService, YTOfflinePlaylistStore, YTOfflineVideoController, YTOfflineImageController, NSHashTable, NSString;

@interface YTOfflinePlaylistController : NSObject <YTOfflineImageControllerObserver, YTOfflineVideoControllerObserver> {

	YTOfflineDataService* _offlineDataService;
	YTOfflinePlaylistSyncCheckService* _offlinePlaylistSyncService;
	id<YTOfflineConfig> _offlineConfig;
	YTOfflinePlaylistStore* _offlinePlaylistStore;
	YTOfflineVideoController* _offlineVideoController;
	YTOfflineImageController* _offlineImageController;
	NSHashTable* _observers;

}

@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(int)statusWithVideos:(id)arg1 completedVideoCount:(unsigned*)arg2 ;
-(void)downloadDidStartWithVideoID:(id)arg1 ;
-(void)downloadDidCancelWithVideoID:(id)arg1 ;
-(void)downloadDidCompleteWithVideoID:(id)arg1 pinTypes:(int)arg2 ;
-(void)downloadDidFailWithVideoID:(id)arg1 error:(id)arg2 ;
-(void)downloadDidPauseWithVideoID:(id)arg1 ;
-(void)fetchPlaylistWithID:(id)arg1 responseBlock:(/*^block*/id)arg2 errorBlock:(/*^block*/id)arg3 ;
-(void)didSaveOfflineVideoWithID:(id)arg1 pinTypes:(int)arg2 ;
-(void)didFailToSaveOfflineVideoWithID:(id)arg1 ;
-(void)didDeleteOfflineVideoWithID:(id)arg1 pinTypes:(int)arg2 ;
-(void)didSaveThumbnailWithVideoID:(id)arg1 ;
-(void)didFailToSaveOfflinePlaylistWithID:(id)arg1 ;
-(void)fetchPlaylistStatusWithID:(id)arg1 clickTrackingParams:(id)arg2 responseBlock:(/*^block*/id)arg3 errorBlock:(/*^block*/id)arg4 ;
-(void)savePlaylistWithID:(id)arg1 maximumDownloadQuality:(int)arg2 clickTrackingParams:(id)arg3 responseBlock:(/*^block*/id)arg4 errorBlock:(/*^block*/id)arg5 ;
-(void)enableMediaStreamSyncByPlaylistID:(id)arg1 responseBlock:(/*^block*/id)arg2 errorBlock:(/*^block*/id)arg3 ;
-(void)fetchPlaylistsWithOffset:(unsigned)arg1 fetchLimit:(unsigned)arg2 onlyComplete:(char)arg3 responseBlock:(/*^block*/id)arg4 errorBlock:(/*^block*/id)arg5 ;
-(void)deletePlaylistWithID:(id)arg1 responseBlock:(/*^block*/id)arg2 errorBlock:(/*^block*/id)arg3 ;
-(void)fetchVideosWithPlaylistID:(id)arg1 responseBlock:(/*^block*/id)arg2 errorBlock:(/*^block*/id)arg3 ;
-(void)fetchHasOfflinePlaylistsOnDeviceWithResponseBlock:(/*^block*/id)arg1 errorBlock:(/*^block*/id)arg2 ;
-(void)deleteAllWithResponseBlock:(/*^block*/id)arg1 errorBlock:(/*^block*/id)arg2 ;
-(void)setCurrentUserID:(id)arg1 ;
-(id)initWithOfflineDataService:(id)arg1 offlinePlaylistSyncService:(id)arg2 offlineConfig:(id)arg3 offlinePlaylistStore:(id)arg4 offlineVideoController:(id)arg5 offlineImageController:(id)arg6 ;
-(void)deletePlaylistsForUserID:(id)arg1 responseBlock:(/*^block*/id)arg2 errorBlock:(/*^block*/id)arg3 ;
-(void)didSaveOfflineImageWithFilename:(id)arg1 videoIDs:(id)arg2 playlistIDs:(id)arg3 videoListIDs:(id)arg4 ;
-(void)saveInnerTubePlaylistFromResponse:(id)arg1 maximumDownloadQuality:(int)arg2 clickTrackingParams:(id)arg3 responseBlock:(/*^block*/id)arg4 errorBlock:(/*^block*/id)arg5 ;
-(void)mergePlaylistWithID:(id)arg1 currentPlaylist:(id)arg2 maximumDownloadQuality:(int)arg3 clickTrackingParams:(id)arg4 playlistDataMergeBlock:(/*^block*/id)arg5 responseBlock:(/*^block*/id)arg6 errorBlock:(/*^block*/id)arg7 ;
-(void)syncInnerTubePlaylistsFromResponse:(id)arg1 playlistsToSync:(id)arg2 playlistsAllowingMediaDownload:(id)arg3 maximumDownloadQuality:(int)arg4 responseBlock:(/*^block*/id)arg5 errorBlock:(/*^block*/id)arg6 ;
-(void)syncPlaylistsWithPlaylistArray:(id)arg1 playlistsAllowingMediaDownload:(id)arg2 maximumDownloadQuality:(int)arg3 responseBlock:(/*^block*/id)arg4 errorBlock:(/*^block*/id)arg5 ;
-(void)compareOnlineOfflinePlaylistsWithID:(id)arg1 clickTrackingParams:(id)arg2 responseBlock:(/*^block*/id)arg3 errorBlock:(/*^block*/id)arg4 ;
-(void)notifyPlaylistDidDeleteWithPlaylistID:(id)arg1 ;
-(void)notifyDidDeleteOfflinePlaylistsForUserID:(id)arg1 ;
-(void)notifyDidDeleteAllOfflinePlaylists;
-(void)notifyPlaylistWhenVideoDidChange:(id)arg1 ;
-(void)notifyDidAddVideoToPlaylistID:(id)arg1 ;
-(void)notifyDidDeleteVideoToPlaylistID:(id)arg1 ;
-(void)notifyThumbnailDidSaveWithPlaylistID:(id)arg1 ;
-(void)notifyWillRequestOfflineWithPlaylistID:(id)arg1 ;
-(void)notifyDidSaveMetadataWithPlaylistID:(id)arg1 ;
-(void)notifyDidStartWithPlaylistID:(id)arg1 ;
-(void)saveVideoListWithOfflineResponse:(id)arg1 allowMediaStreamDownloads:(id)arg2 maximumDownloadQuality:(int)arg3 clickTrackingParams:(id)arg4 responseBlock:(/*^block*/id)arg5 errorBlock:(/*^block*/id)arg6 ;
-(void)notifyDidFailToSaveOfflinePlaylistWithID:(id)arg1 ;
-(void)notifyPlaylistWithPlaylistID:(id)arg1 playlistStatus:(int)arg2 completedVideoCount:(unsigned)arg3 totalVideoCount:(unsigned)arg4 ;
-(void)notifyDidPauseWithPlaylistID:(id)arg1 ;
-(void)notifyVideosDidProgressWithPlaylistID:(id)arg1 completedVideos:(unsigned)arg2 totalVideos:(unsigned)arg3 ;
-(void)notifyVideosDidCompleteWithPlaylistID:(id)arg1 ;
-(id)mergePlaylistOfflineResponse:(id)arg1 currentPlaylist:(id)arg2 playlistDataMergeBlock:(/*^block*/id)arg3 ;
-(void)mergePlaylistWithID:(id)arg1 maximumDownloadQuality:(int)arg2 clickTrackingParams:(id)arg3 playlistDataMergeBlock:(/*^block*/id)arg4 responseBlock:(/*^block*/id)arg5 errorBlock:(/*^block*/id)arg6 ;
-(void)getAllUserIDsWithResponseBlock:(/*^block*/id)arg1 errorBlock:(/*^block*/id)arg2 ;
-(void)updateDateLastSync:(id)arg1 playlistID:(id)arg2 responseBlock:(/*^block*/id)arg3 errorBlock:(/*^block*/id)arg4 ;
-(void)fetchPlaylistCountWithResponseBlock:(/*^block*/id)arg1 errorBlock:(/*^block*/id)arg2 ;
-(void)fetchVideoIDsWithPlaylistID:(id)arg1 responseBlock:(/*^block*/id)arg2 errorBlock:(/*^block*/id)arg3 ;
-(void)fetchOfflinePlaylistNeedingInnerTubeMigrationWithResponseBlock:(/*^block*/id)arg1 errorBlock:(/*^block*/id)arg2 ;
-(void)migrateOfflinePlaylistDataForPlaylistId:(id)arg1 responseBlock:(/*^block*/id)arg2 errorBlock:(/*^block*/id)arg3 ;
-(void)searchPlaylistsWithString:(id)arg1 searchTypes:(int)arg2 responseBlock:(/*^block*/id)arg3 errorBlock:(/*^block*/id)arg4 ;
-(void)syncPlaylistMetadataByPlaylistID:(id)arg1 responseBlock:(/*^block*/id)arg2 errorBlock:(/*^block*/id)arg3 ;
-(void)addObserver:(id)arg1 ;
-(void)removeObserver:(id)arg1 ;
@end

