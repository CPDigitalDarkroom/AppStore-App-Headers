/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:50:06 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/FFD4619E-59E7-49B9-AD90-0E28F5807C56/YouTube.app/YouTube
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <YouTube/YouTube-Structs.h>
#import <YouTube/EXOTrackRenderer.h>
#import <YouTube/EXORenderLoopFrameSource.h>

@protocol EXOPixelBufferSource, EXORenderLoop;
@class EXOMediaTime, NSError, EXOFrameQueue, EXOFrame, EXOFormat, NSString;

@interface EXOPixelBufferVideoTrackRenderer : EXOTrackRenderer <EXORenderLoopFrameSource> {

	id<EXOPixelBufferSource> _source;
	id<EXORenderLoop> _renderLoop;
	EXOMediaTime* _lastRenderedExternalMediaTime;
	char _renderLoopReady;
	NSError* _renderLoopError;
	char _sourceAtEOF;
	EXOFrameQueue* _frameQueue;
	unsigned _frameQueueCount;
	unsigned _droppedFrameCount;
	EXOFrame* _currentFrame;
	EXOFormat* _currentFormat;
	EXOMediaTime* _mediaTime;
	unsigned _maximumFrameQueueSize;
	unsigned _minimumFrameQueueSize;
	EXOMediaTime* _externalMediaTime;

}

@property (assign,nonatomic) unsigned maximumFrameQueueSize;              //@synthesize maximumFrameQueueSize=_maximumFrameQueueSize - In the implementation block
@property (assign,nonatomic) unsigned minimumFrameQueueSize;              //@synthesize minimumFrameQueueSize=_minimumFrameQueueSize - In the implementation block
@property (retain) EXOMediaTime * externalMediaTime;                      //@synthesize externalMediaTime=_externalMediaTime - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id)mediaTime;
-(void)claimRenderLoop;
-(SCD_Struct_YT44)bufferedTime;
-(id)initWithContext:(id)arg1 pixelBufferSource:(id)arg2 renderLoop:(id)arg3 ;
-(void)setMinimumFrameQueueSize:(unsigned)arg1 ;
-(void)setMaximumFrameQueueSize:(unsigned)arg1 ;
-(char)internalDisableAndReturnError:(id*)arg1 ;
-(int)internalPrepareAndReturnError:(id*)arg1 ;
-(char)internalEnableAndReturnError:(id*)arg1 ;
-(char)internalStartAndReturnError:(id*)arg1 ;
-(char)internalStopAndReturnError:(id*)arg1 ;
-(void)internalTerminate;
-(void)internalSeekToTime:(SCD_Struct_YT44)arg1 ;
-(char)internalDoWorkAtMediaTime:(id)arg1 error:(id*)arg2 ;
-(void)renderLoopFailedWithError:(id)arg1 ;
-(void)renderLoopStarted;
-(id)frameForDisplayTime:(double)arg1 displayDuration:(double)arg2 pixelBufferAttributesChanged:(char*)arg3 ;
-(void)setExternalMediaTime:(EXOMediaTime *)arg1 ;
-(double)displayMediaTimeForMediaTime:(id)arg1 absoluteTime:(double)arg2 ;
-(EXOMediaTime *)externalMediaTime;
-(unsigned)maximumFrameQueueSize;
-(unsigned)minimumFrameQueueSize;
-(char)isReady;
-(id)format;
-(id)init;
-(SCD_Struct_YT44)duration;
@end

