/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:49:22 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/FFD4619E-59E7-49B9-AD90-0E28F5807C56/YouTube.app/YouTube
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol OS_dispatch_queue, VCSessionDelegate;
#import <YouTube/YouTube-Structs.h>
@class VCPreviewView, NSObject, UIView;

@interface VCSimpleSession : NSObject {

	VCPreviewView* _previewView;
	shared_ptr<videocore::simpleApi::PixelBufferOutput>* m_pbOutput;
	shared_ptr<videocore::iOS::MicSource>* m_micSource;
	shared_ptr<videocore::iOS::CameraSource>* m_cameraSource;
	shared_ptr<videocore::Apple::PixelBufferSource>* m_pixelBufferSource;
	shared_ptr<videocore::AspectTransform>* m_pbAspect;
	shared_ptr<videocore::PositionTransform>* m_pbPosition;
	shared_ptr<videocore::Split>* m_videoSplit;
	shared_ptr<videocore::AspectTransform>* m_aspectTransform;
	int m_aspectMode;
	shared_ptr<videocore::PositionTransform>* m_positionTransform;
	shared_ptr<videocore::IAudioMixer>* m_audioMixer;
	shared_ptr<videocore::IVideoMixer>* m_videoMixer;
	shared_ptr<videocore::ITransform>* m_h264Encoder;
	shared_ptr<videocore::ITransform>* m_aacEncoder;
	shared_ptr<videocore::ITransform>* m_h264Packetizer;
	shared_ptr<videocore::ITransform>* m_aacPacketizer;
	shared_ptr<videocore::Split>* m_aacSplit;
	shared_ptr<videocore::Split>* m_h264Split;
	shared_ptr<videocore::Apple::MP4Multiplexer>* m_muxer;
	shared_ptr<videocore::IOutputSession>* m_outputSession;
	NSObject*<OS_dispatch_queue> _graphManagementQueue;
	CGSize _videoSize;
	int _bitrate;
	int _fps;
	int _bpsCeiling;
	int _estimatedThroughput;
	char _useInterfaceOrientation;
	float _videoZoomFactor;
	int _audioChannelCount;
	float _audioSampleRate;
	float _micGain;
	int _cameraState;
	int _aspectMode;
	int _rtmpSessionState;
	char _orientationLocked;
	char _torch;
	char _useAdaptiveBitrate;
	char _continuousAutofocus;
	char _continuousExposure;
	CGPoint _focusPOI;
	CGPoint _exposurePOI;
	int _filter;
	id<VCSessionDelegate> _delegate;

}

@property (assign,nonatomic) int rtmpSessionState; 
@property (nonatomic,readonly) UIView * previewView; 
@property (assign,nonatomic) CGSize videoSize; 
@property (assign,nonatomic) int bitrate; 
@property (assign,nonatomic) int fps; 
@property (nonatomic,readonly) char useInterfaceOrientation; 
@property (assign,nonatomic) int cameraState; 
@property (assign,nonatomic) char orientationLocked; 
@property (assign,nonatomic) char torch; 
@property (assign,nonatomic) float videoZoomFactor; 
@property (assign,nonatomic) int audioChannelCount; 
@property (assign,nonatomic) float audioSampleRate; 
@property (assign,nonatomic) float micGain; 
@property (assign,nonatomic) CGPoint focusPointOfInterest; 
@property (assign,nonatomic) CGPoint exposurePointOfInterest; 
@property (assign,nonatomic) char continuousAutofocus; 
@property (assign,nonatomic) char continuousExposure; 
@property (assign,nonatomic) char useAdaptiveBitrate; 
@property (nonatomic,readonly) int estimatedThroughput; 
@property (assign,nonatomic) int aspectMode; 
@property (assign,nonatomic) int filter;                                   //@synthesize filter=_filter - In the implementation block
@property (assign,nonatomic) id<VCSessionDelegate> delegate;               //@synthesize delegate=_delegate - In the implementation block
-(void)initInternalWithVideoSize:(CGSize)arg1 frameRate:(int)arg2 bitrate:(int)arg3 useInterfaceOrientation:(char)arg4 cameraState:(int)arg5 aspectMode:(int)arg6 ;
-(void)setFps:(int)arg1 ;
-(void)setMicGain:(float)arg1 ;
-(void)setUseAdaptiveBitrate:(char)arg1 ;
-(void)setAspectMode:(int)arg1 ;
-(void)setupGraph;
-(void)endRtmpSession;
-(void)startSessionInternal:(id)arg1 streamKey:(id)arg2 ;
-(char)useAdaptiveBitrate;
-(int)fps;
-(void)setRtmpSessionState:(int)arg1 ;
-(char)orientationLocked;
-(char)useInterfaceOrientation;
-(char)torch;
-(void)setTorch:(char)arg1 ;
-(int)rtmpSessionState;
-(float)micGain;
-(void)setContinuousAutofocus:(char)arg1 ;
-(char)continuousAutofocus;
-(void)setContinuousExposure:(char)arg1 ;
-(int)estimatedThroughput;
-(id)initWithVideoSize:(CGSize)arg1 frameRate:(int)arg2 bitrate:(int)arg3 ;
-(id)initWithVideoSize:(CGSize)arg1 frameRate:(int)arg2 bitrate:(int)arg3 useInterfaceOrientation:(char)arg4 ;
-(id)initWithVideoSize:(CGSize)arg1 frameRate:(int)arg2 bitrate:(int)arg3 useInterfaceOrientation:(char)arg4 cameraState:(int)arg5 ;
-(id)initWithVideoSize:(CGSize)arg1 frameRate:(int)arg2 bitrate:(int)arg3 useInterfaceOrientation:(char)arg4 cameraState:(int)arg5 aspectMode:(int)arg6 ;
-(void)startRtmpSessionWithURL:(id)arg1 andStreamKey:(id)arg2 ;
-(void)getCameraPreviewLayer:(id*)arg1 ;
-(void)addEncodersAndPacketizers;
-(void)addPixelBufferSource:(id)arg1 withRect:(CGRect)arg2 ;
-(id)applicationDocumentsDirectory;
-(void)setAudioSampleRate:(float)arg1 ;
-(float)audioSampleRate;
-(void)setAudioChannelCount:(int)arg1 ;
-(int)audioChannelCount;
-(CGSize)videoSize;
-(void)setVideoSize:(CGSize)arg1 ;
-(int)filter;
-(void)setDelegate:(id<VCSessionDelegate>)arg1 ;
-(void)dealloc;
-(id<VCSessionDelegate>)delegate;
-(void)setFilter:(int)arg1 ;
-(void)setOrientationLocked:(char)arg1 ;
-(CGPoint)focusPointOfInterest;
-(CGPoint)exposurePointOfInterest;
-(UIView *)previewView;
-(float)videoZoomFactor;
-(void)setExposurePointOfInterest:(CGPoint)arg1 ;
-(void)setFocusPointOfInterest:(CGPoint)arg1 ;
-(void)setVideoZoomFactor:(float)arg1 ;
-(int)cameraState;
-(void)setCameraState:(int)arg1 ;
-(void)setBitrate:(int)arg1 ;
-(int)bitrate;
@end

