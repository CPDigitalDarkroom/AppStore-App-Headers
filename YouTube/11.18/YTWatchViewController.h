/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:49:12 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/FFD4619E-59E7-49B9-AD90-0E28F5807C56/YouTube.app/YouTube
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <YouTube/YouTube-Structs.h>
#import <YouTube/YTMultiSizeViewController.h>
#import <YouTube/MDXDiscoveryInterruptDelegate.h>
#import <YouTube/YTFullscreenVideoViewControllerPresenter.h>
#import <YouTube/YTGraftingViewController.h>
#import <YouTube/YTInfoCardInceptionResponderProvider.h>
#import <YouTube/YTSystemNotificationsObserver.h>
#import <YouTube/YTVideoFullscreenDirectionResponderProvider.h>
#import <YouTube/YTActiveVideoProvider.h>
#import <YouTube/YTActiveVideoReportingRendererProvider.h>
#import <YouTube/YTOfflineabilityResponderProvider.h>
#import <YouTube/YTPlaybackControllerAutoplayDelegate.h>
#import <YouTube/YTPlaybackControllerEventsDelegate.h>
#import <YouTube/YTPlaybackControllerUIDelegate.h>
#import <YouTube/YTPlaybackDebugDataProvider.h>
#import <YouTube/YTPlaylistPanelControllerPlaybackDelegate.h>
#import <YouTube/YTResponder.h>
#import <YouTube/YTWatchNextStateResponderProvider.h>

@protocol YTWatchNextResultsControllerProtocol, YTPlaylistPanelControllerUIDelegate, YTResponder, YTInfoCardContainerProtocol, YTServices, YTDataServices, YTOfflineServices, YTPlayerServices, YTShareServices, MDXServices, YTAutoplayControllerProtocol, YTAutonavControllerProtocol, YTShouldAutorotateResponderProvider;
@class YTINavigationEndpoint, UIViewController, YTPlaybackDebugData, YTPlayerResponse, YTOfflineVideoActionController, NSHashTable, NSString, YTVideoQualityPromoController, YTIVideoReportingSupportedRenderers, YTMealbarPromoController, YTIMenuRenderer, YTISurveyTriggerRenderer, YTFullscreenVideoViewController, YTWatchNextResultsViewController, YTWatchPreviousController, YTWatchView, GIMMe, YTInfoCardController, YTInnerTubeControllerFactory, YTPlayerViewController, YTSharingActionSheetController, YTIServiceEndpoint;

@interface YTWatchViewController : YTMultiSizeViewController <MDXDiscoveryInterruptDelegate, YTFullscreenVideoViewControllerPresenter, YTGraftingViewController, YTInfoCardInceptionResponderProvider, YTSystemNotificationsObserver, YTVideoFullscreenDirectionResponderProvider, YTActiveVideoProvider, YTActiveVideoReportingRendererProvider, YTOfflineabilityResponderProvider, YTPlaybackControllerAutoplayDelegate, YTPlaybackControllerEventsDelegate, YTPlaybackControllerUIDelegate, YTPlaybackDebugDataProvider, YTPlaylistPanelControllerPlaybackDelegate, YTResponder, YTWatchNextStateResponderProvider> {

	id<YTWatchNextResultsControllerProtocol> _watchNextResultsController;
	YTINavigationEndpoint* _navigationEndpoint;
	int _watchEndpointSource;
	int _watchViewLayout;
	UIViewController* _watchNextViewController;
	YTPlaybackDebugData* _savedPlaybackDebugData;
	YTPlayerResponse* _savedPlayerResponse;
	char _watchNextResponseLoaded;
	YTOfflineVideoActionController* _offlineVideoActionController;
	float _expansionCoefficient;
	NSHashTable* _offlineabilityObservers;
	NSString* _backButtonInteractionLoggingCSN;
	YTVideoQualityPromoController* _videoQualityPromoController;
	YTIVideoReportingSupportedRenderers* _videoReportingRenderers;
	YTMealbarPromoController* _mealbarPromoController;
	YTIMenuRenderer* _addToMenuRenderer;
	YTISurveyTriggerRenderer* _surveyRenderer;
	YTFullscreenVideoViewController* _fullscreenVideoVC;
	char _isKeyboardVisible;
	id<YTPlaylistPanelControllerUIDelegate> _playlistPanelControllerUIDelegate;
	YTWatchNextResultsViewController* _descriptionDetailsViewController;
	YTWatchPreviousController* _watchPreviousController;
	char _transitioningWatchViewLayout;
	id<YTResponder> _parentResponder;
	YTWatchView* _watchView;
	GIMMe* _gimme;
	id<YTInfoCardContainerProtocol> _watchNextInfoCardContainer;
	YTInfoCardController* _infoCardController;
	id<YTServices> _services;
	id<YTDataServices> _dataServices;
	id<YTOfflineServices> _offlineServices;
	id<YTPlayerServices> _playerServices;
	id<YTShareServices> _shareServices;
	id<MDXServices> _MDXServices;
	YTInnerTubeControllerFactory* _innerTubeControllerFactory;
	YTPlayerViewController* _playerViewController;
	unsigned _watchPlaylistEndpointRequestID;
	YTSharingActionSheetController* _sharingActionSheetController;
	id<YTAutoplayControllerProtocol> _autoplayController;
	id<YTAutonavControllerProtocol> _autonavController;
	YTINavigationEndpoint* _watchTransitionNavigationEndpoint;
	YTINavigationEndpoint* _shareEndpoint;
	YTIServiceEndpoint* _sharePrivateEndpoint;
	id<YTShouldAutorotateResponderProvider> _shouldAutorotateResponderProvider;

}

@property (assign,nonatomic,__weak) GIMMe * gimme;                                                                          //@synthesize gimme=_gimme - In the implementation block
@property (nonatomic,readonly) YTPlayerResponse * playerResponse; 
@property (nonatomic,readonly) YTWatchView * watchView;                                                                     //@synthesize watchView=_watchView - In the implementation block
@property (nonatomic,readonly) id<YTInfoCardContainerProtocol> watchNextInfoCardContainer;                                  //@synthesize watchNextInfoCardContainer=_watchNextInfoCardContainer - In the implementation block
@property (nonatomic,readonly) YTInfoCardController * infoCardController;                                                   //@synthesize infoCardController=_infoCardController - In the implementation block
@property (assign,getter=isTransitioningWatchViewLayout,nonatomic) char transitioningWatchViewLayout;                       //@synthesize transitioningWatchViewLayout=_transitioningWatchViewLayout - In the implementation block
@property (nonatomic,readonly) id<YTServices> services;                                                                     //@synthesize services=_services - In the implementation block
@property (nonatomic,readonly) id<YTDataServices> dataServices;                                                             //@synthesize dataServices=_dataServices - In the implementation block
@property (nonatomic,readonly) id<YTOfflineServices> offlineServices;                                                       //@synthesize offlineServices=_offlineServices - In the implementation block
@property (nonatomic,readonly) id<YTPlayerServices> playerServices;                                                         //@synthesize playerServices=_playerServices - In the implementation block
@property (nonatomic,readonly) id<YTShareServices> shareServices;                                                           //@synthesize shareServices=_shareServices - In the implementation block
@property (nonatomic,readonly) id<MDXServices> MDXServices;                                                                 //@synthesize MDXServices=_MDXServices - In the implementation block
@property (nonatomic,readonly) YTInnerTubeControllerFactory * innerTubeControllerFactory;                                   //@synthesize innerTubeControllerFactory=_innerTubeControllerFactory - In the implementation block
@property (nonatomic,readonly) YTPlayerViewController * playerViewController;                                               //@synthesize playerViewController=_playerViewController - In the implementation block
@property (nonatomic,readonly) unsigned watchPlaylistEndpointRequestID;                                                     //@synthesize watchPlaylistEndpointRequestID=_watchPlaylistEndpointRequestID - In the implementation block
@property (nonatomic,retain) YTSharingActionSheetController * sharingActionSheetController;                                 //@synthesize sharingActionSheetController=_sharingActionSheetController - In the implementation block
@property (assign,nonatomic,__weak) id<YTAutoplayControllerProtocol> autoplayController;                                    //@synthesize autoplayController=_autoplayController - In the implementation block
@property (assign,nonatomic,__weak) id<YTAutonavControllerProtocol> autonavController;                                      //@synthesize autonavController=_autonavController - In the implementation block
@property (nonatomic,retain) YTINavigationEndpoint * watchTransitionNavigationEndpoint;                                     //@synthesize watchTransitionNavigationEndpoint=_watchTransitionNavigationEndpoint - In the implementation block
@property (nonatomic,readonly) YTMealbarPromoController * mealbarPromoController; 
@property (nonatomic,retain) YTINavigationEndpoint * shareEndpoint;                                                         //@synthesize shareEndpoint=_shareEndpoint - In the implementation block
@property (nonatomic,retain) YTIServiceEndpoint * sharePrivateEndpoint;                                                     //@synthesize sharePrivateEndpoint=_sharePrivateEndpoint - In the implementation block
@property (assign,nonatomic,__weak) id<YTShouldAutorotateResponderProvider> shouldAutorotateResponderProvider;              //@synthesize shouldAutorotateResponderProvider=_shouldAutorotateResponderProvider - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,__weak,readonly) id<YTResponder> parentResponder;                                                      //@synthesize parentResponder=_parentResponder - In the implementation block
-(void)handleRemoteControlEvent:(int)arg1 ;
-(id<MDXServices>)MDXServices;
-(id<YTShareServices>)shareServices;
-(id<YTResponder>)parentResponder;
-(id)initWithParentResponder:(id)arg1 ;
-(char)isMDXActive;
-(id)navigationEndpoint;
-(GIMMe *)gimme;
-(YTInnerTubeControllerFactory *)innerTubeControllerFactory;
-(void)appDidChangeDeviceOrientation;
-(void)setGimme:(GIMMe *)arg1 ;
-(void)setWatchViewLayout:(int)arg1 ;
-(id<YTDataServices>)dataServices;
-(id<YTOfflineServices>)offlineServices;
-(YTPlayerResponse *)playerResponse;
-(id<YTPlayerServices>)playerServices;
-(id)navEndpoint;
-(/*^block*/id)clientDataBlock;
-(void)setAutonavController:(id<YTAutonavControllerProtocol>)arg1 ;
-(void)setExpansionCoefficient:(float)arg1 ;
-(void)playbackControllerDidReceivePlayerResponse:(id)arg1 ;
-(void)playbackControllerDidPlay;
-(void)playbackControllerDidFinishPlaying;
-(void)playbackControllerDidFinishPlayingAd;
-(void)playbackControllerWillFailWithError:(id)arg1 ;
-(void)playbackControllerStateDidChange;
-(void)setWatchTransition:(id)arg1 ;
-(id)activeVideoID;
-(void)clearNavEndpoint;
-(void)showAddToMenuFromView:(id)arg1 ;
-(char)shouldPersistFullscreenEnterButton;
-(YTInfoCardController *)infoCardController;
-(YTMealbarPromoController *)mealbarPromoController;
-(YTWatchView *)watchView;
-(char)isTransitioningWatchViewLayout;
-(char)shouldControlStatusBarStyle;
-(void)hideWatch;
-(char)shouldReloadVideoForWatchTransition:(id)arg1 ;
-(void)setTransitioningWatchViewLayout:(char)arg1 ;
-(void)didStartAnimatingFromLayout:(int)arg1 toLayout:(int)arg2 ;
-(id)playbackDebugData;
-(CGRect)frameForDismissedPlayerView;
-(void)fullScreenVideoViewControllerDidDismiss;
-(void)updatePlayerControllerControls;
-(void)willAnimateTransitionFromSize:(CGSize)arg1 toSize:(CGSize)arg2 ;
-(void)setAutoplay:(id)arg1 autonav:(id)arg2 playlistPanel:(id)arg3 playlistUIDelegate:(id)arg4 infoCardContainer:(id)arg5 watchNextResults:(id)arg6 descriptionDetails:(id)arg7 currentEndpoint:(id)arg8 videoReportingRenderers:(id)arg9 addToMenuRenderer:(id)arg10 shareEndpoint:(id)arg11 surveyRenderer:(id)arg12 watchNextResponse:(id)arg13 ;
-(char)playlistShuffleEnabledOnLoad;
-(YTINavigationEndpoint *)shareEndpoint;
-(id<YTAutoplayControllerProtocol>)autoplayController;
-(char)isCompanionAdLoaded;
-(char)shouldShowFullscreenForCurrentOrientation_iPad;
-(char)shouldShowFullscreenForCurrentOrientation_iPhone;
-(void)layoutViewForOrientation_iPad:(int)arg1 ;
-(void)layoutViewForOrientation_iPhone:(int)arg1 ;
-(void)appDidChangeDeviceOrientation_iPad;
-(void)appDidChangeDeviceOrientation_iPhone;
-(unsigned)allowedFullscreenOrientations_iPad;
-(unsigned)allowedFullscreenOrientations_iPhone;
-(char)handleOfflineButtonEvent:(id)arg1 ;
-(char)handleNavigationEndpointResponderEvent:(id)arg1 ;
-(YTIServiceEndpoint *)sharePrivateEndpoint;
-(YTSharingActionSheetController *)sharingActionSheetController;
-(YTINavigationEndpoint *)watchTransitionNavigationEndpoint;
-(id<YTAutonavControllerProtocol>)autonavController;
-(void)createWatchNextViewControllerIfNeeded;
-(void)voiceSearchDialogDidPresent:(id)arg1 ;
-(void)layoutViewForOrientation:(int)arg1 ;
-(void)applyWatchTransition:(id)arg1 ;
-(void)fetchWatchEndpointForWatchTransition:(id)arg1 ;
-(void)destroyWatchNextViewController;
-(void)dismissFullscreen;
-(char)isFijiEnabledAndActive;
-(void)updateWatchNextResultsVisibleSectionsForSize:(CGSize)arg1 ;
-(char)shouldExitFullscreenOnFinish;
-(void)showSmallScreen;
-(void)loadCompanionAdIfNeeded;
-(void)loadWatchNextInfoCardController;
-(char)shouldShowFullscreenForCurrentOrientation;
-(void)showFullScreen;
-(void)notifyOfflineabilityObserversDidChange;
-(void)displayFirstMealbarInPlayerResponse:(id)arg1 withTriggerCondition:(int)arg2 ;
-(char)isFullscreenEnabledForPlayerViewControllerState:(int)arg1 ;
-(void)presentFullscreen;
-(void)hideFullscreen;
-(void)hideFullscreenWithExpandWatchView:(char)arg1 ;
-(void)maybeAutoplayFollowingFailedPlayback;
-(void)maybeAutoplayFollowingFinishedVideo;
-(char)hasNoOverlaysPresent;
-(unsigned)allowedFullscreenOrientations;
-(unsigned)watchPlaylistEndpointRequestID;
-(void)claimPlayerViewController;
-(char)isTransitionFromInlinePlaybackWithVideoID:(id)arg1 hasPlayerViewController:(char)arg2 ;
-(void)resetPlayerViewController;
-(int)playerViewLayoutFromWatchViewLayout:(int)arg1 ;
-(id)watchNextServiceForNavEndpoint:(id)arg1 ;
-(float)expansionCoefficientForLayout:(int)arg1 ;
-(void)loadCompanionAd:(id)arg1 ;
-(void)removeCompanionAd;
-(id)getPlayerResponseAppInfoCard;
-(char)isAudioCasting;
-(void)handleWatchNavigationEndpointResponderEvent:(id)arg1 ;
-(char)shouldRotateForLayout:(int)arg1 ;
-(char)MDXShouldInterruptDiscovery;
-(char)showActiveInfoCardOnInception;
-(double)activeVideoMediaTime;
-(id)activePlaylistID;
-(unsigned)activeVideoIndex;
-(char)isActiveVideoPlayable;
-(id)activeVideoReportingRenderer;
-(void)addOfflineabilityChangeObserver:(id)arg1 ;
-(id)nextPlayerTransitionForAutoplay;
-(char)willAutoPlayNextVideoOnFinish;
-(void)hideCompanionAd;
-(id)parentCSN;
-(id<YTInfoCardContainerProtocol>)watchNextInfoCardContainer;
-(void)setSharingActionSheetController:(YTSharingActionSheetController *)arg1 ;
-(void)setAutoplayController:(id<YTAutoplayControllerProtocol>)arg1 ;
-(void)setWatchTransitionNavigationEndpoint:(YTINavigationEndpoint *)arg1 ;
-(void)setSharePrivateEndpoint:(YTIServiceEndpoint *)arg1 ;
-(id<YTShouldAutorotateResponderProvider>)shouldAutorotateResponderProvider;
-(void)setShouldAutorotateResponderProvider:(id<YTShouldAutorotateResponderProvider>)arg1 ;
-(void)setShareEndpoint:(YTINavigationEndpoint *)arg1 ;
-(YTPlayerViewController *)playerViewController;
-(void)dealloc;
-(void)reload;
-(int)preferredStatusBarStyle;
-(char)prefersStatusBarHidden;
-(void)loadView;
-(void)viewWillAppear:(char)arg1 ;
-(void)viewDidLoad;
-(void)viewDidAppear:(char)arg1 ;
-(void)viewWillDisappear:(char)arg1 ;
-(void)keyboardDidShow:(id)arg1 ;
-(void)keyboardDidHide:(id)arg1 ;
-(id<YTServices>)services;
-(char)isFullscreen;
@end

