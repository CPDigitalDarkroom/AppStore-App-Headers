/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:49:35 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/FFD4619E-59E7-49B9-AD90-0E28F5807C56/YouTube.app/YouTube
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <YouTube/YouTube-Structs.h>
#import <YouTube/YTSystemNotificationsObserver.h>
#import <YouTube/MLPlayer.h>

@protocol MLServices, EXODataLoader, EXORenderLoop, MLPlayerConfig, MLPlayerDelegate, MLPlayerCaptionDelegate, EXOPixelBufferRenderingView;
@class NSError, NSArray, MLFormat, MLVideo, NSString, AVAudioSession, EXOPlayerContext, EXOPlayer, YTIIosExoPlayerConfig, MLEXOQoEMeasurementProvider, EXOPixelBufferVideoTrackRenderer, EXOAudioEngineTrackRenderer, MLEXOFormatSelectionStrategy, EXOViewportSize, NSURL, UIView;

@interface MLEXOPlayer : NSObject <YTSystemNotificationsObserver, MLPlayer> {

	id<MLServices> _services;
	id<EXODataLoader> _dataLoader;
	AVAudioSession* _audioSession;
	id<EXORenderLoop> _renderLoop;
	EXOPlayerContext* _playerContext;
	EXOPlayer* _player;
	YTIIosExoPlayerConfig* _exoConfig;
	MLEXOQoEMeasurementProvider* _QoEMeasurementProvider;
	EXOPixelBufferVideoTrackRenderer* _videoTrackRenderer;
	EXOAudioEngineTrackRenderer* _audioTrackRenderer;
	MLEXOFormatSelectionStrategy* _videoFormatSelectionStrategy;
	EXOViewportSize* _viewportSize;
	NSURL* _probeURLOnVideoPlay;
	char _muted;
	char _backgroundPlaybackAllowed;
	char _externalPlaybackAllowed;
	char _externalPlaybackFullscreen;
	char _deferDeallocationsWhileScrolling;
	id<MLPlayerConfig> _config;
	id<MLPlayerDelegate> _delegate;
	NSError* _error;
	NSArray* _selectableFormats;
	MLFormat* _selectedAudioFormat;
	MLFormat* _selectedVideoFormat;
	int _state;
	MLVideo* _video;
	float _volume;
	id<MLPlayerCaptionDelegate> _captionDelegate;
	UIView*<EXOPixelBufferRenderingView> _renderingView;

}

@property (nonatomic,readonly) UIView*<EXOPixelBufferRenderingView> renderingView;              //@synthesize renderingView=_renderingView - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (assign,nonatomic,__weak) id<MLPlayerDelegate> delegate;                              //@synthesize delegate=_delegate - In the implementation block
@property (assign,nonatomic,__weak) id<MLPlayerCaptionDelegate> captionDelegate;                //@synthesize captionDelegate=_captionDelegate - In the implementation block
@property (nonatomic,readonly) int state;                                                       //@synthesize state=_state - In the implementation block
@property (nonatomic,readonly) NSError * error;                                                 //@synthesize error=_error - In the implementation block
@property (assign,nonatomic) char backgroundPlaybackAllowed;                                    //@synthesize backgroundPlaybackAllowed=_backgroundPlaybackAllowed - In the implementation block
@property (assign,nonatomic) char externalPlaybackAllowed;                                      //@synthesize externalPlaybackAllowed=_externalPlaybackAllowed - In the implementation block
@property (assign,nonatomic) char externalPlaybackFullscreen;                                   //@synthesize externalPlaybackFullscreen=_externalPlaybackFullscreen - In the implementation block
@property (assign,nonatomic) char deferDeallocationsWhileScrolling;                             //@synthesize deferDeallocationsWhileScrolling=_deferDeallocationsWhileScrolling - In the implementation block
@property (assign,nonatomic) float volume;                                                      //@synthesize volume=_volume - In the implementation block
@property (assign,getter=isMuted,nonatomic) char muted;                                         //@synthesize muted=_muted - In the implementation block
@property (nonatomic,readonly) NSArray * selectableFormats;                                     //@synthesize selectableFormats=_selectableFormats - In the implementation block
@property (nonatomic,readonly) MLFormat * selectedAudioFormat;                                  //@synthesize selectedAudioFormat=_selectedAudioFormat - In the implementation block
@property (nonatomic,readonly) MLFormat * selectedVideoFormat;                                  //@synthesize selectedVideoFormat=_selectedVideoFormat - In the implementation block
@property (nonatomic,readonly) MLVideo * video;                                                 //@synthesize video=_video - In the implementation block
@property (nonatomic,readonly) id<MLPlayerConfig> config;                                       //@synthesize config=_config - In the implementation block
@property (nonatomic,readonly) NSString * playerType; 
@property (nonatomic,readonly) CGSize currentVideoSize; 
+(char)canPlayVideo:(id)arg1 withPlayerConfig:(id)arg2 reachability:(id)arg3 externalPlaybackActive:(char)arg4 ;
-(void)appDidReceiveAudioSessionRouteChangeWithUserInfo:(id)arg1 ;
-(id)debugLogs;
-(char)deferDeallocationsWhileScrolling;
-(void)replay;
-(id)debugParameters;
-(double)totalMediaTime;
-(void)disablePlayerCaptions;
-(void)enablePlayerCaptionsWithOption:(id)arg1 ;
-(void)resumeVideoStreamPlayback;
-(void)viewportSizeDidChangeToSize:(id)arg1 ;
-(UIView*<EXOPixelBufferRenderingView>)renderingView;
-(void)setVideoFormatConstraint:(id)arg1 ;
-(void)setAudioFormatConstraint:(id)arg1 ;
-(NSArray *)selectableFormats;
-(void)setCaptionDelegate:(id<MLPlayerCaptionDelegate>)arg1 ;
-(MLFormat *)selectedAudioFormat;
-(MLFormat *)selectedVideoFormat;
-(double)bufferedMediaTime;
-(CGSize)currentVideoSize;
-(void)setExternalPlaybackAllowed:(char)arg1 ;
-(void)setExternalPlaybackFullscreen:(char)arg1 ;
-(void)setDeferDeallocationsWhileScrolling:(char)arg1 ;
-(id)createQoEMeasurementProviderWithPlayerConfig:(id)arg1 ;
-(void)loadWithVideo:(id)arg1 playerConfig:(id)arg2 externalPlayer:(id)arg3 ;
-(void)setBackgroundPlaybackAllowed:(char)arg1 ;
-(id)createPlayer;
-(id)createAudioFormatSelectionStrategy;
-(id)createAudioTrackRendererWithSource:(id)arg1 ;
-(void)updateAudioTrackRendererVolume;
-(id)createVideoFormatSelectionStrategy;
-(id)createVideoTrackRendererWithSource:(id)arg1 renderLoop:(id)arg2 ;
-(void)registerWithEventCenter:(id)arg1 ;
-(double)timeToSeconds:(SCD_Struct_YT44)arg1 ;
-(char)audioSessionHasAirPlayOutputRoute;
-(void)onPlayerStatusChangedEvent:(id)arg1 ;
-(void)onFormatSelectionEvent:(id)arg1 ;
-(id)createStallPredictor;
-(id)formatSelectionStrategyWithConfig:(id)arg1 viewportSize:(id)arg2 ;
-(id<MLPlayerCaptionDelegate>)captionDelegate;
-(char)externalPlaybackAllowed;
-(char)externalPlaybackFullscreen;
-(id)initWithServices:(id)arg1 dataLoader:(id)arg2 audioSession:(id)arg3 renderingView:(id)arg4 renderLoop:(id)arg5 ;
-(void)makeActivePlayer;
-(id)dataLoader;
-(void)setVideo:(id)arg1 playerConfig:(id)arg2 ;
-(char)backgroundPlaybackAllowed;
-(char)isExternalPlaybackActive;
-(void)seekToTime:(double)arg1 ;
-(void)setMuted:(char)arg1 ;
-(NSError *)error;
-(void)play;
-(void)failWithError:(id)arg1 ;
-(void)setVolume:(float)arg1 ;
-(void)setDelegate:(id<MLPlayerDelegate>)arg1 ;
-(id<MLPlayerDelegate>)delegate;
-(int)state;
-(void)setState:(int)arg1 ;
-(void)reset;
-(void)pause;
-(double)currentMediaTime;
-(id<MLPlayerConfig>)config;
-(void)seekToEnd;
-(float)volume;
-(MLVideo *)video;
-(char)isMuted;
-(NSString *)playerType;
@end

