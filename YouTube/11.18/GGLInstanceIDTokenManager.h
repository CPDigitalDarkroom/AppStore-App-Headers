/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:49:24 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/FFD4619E-59E7-49B9-AD90-0E28F5807C56/YouTube.app/YouTube
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@class GGLInstanceIDRegistrar, GGLInstanceIDStore;

@interface GGLInstanceIDTokenManager : NSObject {

	char _allowMissingAPNSToken;
	GGLInstanceIDRegistrar* _registrar;
	GGLInstanceIDStore* _instanceIDStore;

}

@property (nonatomic,readonly) GGLInstanceIDStore * instanceIDStore; 
@property (nonatomic,retain) GGLInstanceIDRegistrar * registrar;                  //@synthesize registrar=_registrar - In the implementation block
@property (assign,nonatomic) char allowMissingAPNSToken;                          //@synthesize allowMissingAPNSToken=_allowMissingAPNSToken - In the implementation block
@property (nonatomic,retain) GGLInstanceIDStore * instanceIDStore;                //@synthesize instanceIDStore=_instanceIDStore - In the implementation block
-(void)setRegistrar:(GGLInstanceIDRegistrar *)arg1 ;
-(id)tokenWithAuthorizedEntity:(id)arg1 scope:(id)arg2 options:(id)arg3 ;
-(char)invalidateCachedToken:(id)arg1 withAuthorizedEntity:(id)arg2 scope:(id)arg3 options:(id)arg4 ;
-(void)fetchNewTokenWithAuthorizedEntity:(id)arg1 scope:(id)arg2 keyPair:(id)arg3 options:(id)arg4 handler:(/*^block*/id)arg5 ;
-(void)deleteTokenWithAuthorizedEntity:(id)arg1 scope:(id)arg2 keyPair:(id)arg3 handler:(/*^block*/id)arg4 ;
-(void)deleteAllTokensWithKeyPair:(id)arg1 handler:(/*^block*/id)arg2 ;
-(void)setAllowMissingAPNSToken:(char)arg1 ;
-(char)allowMissingAPNSToken;
-(id)initWithTokenPlist:(id)arg1 checkinStore:(id)arg2 tokenStore:(id)arg3 ;
-(void)fetchTokenWithAuthorizedEntity:(id)arg1 scope:(id)arg2 keyPair:(id)arg3 options:(id)arg4 handler:(/*^block*/id)arg5 ;
-(id)validCachedTokenWithAuthorizedEntity:(id)arg1 scope:(id)arg2 options:(id)arg3 ;
-(GGLInstanceIDStore *)instanceIDStore;
-(void)deleteRegisteredTokenWithAuthorizedEntity:(id)arg1 scope:(id)arg2 keyPair:(id)arg3 handler:(/*^block*/id)arg4 ;
-(char)deleteAllTokensLocallyWithError:(id*)arg1 ;
-(char)shouldResetTokenOnAppVersion;
-(char)shouldResetTokenOnAPNSToken:(id)arg1 isSandbox:(char)arg2 ;
-(void)setInstanceIDStore:(GGLInstanceIDStore *)arg1 ;
-(GGLInstanceIDRegistrar *)registrar;
-(id)init;
-(void)stopAllRequests;
@end

