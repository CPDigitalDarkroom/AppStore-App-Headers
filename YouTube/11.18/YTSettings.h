/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:49:09 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/FFD4619E-59E7-49B9-AD90-0E28F5807C56/YouTube.app/YouTube
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <YouTube/YTAppConfig.h>
#import <YouTube/YTSettingsBackedByUserDefaults.h>

@protocol MDXRemoteClientResponderProvider;
@class NSArray, NSDate, NSDictionary, NSString, YTGlobalConfig, YTUserDefaults, NSNumber;

@interface YTSettings : NSObject <YTAppConfig, YTSettingsBackedByUserDefaults> {

	YTGlobalConfig* _globalConfig;
	id<MDXRemoteClientResponderProvider> _remoteClientResponderProvider;
	char _localeRequiresSafeSearch;
	char _navEndpointClick;
	NSDictionary* _breakpadParameters;
	NSDictionary* _feedbackParameters;
	NSDictionary* _ECatcherParameters;
	NSString* _lastChangedPlaylistID;
	NSString* _lastChangedPlaylistTitle;
	YTUserDefaults* _userDefaults;

}

@property (nonatomic,readonly) char localeRequiresSafeSearch;                                                         //@synthesize localeRequiresSafeSearch=_localeRequiresSafeSearch - In the implementation block
@property (assign,nonatomic) int serverEnvironment; 
@property (assign,nonatomic) int innerTubeVersion; 
@property (nonatomic,copy) NSString * innerTubeInternalGeoOverride; 
@property (nonatomic,copy) NSString * innerTubeLanguageOverride; 
@property (nonatomic,copy) NSString * innerTubeVersionOverride; 
@property (nonatomic,copy) NSString * OSVersionOverride; 
@property (assign,nonatomic) char shouldSendCrashReports; 
@property (assign,getter=isHintsDateThrottleDisabled,nonatomic) char hintsDateThrottleDisabled; 
@property (assign,getter=isOfflineRefreshFast,nonatomic) char offlineRefreshFast; 
@property (assign,nonatomic) char enableOfflinePlaylistAutoSync; 
@property (assign,getter=isOfflinePlaylistSyncFast,nonatomic) char offlinePlaylistSyncFast; 
@property (nonatomic,retain) NSDate * offlinePlaylistSyncDate; 
@property (assign,getter=areOfflineAdFrequencyCapsIgnored,nonatomic) char offlineAdFrequencyCapsIgnored; 
@property (nonatomic,retain) NSDate * offlineRefreshDate; 
@property (nonatomic,retain) NSString * lastChangedPlaylistID;                                                        //@synthesize lastChangedPlaylistID=_lastChangedPlaylistID - In the implementation block
@property (nonatomic,retain) NSString * lastChangedPlaylistTitle;                                                     //@synthesize lastChangedPlaylistTitle=_lastChangedPlaylistTitle - In the implementation block
@property (nonatomic,copy) NSString * PPGBaseURL; 
@property (nonatomic,copy) NSString * innerTubez; 
@property (assign,nonatomic) int reachabilityDetectionStrategyType; 
@property (nonatomic,copy) NSNumber * forcedPromoInterval; 
@property (getter=isHelpkitChatEnabled,nonatomic,readonly) char helpkitChatEnabled; 
@property (assign,getter=isNavEndpointClick,nonatomic) char navEndpointClick;                                         //@synthesize navEndpointClick=_navEndpointClick - In the implementation block
@property (nonatomic,readonly) char isCriticalRequestPrefetchingResolveUrlEnabled; 
@property (nonatomic,readonly) char enableCriticalRequestPrefetchingBrowse; 
@property (nonatomic,readonly) char enableSafariViewController; 
@property (getter=shouldAlwaysShowStatusbarOnWatch,nonatomic,readonly) char alwaysShowStatusbarOnWatch; 
@property (getter=isPersonalizedSuggestEnabled,nonatomic,readonly) char personalizedSuggestEnabled; 
@property (nonatomic,readonly) YTUserDefaults * userDefaults;                                                         //@synthesize userDefaults=_userDefaults - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,copy) NSString * captionLanguageCode; 
@property (getter=isNerdStatsEnabled,nonatomic,readonly) char nerdStatsEnabled; 
@property (nonatomic,readonly) char excludeCastIconFromOverlay; 
@property (nonatomic,retain) NSDate * lastSpeedyGPromoDisplayDate; 
@property (assign,nonatomic) int backgroundability; 
@property (nonatomic,readonly) char deferDeallocationsWhileScrolling; 
@property (assign,nonatomic) char fullscreenPlaybackOnExternalScreenEnabled; 
@property (assign,getter=hasBackgroundOnboardingHintShown,nonatomic) char backgroundOnboardingHintShown; 
@property (nonatomic,readonly) char allowAudioOnlyManualQualitySelection; 
@property (assign,nonatomic) int autonavSettingsState; 
@property (nonatomic,readonly) char allowRestrictedContentFlow; 
@property (nonatomic,readonly) NSString * fairPlayKeyHostOverride; 
@property (assign,nonatomic) char disableFrequencyCap; 
@property (assign,nonatomic) char logApiaryRequests; 
@property (nonatomic,readonly) char browseDebug; 
@property (nonatomic,copy) NSString * visitorData; 
@property (nonatomic,retain) NSDictionary * breakpadParameters;                                                       //@synthesize breakpadParameters=_breakpadParameters - In the implementation block
@property (nonatomic,retain) NSDictionary * feedbackParameters;                                                       //@synthesize feedbackParameters=_feedbackParameters - In the implementation block
@property (nonatomic,retain) NSDictionary * ECatcherParameters;                                                       //@synthesize ECatcherParameters=_ECatcherParameters - In the implementation block
@property (assign,nonatomic) char onlyDownloadOverWiFi; 
@property (assign,nonatomic) int maximumOfflineVideoQuality; 
@property (nonatomic,readonly) char doNotCount; 
@property (assign,getter=isPublicCommentLikeConfirmed,nonatomic) char publicCommentLikeConfirmed; 
@property (nonatomic,readonly) char enableHelpKitNotifications; 
@property (assign,nonatomic) int uploadQuality; 
@property (assign,nonatomic) char onlyUploadOverWiFi; 
@property (assign,getter=isForcedInnerTubeUploads,nonatomic) char forcedInnerTubeUploads; 
@property (assign,getter=isUploadDatabaseWiped,nonatomic) char uploadDatabaseWiped; 
@property (assign,nonatomic) char alwaysShowFirstSignIn; 
@property (assign,nonatomic) char disableMDXDeviceDiscovery; 
@property (assign,nonatomic) char enableCastSDKLogging; 
@property (assign,nonatomic) char enableMDXAutoplay; 
@property (assign,nonatomic) char enableMDXFiji; 
@property (assign,nonatomic) char enableMDXMemento; 
@property (assign,nonatomic) char enablePivotBar; 
@property (assign,nonatomic) char forceEnableInlineControls; 
@property (assign,nonatomic) char forceEnableInlinePlayback; 
@property (assign,nonatomic) char forceEnableTabloid; 
@property (assign,nonatomic) char logAdRequests; 
@property (assign,nonatomic) char openLinksWithChrome; 
@property (assign,nonatomic) char searchHistoryPaused; 
@property (assign,nonatomic) char streamHDOnWiFiOnly; 
@property (assign,nonatomic) char useMDXDevServer; 
@property (assign,nonatomic) char watchHistoryPaused; 
@property (nonatomic,copy) NSArray * customExperimentIDs; 
@property (nonatomic,retain) NSDate * promotedItemLastClosedTime; 
@property (nonatomic,copy) NSDictionary * retentionTrackingParameters; 
@property (assign,nonatomic) int forcedPromoIDRequests; 
@property (nonatomic,copy) NSString * contentRegion; 
@property (nonatomic,copy) NSString * forcedPromoID; 
@property (nonatomic,copy) NSString * vixSnapshot; 
@property (assign,nonatomic) int safeSearch; 
@property (assign,nonatomic) unsigned suggestionsDroppingType; 
@property (assign,nonatomic) int vixServiceToOverride; 
@property (assign,getter=isFPSStatusBarEnabled,nonatomic) char FPSStatusBarEnabled; 
@property (assign,getter=isQoELogRecorderEnabled,nonatomic) char QoELogRecorderEnabled; 
@property (assign,getter=isWelcomeDismissed,nonatomic) char welcomeDismissed; 
@property (nonatomic,copy) NSString * flexGenServerURL; 
@property (nonatomic,copy) NSString * vixUsername; 
@property (assign,getter=areHintsDisabled,nonatomic) char hintsDisabled; 
@property (assign,getter=isExoPlayerEnabled,nonatomic) char exoPlayerEnabled; 
@property (assign,getter=isForceNavEndpointClick,nonatomic) char forceNavEndpointClick; 
@property (assign,getter=isOfflineConfirmRemoveDisabled,nonatomic) char offlineConfirmRemoveDisabled; 
@property (assign,getter=isQuickActionsEnabled,nonatomic) char quickActionsEnabled; 
@property (assign,getter=isWebPEnabled,nonatomic) char webPEnabled; 
@property (assign,getter=networkTypeOverride,nonatomic) int networkTypeOverride; 
+(id)sharedGroupName;
-(id)sharedGroupName;
-(char)openLinksWithChrome;
-(char)enableSafariViewController;
-(void)setLogApiaryRequests:(char)arg1 ;
-(void)setServerEnvironment:(int)arg1 ;
-(id)globalConfig;
-(int)maximumOfflineVideoQuality;
-(void)setMaximumOfflineVideoQuality:(int)arg1 ;
-(char)isPersonalizedSuggestEnabled;
-(char)isQuickActionsEnabled;
-(id)suggestClientName;
-(char)searchHistoryPaused;
-(id)allowedInsecureSchemes;
-(id)apiaryClientID;
-(id)apiaryClientSecret;
-(char)useMDXDevServer;
-(char)enableMDXFiji;
-(int)innerTubeClientName;
-(id)MDXGlobalConfig;
-(char)disableMDXDeviceDiscovery;
-(char)enableCastSDKLogging;
-(char)isAudioCastEnabled;
-(char)enableMDXAutoplay;
-(char)enableMDXMemento;
-(char)enableMDXCastIconTv;
-(char)enableMDXCastSwitch;
-(int)backgroundability;
-(void)setBackgroundability:(int)arg1 ;
-(char)deferDeallocationsWhileScrolling;
-(char)fullscreenPlaybackOnExternalScreenEnabled;
-(void)setFullscreenPlaybackOnExternalScreenEnabled:(char)arg1 ;
-(char)hasBackgroundOnboardingHintShown;
-(void)setBackgroundOnboardingHintShown:(char)arg1 ;
-(char)allowAudioOnlyManualQualitySelection;
-(int)autonavSettingsState;
-(void)setAutonavSettingsState:(int)arg1 ;
-(char)allowRestrictedContentFlow;
-(char)isNerdStatsEnabled;
-(char)excludeCastIconFromOverlay;
-(NSString *)captionLanguageCode;
-(void)setCaptionLanguageCode:(NSString *)arg1 ;
-(NSDate *)lastSpeedyGPromoDisplayDate;
-(void)setLastSpeedyGPromoDisplayDate:(NSDate *)arg1 ;
-(NSString *)fairPlayKeyHostOverride;
-(id)streamStoreKey;
-(unsigned)streamStoreSearchPathDirectory;
-(id)streamStoreSubdirectory;
-(char)isDownloadDuringPlaybackEnabled;
-(unsigned)minimumExtraBandwidthForDownloadDuringPlayback;
-(float)videoBitrateScaleForDownloadDuringPlayback;
-(char)shouldUseSessionFetcher;
-(char)disableFrequencyCap;
-(void)setDisableFrequencyCap:(char)arg1 ;
-(id)apiaryDistillerURLBase;
-(id)apiaryRegistrationURLBase;
-(id)apiaryDeveloperKey;
-(id)apiaryProjectKey;
-(char)isInnerTubePPG;
-(char)logApiaryRequests;
-(char)browseDebug;
-(NSString *)visitorData;
-(void)setVisitorData:(NSString *)arg1 ;
-(NSDictionary *)breakpadParameters;
-(void)setBreakpadParameters:(NSDictionary *)arg1 ;
-(NSDictionary *)feedbackParameters;
-(void)setFeedbackParameters:(NSDictionary *)arg1 ;
-(NSDictionary *)ECatcherParameters;
-(void)setECatcherParameters:(NSDictionary *)arg1 ;
-(id)deviceInstallationID;
-(char)hasNetworkTypeOverride;
-(int)networkTypeOverride;
-(char)logAdRequests;
-(char)isAdultContentConfirmed;
-(char)isControversialContentConfirmed;
-(NSString *)contentRegion;
-(id)configData;
-(id)innerTubeURLBaseWithPath:(id)arg1 ;
-(id)innerTubeRegistrationURLBase;
-(id)innerTubeDeveloperKey;
-(id)innerTubeProjectKey;
-(id)configURLBaseWithPath:(id)arg1 ;
-(NSString *)innerTubeInternalGeoOverride;
-(NSString *)innerTubeVersionOverride;
-(char)innerTubeEnableSafetyMode;
-(id)innerTubeForcedExperimentIDs;
-(id)innerTubeExperimentalDataParams;
-(id)innerTubeCapabilityMapping;
-(NSString *)vixUsername;
-(NSString *)vixSnapshot;
-(int)vixServiceToOverride;
-(char)useAcceptLanguageAndRegion;
-(int)innerTubeClientFormFactor;
-(id)innerTubeRemoteClient;
-(NSString *)innerTubeLanguageOverride;
-(NSString *)OSVersionOverride;
-(NSString *)innerTubez;
-(char)onlyDownloadOverWiFi;
-(void)setOnlyDownloadOverWiFi:(char)arg1 ;
-(NSDate *)offlineRefreshDate;
-(void)setOfflineRefreshDate:(NSDate *)arg1 ;
-(char)isOfflineRefreshFast;
-(void)setOfflineRefreshFast:(char)arg1 ;
-(char)areOfflineAdFrequencyCapsIgnored;
-(void)setOfflineAdFrequencyCapsIgnored:(char)arg1 ;
-(id)vssConfig;
-(id)qoeConfig;
-(id)atrConfig;
-(id)ptrackingConfig;
-(id)remarketingConfig;
-(id)drpConfig;
-(char)doNotCount;
-(NSDictionary *)retentionTrackingParameters;
-(void)setRetentionTrackingParameters:(NSDictionary *)arg1 ;
-(void)setInteractionLoggingDebugEnabled:(char)arg1 ;
-(char)isInteractionLoggingDebugEnabled;
-(char)isWebPEnabled;
-(char)isPublicCommentLikeConfirmed;
-(void)setPublicCommentLikeConfirmed:(char)arg1 ;
-(id)googleConversionPingId;
-(id)googleConversionPingLabel;
-(id)googleConversionPingValue;
-(id)googleConversionPingScreenNameOpen;
-(id)googleRemarketingPingLabelMusic;
-(id)googleConversionPingScreenNameSignIn;
-(id)googleRemarketingPingLabel;
-(char)shouldUsePlusPages;
-(char)needsSharingEnabled;
-(char)needsCommentsEnabled;
-(char)needsHelpKit;
-(char)enableSSOSFSafari;
-(int)reachabilityDetectionStrategyType;
-(char)isGcmEnabled;
-(char)enableHelpKitNotifications;
-(void)setControversialContentConfirmed:(char)arg1 ;
-(void)setAdultContentConfirmed:(char)arg1 ;
-(int)uploadQuality;
-(void)setUploadQuality:(int)arg1 ;
-(char)onlyUploadOverWiFi;
-(void)setOnlyUploadOverWiFi:(char)arg1 ;
-(char)isForcedInnerTubeUploads;
-(void)setForcedInnerTubeUploads:(char)arg1 ;
-(char)isUploadDatabaseWiped;
-(void)setUploadDatabaseWiped:(char)arg1 ;
-(id)appUpdateURL;
-(int)safeSearch;
-(void)setSafeSearch:(int)arg1 ;
-(void)setContentRegion:(NSString *)arg1 ;
-(int)serverEnvironment;
-(int)innerTubeVersion;
-(void)setInnerTubeVersion:(int)arg1 ;
-(id)stringForInnerTubeURLVersion:(int)arg1 ;
-(void)setLogAdRequests:(char)arg1 ;
-(void)setAlwaysShowFirstSignIn:(char)arg1 ;
-(char)isWelcomeDismissed;
-(void)setWelcomeDismissed:(char)arg1 ;
-(char)isOfflineConfirmRemoveDisabled;
-(void)setOfflineConfirmRemoveDisabled:(char)arg1 ;
-(void)setOpenLinksWithChrome:(char)arg1 ;
-(char)streamHDOnWiFiOnly;
-(void)setStreamHDOnWiFiOnly:(char)arg1 ;
-(char)shouldSendCrashReports;
-(void)setShouldSendCrashReports:(char)arg1 ;
-(char)watchHistoryPaused;
-(void)setWatchHistoryPaused:(char)arg1 ;
-(void)setSearchHistoryPaused:(char)arg1 ;
-(char)areHintsDisabled;
-(void)setHintsDisabled:(char)arg1 ;
-(void)setHintsDateThrottleDisabled:(char)arg1 ;
-(NSDate *)promotedItemLastClosedTime;
-(void)setPromotedItemLastClosedTime:(NSDate *)arg1 ;
-(void)setDisableMDXDeviceDiscovery:(char)arg1 ;
-(void)setUseMDXDevServer:(char)arg1 ;
-(void)setEnableMDXFiji:(char)arg1 ;
-(void)setEnableMDXAutoplay:(char)arg1 ;
-(void)setEnableMDXMemento:(char)arg1 ;
-(void)setEnableCastSDKLogging:(char)arg1 ;
-(void)setWebPEnabled:(char)arg1 ;
-(void)setQuickActionsEnabled:(char)arg1 ;
-(void)setForceEnableInlinePlayback:(char)arg1 ;
-(void)setForceEnableInlineControls:(char)arg1 ;
-(void)setSuggestionsDroppingType:(unsigned)arg1 ;
-(void)setForceEnableTabloid:(char)arg1 ;
-(void)setNetworkTypeOverride:(int)arg1 ;
-(void)clearNetworkTypeOverride;
-(void)setEnableOfflinePlaylistAutoSync:(char)arg1 ;
-(void)setOfflinePlaylistSyncFast:(char)arg1 ;
-(NSDate *)offlinePlaylistSyncDate;
-(void)setOfflinePlaylistSyncDate:(NSDate *)arg1 ;
-(void)setCustomExperimentIDs:(NSArray *)arg1 ;
-(void)setForcedPromoID:(NSString *)arg1 ;
-(void)setForcedPromoIDRequests:(int)arg1 ;
-(void)setInnerTubez:(NSString *)arg1 ;
-(void)setVixUsername:(NSString *)arg1 ;
-(void)setVixSnapshot:(NSString *)arg1 ;
-(void)setVixServiceToOverride:(int)arg1 ;
-(void)setForcedPromoInterval:(NSNumber *)arg1 ;
-(void)setExoPlayerEnabled:(char)arg1 ;
-(char)isHelpkitChatEnabled;
-(void)setBrowseDebug:(char)arg1 ;
-(void)setFPSStatusBarEnabled:(char)arg1 ;
-(void)setReachabilityDetectionStrategyType:(int)arg1 ;
-(NSString *)flexGenServerURL;
-(char)enablePivotBar;
-(void)setEnablePivotBar:(char)arg1 ;
-(char)isCriticalRequestPrefetchingResolveUrlEnabled;
-(void)setQoELogRecorderEnabled:(char)arg1 ;
-(void)setNerdStatsEnabled:(char)arg1 ;
-(char)shouldAlwaysShowStatusbarOnWatch;
-(id)apiaryURLHost;
-(id)developerKeyForEnvironment:(int)arg1 ;
-(id)projectKeyForEnvironment:(int)arg1 ;
-(id)innerTubeURLHost;
-(id)innerTubeURLVersion;
-(id)configURLHost;
-(char)isExoPlayerEnabled;
-(char)forceEnableTabloid;
-(char)forceEnableInlinePlayback;
-(char)forceEnableInlineControls;
-(char)isQoELogRecorderEnabled;
-(unsigned)suggestionsDroppingType;
-(NSArray *)customExperimentIDs;
-(NSString *)forcedPromoID;
-(int)forcedPromoIDRequests;
-(id)innerTubeNavigationEndpointCapabilityIDs;
-(void)setDoNotCount:(char)arg1 ;
-(char)alwaysShowFirstSignIn;
-(char)isFPSStatusBarEnabled;
-(void)setFlexGenServerURL:(NSString *)arg1 ;
-(char)isForceNavEndpointClick;
-(void)setForceNavEndpointClick:(char)arg1 ;
-(id)initWithUserDefaults:(id)arg1 parentResponder:(id)arg2 ;
-(NSString *)PPGBaseURL;
-(void)setPPGBaseURL:(NSString *)arg1 ;
-(char)isHintsDateThrottleDisabled;
-(char)enableOfflinePlaylistAutoSync;
-(char)isOfflinePlaylistSyncFast;
-(NSNumber *)forcedPromoInterval;
-(char)enableCriticalRequestPrefetchingBrowse;
-(void)savePushNotificationDialogDecisionCancelIfApplicable;
-(id)pathForYTInnerTubeService:(int)arg1 ;
-(void)setInnerTubeInternalGeoOverride:(NSString *)arg1 ;
-(void)setInnerTubeLanguageOverride:(NSString *)arg1 ;
-(void)setInnerTubeVersionOverride:(NSString *)arg1 ;
-(void)setOSVersionOverride:(NSString *)arg1 ;
-(char)shouldUsePPGTestGAIA;
-(char)localeRequiresSafeSearch;
-(NSString *)lastChangedPlaylistID;
-(void)setLastChangedPlaylistID:(NSString *)arg1 ;
-(NSString *)lastChangedPlaylistTitle;
-(void)setLastChangedPlaylistTitle:(NSString *)arg1 ;
-(char)isNavEndpointClick;
-(void)setNavEndpointClick:(char)arg1 ;
-(YTUserDefaults *)userDefaults;
-(double)timeoutInterval;
@end

