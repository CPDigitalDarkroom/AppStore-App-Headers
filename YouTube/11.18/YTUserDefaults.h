/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:50:02 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/FFD4619E-59E7-49B9-AD90-0E28F5807C56/YouTube.app/YouTube
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <YouTube/YTSettingsBackedByUserDefaults.h>
#import <YouTube/YTOfflineGuideUserDefaultsProtocol.h>
#import <YouTube/YTOfflineSettingsUserDefaultsProtocol.h>

@protocol YTUserIDProviderProtocol, YTUserDefaultKeysProvider;
@class NSHashTable, YTUserDefaultsKeys, YTIBrowseResponse, NSString, NSArray, NSDate, NSDictionary, UIImage;

@interface YTUserDefaults : NSObject <YTSettingsBackedByUserDefaults, YTOfflineGuideUserDefaultsProtocol, YTOfflineSettingsUserDefaultsProtocol> {

	NSHashTable* _observers;
	id<YTUserIDProviderProtocol> _userIDProvider;
	YTUserDefaultsKeys*<YTUserDefaultKeysProvider> _keysProvider;

}

@property (assign,getter=hasClearedOldBackgroundOnboardingHint,nonatomic) char clearedOldBackgroundOnboardingHint; 
@property (nonatomic,retain) YTIBrowseResponse * offlineBrowseResponse; 
@property (nonatomic,retain) YTIBrowseResponse * offlineModeForcedBrowseResponse; 
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (assign,nonatomic) char alwaysShowFirstSignIn; 
@property (assign,nonatomic) char browseDebug; 
@property (assign,nonatomic) char disableMDXDeviceDiscovery; 
@property (assign,nonatomic) char doNotCount; 
@property (assign,nonatomic) char enableCastSDKLogging; 
@property (assign,nonatomic) char enableMDXAutoplay; 
@property (assign,nonatomic) char enableMDXFiji; 
@property (assign,nonatomic) char enableMDXMemento; 
@property (assign,nonatomic) char enablePivotBar; 
@property (assign,nonatomic) char forceEnableInlineControls; 
@property (assign,nonatomic) char forceEnableInlinePlayback; 
@property (assign,nonatomic) char forceEnableTabloid; 
@property (assign,nonatomic) char fullscreenPlaybackOnExternalScreenEnabled; 
@property (assign,nonatomic) char logAdRequests; 
@property (assign,nonatomic) char openLinksWithChrome; 
@property (assign,nonatomic) char searchHistoryPaused; 
@property (assign,nonatomic) char streamHDOnWiFiOnly; 
@property (assign,nonatomic) char useMDXDevServer; 
@property (assign,nonatomic) char watchHistoryPaused; 
@property (nonatomic,copy) NSArray * customExperimentIDs; 
@property (nonatomic,retain) NSDate * promotedItemLastClosedTime; 
@property (nonatomic,copy) NSDictionary * retentionTrackingParameters; 
@property (assign,nonatomic) int forcedPromoIDRequests; 
@property (nonatomic,copy) NSString * captionLanguageCode; 
@property (nonatomic,copy) NSString * contentRegion; 
@property (nonatomic,copy) NSString * forcedPromoID; 
@property (nonatomic,copy) NSString * innerTubez; 
@property (nonatomic,copy) NSString * vixSnapshot; 
@property (assign,nonatomic) int backgroundability; 
@property (assign,nonatomic) int safeSearch; 
@property (assign,nonatomic) int uploadQuality; 
@property (assign,nonatomic) unsigned suggestionsDroppingType; 
@property (assign,nonatomic) int autonavSettingsState; 
@property (assign,nonatomic) int vixServiceToOverride; 
@property (assign,getter=isFPSStatusBarEnabled,nonatomic) char FPSStatusBarEnabled; 
@property (assign,getter=isNerdStatsEnabled,nonatomic) char nerdStatsEnabled; 
@property (assign,getter=isQoELogRecorderEnabled,nonatomic) char QoELogRecorderEnabled; 
@property (assign,getter=isWelcomeDismissed,nonatomic) char welcomeDismissed; 
@property (nonatomic,copy) NSString * flexGenServerURL; 
@property (nonatomic,copy) NSString * vixUsername; 
@property (assign,getter=areHintsDisabled,nonatomic) char hintsDisabled; 
@property (assign,getter=hasBackgroundOnboardingHintShown,nonatomic) char backgroundOnboardingHintShown; 
@property (assign,getter=isExoPlayerEnabled,nonatomic) char exoPlayerEnabled; 
@property (assign,getter=isForceNavEndpointClick,nonatomic) char forceNavEndpointClick; 
@property (assign,getter=isForcedInnerTubeUploads,nonatomic) char forcedInnerTubeUploads; 
@property (assign,getter=isOfflineConfirmRemoveDisabled,nonatomic) char offlineConfirmRemoveDisabled; 
@property (assign,getter=isPublicCommentLikeConfirmed,nonatomic) char publicCommentLikeConfirmed; 
@property (assign,getter=isQuickActionsEnabled,nonatomic) char quickActionsEnabled; 
@property (assign,getter=isUploadDatabaseWiped,nonatomic) char uploadDatabaseWiped; 
@property (assign,getter=isWebPEnabled,nonatomic) char webPEnabled; 
@property (assign,getter=networkTypeOverride,nonatomic) int networkTypeOverride; 
@property (assign,nonatomic) int defaultVideoPrivacy; 
@property (assign,nonatomic) char hasShownUploadAccountHint; 
@property (nonatomic,retain) UIImage * cachedUserImage; 
@property (nonatomic,retain) NSDictionary * serializedLastSelectedIdentity; 
@property (assign,nonatomic) char onlyUploadOverWiFi; 
@property (assign,nonatomic) char suppressUploadOverCellularPrompt; 
@property (nonatomic,readonly) YTUserDefaultsKeys*<YTUserDefaultKeysProvider> keysProvider;                                     //@synthesize keysProvider=_keysProvider - In the implementation block
-(YTUserDefaultsKeys*<YTUserDefaultKeysProvider>)keysProvider;
-(id)initWithKeysProvider:(id)arg1 userIDProvider:(id)arg2 ;
-(char)openLinksWithChrome;
-(void)setLogApiaryRequests:(char)arg1 ;
-(void)setServerEnvironment:(int)arg1 ;
-(void)setOfflineEntitlementRefreshDate:(id)arg1 ;
-(id)offlineEntitlementRefreshDate;
-(int)maximumOfflineVideoQuality;
-(void)setMaximumOfflineVideoQuality:(int)arg1 ;
-(char)isQuickActionsEnabled;
-(char)searchHistoryPaused;
-(char)useMDXDevServer;
-(char)enableMDXFiji;
-(char)disableMDXDeviceDiscovery;
-(char)enableCastSDKLogging;
-(char)enableMDXAutoplay;
-(char)enableMDXMemento;
-(int)backgroundability;
-(void)setBackgroundability:(int)arg1 ;
-(char)fullscreenPlaybackOnExternalScreenEnabled;
-(void)setFullscreenPlaybackOnExternalScreenEnabled:(char)arg1 ;
-(char)hasBackgroundOnboardingHintShown;
-(void)setBackgroundOnboardingHintShown:(char)arg1 ;
-(int)autonavSettingsState;
-(void)setAutonavSettingsState:(int)arg1 ;
-(char)isNerdStatsEnabled;
-(NSString *)captionLanguageCode;
-(void)setCaptionLanguageCode:(NSString *)arg1 ;
-(id)lastSpeedyGPromoDisplayDate;
-(void)setLastSpeedyGPromoDisplayDate:(id)arg1 ;
-(void)setDisableFrequencyCap:(char)arg1 ;
-(char)logApiaryRequests;
-(char)browseDebug;
-(id)visitorData;
-(void)setVisitorData:(id)arg1 ;
-(char)hasNetworkTypeOverride;
-(int)networkTypeOverride;
-(char)logAdRequests;
-(char)isAdultContentConfirmed;
-(char)isControversialContentConfirmed;
-(NSString *)contentRegion;
-(NSString *)vixUsername;
-(NSString *)vixSnapshot;
-(int)vixServiceToOverride;
-(id)OSVersionOverride;
-(NSString *)innerTubez;
-(char)onlyDownloadOverWiFi;
-(void)setOnlyDownloadOverWiFi:(char)arg1 ;
-(id)offlineRefreshDate;
-(void)setOfflineRefreshDate:(id)arg1 ;
-(char)isOfflineRefreshFast;
-(void)setOfflineRefreshFast:(char)arg1 ;
-(char)areOfflineAdFrequencyCapsIgnored;
-(void)setOfflineAdFrequencyCapsIgnored:(char)arg1 ;
-(char)doNotCount;
-(NSDictionary *)retentionTrackingParameters;
-(void)setRetentionTrackingParameters:(NSDictionary *)arg1 ;
-(void)setInteractionLoggingDebugEnabled:(char)arg1 ;
-(char)isInteractionLoggingDebugEnabled;
-(char)isWebPEnabled;
-(char)isPublicCommentLikeConfirmed;
-(void)setPublicCommentLikeConfirmed:(char)arg1 ;
-(int)reachabilityDetectionStrategyType;
-(void)setControversialContentConfirmed:(char)arg1 ;
-(void)setAdultContentConfirmed:(char)arg1 ;
-(int)uploadQuality;
-(void)setUploadQuality:(int)arg1 ;
-(char)onlyUploadOverWiFi;
-(void)setOnlyUploadOverWiFi:(char)arg1 ;
-(char)isForcedInnerTubeUploads;
-(void)setForcedInnerTubeUploads:(char)arg1 ;
-(char)isUploadDatabaseWiped;
-(void)setUploadDatabaseWiped:(char)arg1 ;
-(int)safeSearch;
-(void)setSafeSearch:(int)arg1 ;
-(void)setContentRegion:(NSString *)arg1 ;
-(int)serverEnvironment;
-(id)PPGHost;
-(void)setPPGHost:(id)arg1 ;
-(int)innerTubeVersion;
-(void)setInnerTubeVersion:(int)arg1 ;
-(void)setLogAdRequests:(char)arg1 ;
-(void)setAlwaysShowFirstSignIn:(char)arg1 ;
-(id)installationID;
-(char)isWelcomeDismissed;
-(void)setWelcomeDismissed:(char)arg1 ;
-(char)isOfflineConfirmRemoveDisabled;
-(void)setOfflineConfirmRemoveDisabled:(char)arg1 ;
-(void)setOpenLinksWithChrome:(char)arg1 ;
-(char)streamHDOnWiFiOnly;
-(void)setStreamHDOnWiFiOnly:(char)arg1 ;
-(char)shouldSendCrashReports;
-(void)setShouldSendCrashReports:(char)arg1 ;
-(char)watchHistoryPaused;
-(void)setWatchHistoryPaused:(char)arg1 ;
-(void)setSearchHistoryPaused:(char)arg1 ;
-(char)areHintsDisabled;
-(void)setHintsDisabled:(char)arg1 ;
-(char)hintsDateThrottleDisabled;
-(void)setHintsDateThrottleDisabled:(char)arg1 ;
-(NSDate *)promotedItemLastClosedTime;
-(void)setPromotedItemLastClosedTime:(NSDate *)arg1 ;
-(void)setDisableMDXDeviceDiscovery:(char)arg1 ;
-(void)setUseMDXDevServer:(char)arg1 ;
-(void)setEnableMDXFiji:(char)arg1 ;
-(void)setEnableMDXAutoplay:(char)arg1 ;
-(void)setEnableMDXMemento:(char)arg1 ;
-(void)setEnableCastSDKLogging:(char)arg1 ;
-(void)setWebPEnabled:(char)arg1 ;
-(void)setQuickActionsEnabled:(char)arg1 ;
-(void)setForceEnableInlinePlayback:(char)arg1 ;
-(void)setForceEnableInlineControls:(char)arg1 ;
-(void)setSuggestionsDroppingType:(unsigned)arg1 ;
-(void)setForceEnableTabloid:(char)arg1 ;
-(void)setNetworkTypeOverride:(int)arg1 ;
-(void)clearNetworkTypeOverride;
-(void)setEnableOfflinePlaylistAutoSync:(char)arg1 ;
-(void)setOfflinePlaylistSyncFast:(char)arg1 ;
-(id)offlinePlaylistSyncDate;
-(void)setOfflinePlaylistSyncDate:(id)arg1 ;
-(void)setCustomExperimentIDs:(NSArray *)arg1 ;
-(void)setForcedPromoID:(NSString *)arg1 ;
-(void)setForcedPromoIDRequests:(int)arg1 ;
-(void)setInnerTubez:(NSString *)arg1 ;
-(void)setVixUsername:(NSString *)arg1 ;
-(void)setVixSnapshot:(NSString *)arg1 ;
-(void)setVixServiceToOverride:(int)arg1 ;
-(void)setForcedPromoInterval:(id)arg1 ;
-(void)setExoPlayerEnabled:(char)arg1 ;
-(void)setBrowseDebug:(char)arg1 ;
-(void)setFPSStatusBarEnabled:(char)arg1 ;
-(void)setReachabilityDetectionStrategyType:(int)arg1 ;
-(NSString *)flexGenServerURL;
-(char)enablePivotBar;
-(void)setEnablePivotBar:(char)arg1 ;
-(void)setQoELogRecorderEnabled:(char)arg1 ;
-(void)setNerdStatsEnabled:(char)arg1 ;
-(char)hasPushNotificationDialogDecisionCancel;
-(void)savePushNotificationDialogDecisionCancel;
-(char)isExoPlayerEnabled;
-(char)forceEnableTabloid;
-(char)forceEnableInlinePlayback;
-(char)forceEnableInlineControls;
-(char)isQoELogRecorderEnabled;
-(unsigned)suggestionsDroppingType;
-(NSArray *)customExperimentIDs;
-(NSString *)forcedPromoID;
-(int)forcedPromoIDRequests;
-(id)internalGeoOverride;
-(void)setInternalGeoOverride:(id)arg1 ;
-(id)versionOverride;
-(void)setVersionOverride:(id)arg1 ;
-(void)setDoNotCount:(char)arg1 ;
-(char)alwaysShowFirstSignIn;
-(char)isFPSStatusBarEnabled;
-(void)setFlexGenServerURL:(NSString *)arg1 ;
-(char)isForceNavEndpointClick;
-(void)setForceNavEndpointClick:(char)arg1 ;
-(char)enableOfflinePlaylistAutoSync;
-(id)forcedPromoInterval;
-(void)setOSVersionOverride:(id)arg1 ;
-(char)shouldShowHintForKey:(id)arg1 minimumHintTimeInterval:(double)arg2 ;
-(void)didShowHintForKey:(id)arg1 ;
-(char)shouldShowHintForKey:(id)arg1 ;
-(long long)longlongForKey:(id)arg1 ;
-(void)setLonglong:(long long)arg1 forKey:(id)arg2 ;
-(void)didShowHintRenderer:(id)arg1 atDate:(id)arg2 ;
-(char)shouldShowHintRenderer:(id)arg1 atDate:(id)arg2 ;
-(char)shouldShowNotificationForKey:(id)arg1 ;
-(void)didShowNotificationForKey:(id)arg1 ;
-(char)shouldShowMusicBadgePostPurchaseHint;
-(void)didShowMusicBadgePostPurchaseHint;
-(char)shouldShowMusicBadgePrePurchaseHint;
-(void)didShowMusicBadgePrePurchaseHint;
-(id)appKeysProvider;
-(char)hasClearedOldBackgroundOnboardingHint;
-(void)setClearedOldBackgroundOnboardingHint:(char)arg1 ;
-(void)setOfflineBrowseResponse:(YTIBrowseResponse *)arg1 ;
-(void)setOfflineModeForcedBrowseResponse:(YTIBrowseResponse *)arg1 ;
-(YTIBrowseResponse *)offlineModeForcedBrowseResponse;
-(YTIBrowseResponse *)offlineBrowseResponse;
-(char)shouldShowTryOfflineHint;
-(void)didShowTryOfflineHint;
-(char)shouldShowHintRenderer:(id)arg1 ;
-(void)didShowHintRenderer:(id)arg1 ;
-(char)shouldShowChannelNotificationBellHint;
-(void)didShowChannelNotificationBellHint;
-(char)shouldShowOfflinedVideosAvailableHint;
-(void)didShowOfflinedVideosAvailableHint;
-(char)shouldShowInlineFullscreenMoreVideosSwipeHint;
-(void)didShowInlineFullscreenMoreVideosSwipeHint;
-(char)shouldShowInlineInceptionHint;
-(void)didShowInlineInceptionHint;
-(char)wasPushNotificationOSDialogShown;
-(char)hasPushNotificationDialogDecisionConfirm;
-(id)forceAdParameters;
-(id)forcedHomepageAdType;
-(id)forcedHomepageAdURL;
-(id)debugMastheadKeyword;
-(id)forcedPyvAdGroupID;
-(void)setForcedHomepageAdType:(id)arg1 ;
-(void)setForcedHomepageAdURL:(id)arg1 ;
-(void)setDebugMastheadKeyword:(id)arg1 ;
-(void)setForcedPyvAdGroupID:(id)arg1 ;
-(void)setForceAdParameters:(id)arg1 ;
-(void)setLastOfferParams:(id)arg1 ;
-(void)setLastProductID:(id)arg1 ;
-(void)setLastOfferSelectionDate:(id)arg1 ;
-(id)lastProductID;
-(id)lastOfferSelectionDate;
-(id)lastOfferParams;
-(char)hasShownUploadAccountHint;
-(void)setHasShownUploadAccountHint:(char)arg1 ;
-(int)defaultVideoPrivacy;
-(void)setDefaultVideoPrivacy:(int)arg1 ;
-(char)suppressUploadOverCellularPrompt;
-(void)setSuppressUploadOverCellularPrompt:(char)arg1 ;
-(void)setCachedUserImage:(UIImage *)arg1 ;
-(UIImage *)cachedUserImage;
-(void)setSerializedLastSelectedIdentity:(NSDictionary *)arg1 ;
-(NSDictionary *)serializedLastSelectedIdentity;
-(id)legacyLastSelectedIdentity;
-(void)setMDXInteractionHistoryTimestamp:(id)arg1 ;
-(void)setMDXAvailableSessionsDailyHistory:(id)arg1 ;
-(void)setMDXConnectionCountDailyHistory:(id)arg1 ;
-(id)MDXAvailableSessionsDailyHistory;
-(id)MDXConnectionCountDailyHistory;
-(id)MDXInteractionHistoryTimestamp;
-(void)setMDXPromotionHistoryTooltipTimestamp:(id)arg1 ;
-(void)setMDXPromotionHistoryTooltipOccurrences:(int)arg1 ;
-(void)setMDXPromotionHistorySnackbarTimestamp:(id)arg1 ;
-(void)setMDXPromotionHistorySnackbarOccurrences:(int)arg1 ;
-(void)setMDXPromotionHistoryClingTimestamp:(id)arg1 ;
-(void)setMDXPromotionHistoryClingOccurrences:(int)arg1 ;
-(id)MDXPromotionHistoryTooltipTimestamp;
-(id)MDXPromotionHistorySnackbarTimestamp;
-(id)MDXPromotionHistoryClingTimestamp;
-(int)MDXPromotionHistoryTooltipOccurrences;
-(int)MDXPromotionHistorySnackbarOccurrences;
-(int)MDXPromotionHistoryClingOccurrences;
-(void)savePushNotificationDialogDecisionConfirm;
-(void)saveDisableUnseenItemStaleWindow:(char)arg1 ;
-(void)savePushNotificationOSDialogShown;
-(char)disableUnseenItemStaleWindow;
-(void)savePushNotificationDialogDecision:(id)arg1 ;
-(id)pushNotificationDialogData;
-(char)hasPushNotificationDialogDecision;
-(id)offlineImageRepairDate;
-(void)setOfflineImageRepairDate:(id)arg1 ;
-(char)offlinePlaylistSyncFast;
-(id)offlineUserRemovalCheckDate;
-(void)setOfflineUserRemovalCheckDate:(id)arg1 ;
-(char)isDisableFrequencyCap;
-(char)doForceAdsWithDummyMidroll;
-(void)setForceAdsWithDummyMidroll:(char)arg1 ;
-(char)recurrenceThrottleDisabled;
-(void)setRecurrenceThrottleDisabled:(char)arg1 ;
-(char)shouldShowBackgroundNotification;
-(void)didShowBackgroundNotification;
-(id)lastPromoDisplayedTime;
-(void)setLastPromoDisplayedTime:(id)arg1 ;
-(void)setOfflineGuideItems:(id)arg1 ;
-(id)pushNotificationLastRequestBody;
-(id)pushNotificationLastRequestUserID;
-(void)setPushNotificationLastRequestBody:(id)arg1 ;
-(void)setPushNotificationLastRequestUserID:(id)arg1 ;
-(void)setOfflineSettingsItems:(id)arg1 ;
-(id)offlineGuideItems;
-(id)offlineSettingsItems;
-(id)uniqueIDForKey:(id)arg1 ;
-(id)languageOverride;
-(void)setLanguageOverride:(id)arg1 ;
-(char)logNetworkRequests;
-(void)setLogNetworkRequests:(char)arg1 ;
-(char)isUserSpecificKey:(id)arg1 ;
-(id)userSettingsDictionary;
-(void)setUserSettingsDictionary:(id)arg1 ;
-(void)notifyValueDidChangeForKey:(id)arg1 ;
-(id)keyForCurrentUserID;
-(void)deleteUserSettings;
-(void)deleteDefaultSettings;
-(void)setInteger:(int)arg1 forKey:(id)arg2 ;
-(id)objectForKey:(id)arg1 ;
-(void)addObserver:(id)arg1 ;
-(void)setObject:(id)arg1 forKey:(id)arg2 ;
-(char)boolForKey:(id)arg1 ;
-(id)stringForKey:(id)arg1 ;
-(void)setBool:(char)arg1 forKey:(id)arg2 ;
-(void)removeObserver:(id)arg1 ;
-(int)integerForKey:(id)arg1 ;
-(id)dictionaryForKey:(id)arg1 ;
@end

