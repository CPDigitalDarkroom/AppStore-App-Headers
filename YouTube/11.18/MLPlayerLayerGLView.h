/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:49:36 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/FFD4619E-59E7-49B9-AD90-0E28F5807C56/YouTube.app/YouTube
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <YouTube/YouTube-Structs.h>
#import <GLKit/GLKView.h>
#import <YouTube/YTSystemNotificationsObserver.h>
#import <YouTube/MLAVPlayerViewProtocol.h>

@protocol MLOpenGLShaderProtocol, MLAVPlayerViewDelegate;
@class YTSystemNotifications, EXOIdleTimer, EAGLContext, CADisplayLink, AVPlayerItemVideoOutput, AVPlayer, AVPlayerItem, NSObject, NSThread, NSRunLoop, MLVideo, NSString;

@interface MLPlayerLayerGLView : GLKView <YTSystemNotificationsObserver, MLAVPlayerViewProtocol> {

	YTSystemNotifications* _systemNotifications;
	EXOIdleTimer* _idleTimer;
	char _layoutPending;
	char _applicationPaused;
	char _startRenderThreadPending;
	CGRect _glViewPort;
	CGPoint _previousTranslation;
	float _displayScale;
	int _videoWidth;
	int _videoHeight;
	int _glClearCallsRemaining;
	EAGLContext* _context;
	CVBufferRef _lumaTexture;
	CVBufferRef _chromaTexture;
	CVOpenGLESTextureCacheRef _videoTextureCache;
	unsigned _program;
	unsigned _fragShader;
	unsigned _vertShader;
	int _uniformColorConvMatrix;
	CADisplayLink* _displayLink;
	AVPlayerItemVideoOutput* _videoOutput;
	AVPlayer* _currentPlayer;
	AVPlayerItem* _currentPlayerItem;
	int _shaderType;
	NSObject*<MLOpenGLShaderProtocol> _shader;
	NSThread* _renderThread;
	NSRunLoop* _renderThreadRunLoop;
	double _nextDisplayTime;
	MLVideo* _video;
	char _forceContentsScaleFactor;
	char _viewInitialized;
	id<MLAVPlayerViewDelegate> _delegate;
	CGRect _videoRect;

}

@property (assign,nonatomic) char viewInitialized;                                    //@synthesize viewInitialized=_viewInitialized - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) CGRect videoRect;                                      //@synthesize videoRect=_videoRect - In the implementation block
@property (assign,nonatomic,__weak) id<MLAVPlayerViewDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (assign,nonatomic) char forceContentsScaleFactor;                           //@synthesize forceContentsScaleFactor=_forceContentsScaleFactor - In the implementation block
+(char)needsGLRendering:(id)arg1 ;
+(int)getShader:(id)arg1 ;
-(void)appDidBecomeActive:(id)arg1 ;
-(void)appWillResignActive:(id)arg1 ;
-(char)handlePanBegan;
-(void)renderTexture;
-(void)handlePanChanged:(CGPoint)arg1 ;
-(char)forceContentsScaleFactor;
-(void)setForceContentsScaleFactor:(char)arg1 ;
-(char)respondsToPan;
-(void)handlePanEnded;
-(const float*)getColorConversionMatrix:(CVBufferRef)arg1 ;
-(id)initWithSystemNotifications:(id)arg1 idleTimer:(id)arg2 ;
-(void)cleanUpTextures;
-(void)selectShader:(int)arg1 ;
-(void)stopRenderThread;
-(void)startRenderThread;
-(void)renderThreadPauseDisplayLink:(id)arg1 ;
-(void)renderThreadSetLayoutPending;
-(void)setupBuffers;
-(char)loadShaders;
-(void)reportErrorFromRenderThread:(int)arg1 ;
-(void)renderThreadDisplayLinkCallback:(id)arg1 ;
-(void)renderThreadMain;
-(void)renderThreadUnscheduleDisplayLink;
-(void)renderThreadSetupView;
-(void)displayPixelBuffer:(CVBufferRef)arg1 ;
-(CVBufferRef)setupSourceTexture:(CVBufferRef)arg1 index:(int)arg2 format:(int)arg3 width:(int)arg4 height:(int)arg5 ;
-(void)setViewPort:(int)arg1 videoHeight:(int)arg2 ;
-(void)destroyShaders;
-(unsigned)setupShader:(const char*)arg1 type:(unsigned)arg2 ;
-(char)validateShader:(unsigned)arg1 ;
-(char)viewInitialized;
-(void)setViewInitialized:(char)arg1 ;
-(CGRect)videoRect;
-(void)playerItemDidChange;
-(void)setPlayer:(id)arg1 ;
-(void)drawRect:(CGRect)arg1 ;
-(void)setDelegate:(id<MLAVPlayerViewDelegate>)arg1 ;
-(void)dealloc;
-(void)layoutSubviews;
-(id<MLAVPlayerViewDelegate>)delegate;
-(void)prepareForReuse;
-(char)validateProgram:(unsigned)arg1 ;
-(void)reportError:(int)arg1 ;
-(void)setVideo:(id)arg1 ;
@end

