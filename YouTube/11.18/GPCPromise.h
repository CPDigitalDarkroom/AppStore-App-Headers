/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:49:33 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/FFD4619E-59E7-49B9-AD90-0E28F5807C56/YouTube.app/YouTube
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <YouTube/PSPublisher.h>
#import <YouTube/GPCAsyncRequest.h>
#import <YouTube/GPCDeferred.h>

@protocol OS_dispatch_semaphore;
@class NSError, NSObject, GPCQueue, NSString;

@interface GPCPromise : NSObject <PSPublisher, GPCAsyncRequest, GPCDeferred> {

	GPCPromise* parent_;
	id result_;
	NSError* error_;
	id progress_;
	/*^block*/id successBlock_;
	/*^block*/id failureBlock_;
	/*^block*/id progressBlock_;
	id lifetimeExtender_;
	NSObject*<OS_dispatch_semaphore> semaphore_;
	GPCQueue* queue_;
	char receivedProgress_;
	char hasResult_;
	char cancelled_;
	char cancelOnly_;
	/*^block*/id cancelBlock_;

}

@property (nonatomic,retain) GPCPromise * parent; 
@property (nonatomic,retain) id result; 
@property (nonatomic,retain) NSError * error; 
@property (nonatomic,retain) id progress; 
@property (nonatomic,copy) id successBlock; 
@property (nonatomic,copy) id failureBlock; 
@property (nonatomic,copy) id progressBlock; 
@property (assign,nonatomic) char hasResult; 
@property (assign,nonatomic) char cancelled; 
@property (nonatomic,readonly) GPCQueue * queue; 
@property (nonatomic,copy) id cancelBlock; 
@property (assign,nonatomic) char cancelOnly; 
@property (nonatomic,readonly) char isResolved; 
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)all:(id)arg1 ;
+(id)waitSyncWithTimeout:(double)arg1 block:(/*^block*/id)arg2 ;
+(id)waitSync:(/*^block*/id)arg1 ;
+(id)syncResultWithTimeout:(double)arg1 block:(/*^block*/id)arg2 ;
+(id)syncResult:(/*^block*/id)arg1 ;
+(id)completedPromiseWithResult:(id)arg1 ;
+(id)failedPromiseWithError:(id)arg1 ;
+(id)sequence:(id)arg1 initial:(id)arg2 ;
+(id)allIgnoreErrors:(id)arg1 ;
+(id)any:(id)arg1 ;
+(id)sequence:(id)arg1 ;
-(id)onSuccess:(/*^block*/id)arg1 onFailure:(/*^block*/id)arg2 ;
-(void)reject:(id)arg1 ;
-(id)onSuccess:(/*^block*/id)arg1 ;
-(id)successBlock;
-(id)onSuccess:(/*^block*/id)arg1 queue:(id)arg2 ;
-(id)onSuccess:(/*^block*/id)arg1 withProgress:(/*^block*/id)arg2 queue:(id)arg3 ;
-(void)onCancel:(/*^block*/id)arg1 queue:(id)arg2 ;
-(id)onSuccess:(/*^block*/id)arg1 onFailure:(/*^block*/id)arg2 withProgress:(/*^block*/id)arg3 queue:(id)arg4 ;
-(id)onSuccess:(/*^block*/id)arg1 onFailure:(/*^block*/id)arg2 onCancel:(/*^block*/id)arg3 withProgress:(/*^block*/id)arg4 queue:(id)arg5 ;
-(id)onFailure:(/*^block*/id)arg1 queue:(id)arg2 ;
-(id)onSuccess:(/*^block*/id)arg1 onFailure:(/*^block*/id)arg2 queue:(id)arg3 ;
-(void)setSuccessBlock:(id)arg1 ;
-(void)setCancelOnly:(char)arg1 ;
-(char)cancelOnly;
-(void)unsubscribeFromParentEvents;
-(void)resolve:(id)arg1 forParent:(id)arg2 ;
-(void)reject:(id)arg1 forParent:(id)arg2 ;
-(void)updateLifetime;
-(void)parentDidChange:(id)arg1 ;
-(void)setupParentSubscriptions:(id)arg1 ;
-(char)canProcessEventForParent:(id)arg1 ;
-(void)detachParent;
-(void)handleProgress:(id)arg1 ;
-(void)onCancel:(/*^block*/id)arg1 ;
-(id)onSuccess:(/*^block*/id)arg1 withProgress:(/*^block*/id)arg2 ;
-(id)onSuccess:(/*^block*/id)arg1 onFailure:(/*^block*/id)arg2 withProgress:(/*^block*/id)arg3 ;
-(id)onSuccess:(/*^block*/id)arg1 onFailure:(/*^block*/id)arg2 onCancel:(/*^block*/id)arg3 withProgress:(/*^block*/id)arg4 ;
-(id)onFailure:(/*^block*/id)arg1 onCancel:(/*^block*/id)arg2 ;
-(id)onFailure:(/*^block*/id)arg1 ;
-(void)linkToParent:(id)arg1 ;
-(void)withLock:(/*^block*/id)arg1 ;
-(void)resolve:(id)arg1 ;
-(char)isResolved;
-(NSError *)error;
-(GPCQueue *)queue;
-(void)cancel;
-(id)init;
-(id)initWithQueue:(id)arg1 ;
-(void)setProgress:(id)arg1 ;
-(char)cancelled;
-(void)setCancelled:(char)arg1 ;
-(id)progress;
-(id)result;
-(id)cancelBlock;
-(void)cancel:(char)arg1 ;
-(GPCPromise *)parent;
-(void)setParent:(GPCPromise *)arg1 ;
-(void)setError:(NSError *)arg1 ;
-(id)progressBlock;
-(void)setProgressBlock:(id)arg1 ;
-(void)setCancelBlock:(id)arg1 ;
-(void)notifyProgress:(id)arg1 ;
-(void)setResult:(id)arg1 ;
-(void)setHasResult:(char)arg1 ;
-(char)hasResult;
-(id)failureBlock;
-(void)setFailureBlock:(id)arg1 ;
@end

