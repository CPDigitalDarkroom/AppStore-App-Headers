/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:49:26 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/FFD4619E-59E7-49B9-AD90-0E28F5807C56/YouTube.app/YouTube
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <YouTube/YTUserSpecificDataStore.h>
#import <YouTube/YTRetryableStore.h>

@protocol YTRetryTaskConfig;
@class YTOfflineAdParser, GIMMe, NSString;

@interface YTOfflineVideoStore : YTUserSpecificDataStore <YTRetryableStore> {

	YTOfflineAdParser* _offlineAdParser;
	id<YTRetryTaskConfig> _retryTaskConfig;
	GIMMe* _gimme;
	unsigned _pendingDownloadCount;

}

@property (assign,nonatomic,__weak) GIMMe * gimme;                         //@synthesize gimme=_gimme - In the implementation block
@property (nonatomic,readonly) unsigned pendingDownloadCount;              //@synthesize pendingDownloadCount=_pendingDownloadCount - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)offlineVideoEntityWithID:(id)arg1 currentUserID:(id)arg2 context:(id)arg3 error:(id*)arg4 ;
+(id)insertOfflineVideoEntityWithID:(id)arg1 currentUserID:(id)arg2 context:(id)arg3 ;
+(id)fetchRequestForPredicate:(id)arg1 context:(id)arg2 ;
+(id)predicateForUserID:(id)arg1 ;
+(id)sortDescriptorForDateAdded;
+(id)fetchRequestForID:(id)arg1 currentUserID:(id)arg2 inContext:(id)arg3 ;
+(id)predicateForDeletableVideosWithUserID:(id)arg1 ;
+(id)fetchRequestForUserID:(id)arg1 inContext:(id)arg2 ;
+(char)videoEligibleForRefresh:(id)arg1 ;
+(id)offlineVideoEntitiesWithOfflineToken:(id)arg1 currentUserID:(id)arg2 context:(id)arg3 error:(id*)arg4 ;
+(id)fetchRequestForOfflineToken:(id)arg1 currentUserID:(id)arg2 inContext:(id)arg3 ;
+(id)currentDate;
-(GIMMe *)gimme;
-(void)setGimme:(GIMMe *)arg1 ;
-(void)fetchVideoWithID:(id)arg1 responseBlock:(/*^block*/id)arg2 errorBlock:(/*^block*/id)arg3 ;
-(void)deleteVideoWithID:(id)arg1 pinTypes:(int)arg2 responseBlock:(/*^block*/id)arg3 errorBlock:(/*^block*/id)arg4 ;
-(void)fetchHasOfflineVideoOnDeviceWithResponseBlock:(/*^block*/id)arg1 errorBlock:(/*^block*/id)arg2 ;
-(void)deleteAllWithResponseBlock:(/*^block*/id)arg1 errorBlock:(/*^block*/id)arg2 ;
-(void)setLastPlaybackDateForID:(id)arg1 playbackDate:(id)arg2 responseBlock:(/*^block*/id)arg3 errorBlock:(/*^block*/id)arg4 ;
-(void)fetchVideoNeedingAdPlaylistWithResponseBlock:(/*^block*/id)arg1 errorBlock:(/*^block*/id)arg2 ;
-(void)setVideoStatusForID:(id)arg1 videoStatus:(int)arg2 playerResponse:(id)arg3 responseBlock:(/*^block*/id)arg4 errorBlock:(/*^block*/id)arg5 ;
-(void)setPlayerResponseForVideoID:(id)arg1 playerResponse:(id)arg2 responseBlock:(/*^block*/id)arg3 errorBlock:(/*^block*/id)arg4 ;
-(void)swapAdPlaylistWithVideoID:(id)arg1 responseBlock:(/*^block*/id)arg2 errorBlock:(/*^block*/id)arg3 ;
-(void)deleteVideosForUserID:(id)arg1 responseBlock:(/*^block*/id)arg2 errorBlock:(/*^block*/id)arg3 ;
-(void)deleteExplicitPinnedVideosWithResponseBlock:(/*^block*/id)arg1 errorBlock:(/*^block*/id)arg2 ;
-(void)redownloadAllWithResponseBlock:(/*^block*/id)arg1 errorBlock:(/*^block*/id)arg2 ;
-(void)fetchPlaylistIDsWithVideoID:(id)arg1 responseBlock:(/*^block*/id)arg2 errorBlock:(/*^block*/id)arg3 ;
-(void)fetchVideoListIDsWithVideoID:(id)arg1 responseBlock:(/*^block*/id)arg2 errorBlock:(/*^block*/id)arg3 ;
-(void)fetchVideosWithOffset:(unsigned)arg1 fetchLimit:(unsigned)arg2 statuses:(id)arg3 pinTypes:(int)arg4 onlyRetryable:(char)arg5 responseBlock:(/*^block*/id)arg6 errorBlock:(/*^block*/id)arg7 ;
-(void)fetchVideoWithOfflineStateActions:(id)arg1 responseBlock:(/*^block*/id)arg2 errorBlock:(/*^block*/id)arg3 ;
-(void)fetchDeletableVideoIDWithResponseBlock:(/*^block*/id)arg1 errorBlock:(/*^block*/id)arg2 ;
-(void)fetchVideoIDNeedingAdPlaylistSwapWithResponseBlock:(/*^block*/id)arg1 errorBlock:(/*^block*/id)arg2 ;
-(void)fetchOfflineRefreshRequestWithResponseBlock:(/*^block*/id)arg1 errorBlock:(/*^block*/id)arg2 ;
-(void)fetchOfflineVideoNeedingInnerTubeMigrationWithResponseBlock:(/*^block*/id)arg1 errorBlock:(/*^block*/id)arg2 ;
-(void)fetchAdPlaybackCountWithAdVideoID:(id)arg1 responseBlock:(/*^block*/id)arg2 errorBlock:(/*^block*/id)arg3 ;
-(void)migrateOfflineVideoEntityForVideoID:(id)arg1 responseBlock:(/*^block*/id)arg2 errorBlock:(/*^block*/id)arg3 ;
-(void)getLatestOfflineActivityDateWithResponseBlock:(/*^block*/id)arg1 errorBlock:(/*^block*/id)arg2 ;
-(void)searchVideosWithString:(id)arg1 searchTypes:(int)arg2 responseBlock:(/*^block*/id)arg3 errorBlock:(/*^block*/id)arg4 ;
-(void)setOfflineState:(id)arg1 offlineStateDate:(id)arg2 forVideoIDs:(id)arg3 responseBlock:(/*^block*/id)arg4 errorBlock:(/*^block*/id)arg5 ;
-(void)setStatusForID:(id)arg1 status:(int)arg2 responseBlock:(/*^block*/id)arg3 errorBlock:(/*^block*/id)arg4 ;
-(void)resetRetryableVideosWithResponseBlock:(/*^block*/id)arg1 errorBlock:(/*^block*/id)arg2 ;
-(void)setChannelThumbnailURLForVideoID:(id)arg1 channelThumbnailURL:(id)arg2 responseBlock:(/*^block*/id)arg3 errorBlock:(/*^block*/id)arg4 ;
-(void)saveOfflineVideoData:(id)arg1 playerResponse:(id)arg2 pinTypes:(int)arg3 maximumDownloadQuality:(int)arg4 clickTrackingParams:(id)arg5 responseBlock:(/*^block*/id)arg6 errorBlock:(/*^block*/id)arg7 ;
-(void)resetRetryStateForTaskWithID:(id)arg1 responseBlock:(/*^block*/id)arg2 errorBlock:(/*^block*/id)arg3 ;
-(void)getAllUserIDsWithResponseBlock:(/*^block*/id)arg1 errorBlock:(/*^block*/id)arg2 ;
-(void)retryTaskWithID:(id)arg1 maxRetryDate:(id)arg2 retryConfig:(id)arg3 responseBlock:(/*^block*/id)arg4 errorBlock:(/*^block*/id)arg5 ;
-(char)populateTracklistCaptionsForEntity:(id)arg1 videoID:(id)arg2 playerResponse:(id)arg3 context:(id)arg4 error:(id*)arg5 ;
-(void)fetchVideosWithOffset:(unsigned)arg1 fetchLimit:(unsigned)arg2 statuses:(id)arg3 pinTypes:(int)arg4 forCurrentUser:(char)arg5 onlyRetryable:(char)arg6 responseBlock:(/*^block*/id)arg7 errorBlock:(/*^block*/id)arg8 ;
-(id)offlinedVideoAdBreaksFromVideoEntity:(id)arg1 error:(id*)arg2 ;
-(unsigned)pendingDownloadCount;
-(id)init;
@end

