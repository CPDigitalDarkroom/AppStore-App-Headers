/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:49:29 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/FFD4619E-59E7-49B9-AD90-0E28F5807C56/YouTube.app/YouTube
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <UIKit/UIViewController.h>
#import <YouTube/YTPlaybackCoordinatorObserver.h>
#import <YouTube/YTPlaybackController.h>

@protocol YTPlaybackCoordinator, YTPlaybackController, YTPlayerOverlayFactory, YTPlaybackControllerAutoplayDelegate, YTPlaybackControllerEventsDelegate, YTResponder, YTPlaybackControllerUIDelegate;
@class YTPlayerView, NSString, YTAudioTrackSwitchController, YTVideoQualitySwitchController;

@interface YTPlayerViewController : UIViewController <YTPlaybackCoordinatorObserver, YTPlaybackController> {

	YTPlayerView* _playerView;
	id<YTPlaybackCoordinator> _playbackCoordinator;
	id<YTPlaybackController> _playbackController;
	id<YTPlayerOverlayFactory> _overlayFactory;
	char _isVisible;
	id<YTPlaybackControllerAutoplayDelegate> _autoplayDelegate;
	id<YTPlaybackControllerEventsDelegate> _eventsDelegate;
	id<YTResponder> _parentResponder;
	id<YTPlaybackControllerUIDelegate> _UIDelegate;

}

@property (nonatomic,readonly) YTPlayerView * playerView; 
@property (nonatomic,readonly) id<YTPlaybackController> internalPlaybackController; 
@property (assign,nonatomic,__weak) id<YTResponder> parentResponder;                                                  //@synthesize parentResponder=_parentResponder - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) YTAudioTrackSwitchController * audioTrackController; 
@property (nonatomic,readonly) YTVideoQualitySwitchController * videoQualityController; 
@property (assign,nonatomic,__weak) id<YTPlaybackControllerAutoplayDelegate> autoplayDelegate;                        //@synthesize autoplayDelegate=_autoplayDelegate - In the implementation block
@property (assign,nonatomic,__weak) id<YTPlaybackControllerEventsDelegate> eventsDelegate;                            //@synthesize eventsDelegate=_eventsDelegate - In the implementation block
@property (assign,nonatomic,__weak) id<YTPlaybackControllerUIDelegate> UIDelegate;                                    //@synthesize UIDelegate=_UIDelegate - In the implementation block
@property (nonatomic,readonly) int playerState; 
@property (nonatomic,readonly) NSString * videoID; 
@property (getter=isCurrentVideoVertical,nonatomic,readonly) char currentVideoVertical; 
@property (nonatomic,readonly) int state; 
@property (nonatomic,readonly) char isPlayingAd; 
@property (nonatomic,readonly) char isPlayingAdSurvey; 
@property (nonatomic,readonly) char isPlayingAdIntro; 
@property (assign,nonatomic) char playlistControlsHidden; 
@property (assign,nonatomic) char hasPreviousVideo; 
@property (assign,nonatomic) char hasNextVideo; 
@property (assign,getter=isTransitioningPlayerViewLayout,nonatomic) char transitioningPlayerViewLayout; 
@property (nonatomic,readonly) UIViewController*<YTVideoPlayerOverlayProtocol> activeVideoPlayerOverlay; 
-(void)handleRemoteControlEvent:(int)arg1 ;
-(id<YTResponder>)parentResponder;
-(char)hasNextVideo;
-(char)hasPreviousVideo;
-(id)playerResponse;
-(void)setAutoplayDelegate:(id<YTPlaybackControllerAutoplayDelegate>)arg1 ;
-(id<YTPlaybackControllerAutoplayDelegate>)autoplayDelegate;
-(void)replay;
-(void)setWatchNextResponse:(id)arg1 ;
-(void)setAutonavController:(id)arg1 ;
-(char)arePlayerControlsHidden;
-(void)setPlaylistControlsHidden:(char)arg1 ;
-(void)setHasPreviousVideo:(char)arg1 ;
-(void)setHasNextVideo:(char)arg1 ;
-(void)setInlinePlaybackLayout:(int)arg1 ;
-(void)setExpansionCoefficient:(float)arg1 ;
-(void)setPlayerViewLayout:(int)arg1 ;
-(int)playerViewLayout;
-(void)setEventsDelegate:(id<YTPlaybackControllerEventsDelegate>)arg1 ;
-(void)loadWithPlayerTransition:(id)arg1 startPlayback:(char)arg2 ;
-(id)initWithPlayerServices:(id)arg1 parentResponder:(id)arg2 overlayFactory:(id)arg3 ;
-(char)isCurrentVideoVertical;
-(NSString *)videoID;
-(id)contentPlayerMacroState;
-(void)setParentResponder:(id<YTResponder>)arg1 ;
-(void)didPressPlay;
-(void)didPressPause;
-(id)playbackDebugData;
-(void)didPressCompanionAd;
-(void)setTransitioningPlayerViewLayout:(char)arg1 ;
-(id)currentVideoCPN;
-(double)contentVideoMediaTime;
-(double)currentVideoMediaTime;
-(char)shouldAutoplayForFailedPlayback;
-(char)consecutiveFailedPlaybacksBelowAcceptanceThreshold;
-(void)autoplayForUnplayablePlayerResponseDidFail;
-(char)shouldAutoplayForFinishedVideo;
-(void)prepareToLoadWithPlayerTransition:(id)arg1 ;
-(void)switchToInlinePlayback:(char)arg1 ;
-(void)resetToLoading;
-(char)isInlinePlaybackActive;
-(void)suspendPlayback;
-(void)resumePlayback;
-(char)isPlayingAd;
-(id)currentAd;
-(YTAudioTrackSwitchController *)audioTrackController;
-(YTVideoQualitySwitchController *)videoQualityController;
-(id)lastKnownAdPlayerMacroState;
-(void)willLoseFocus;
-(void)didGainFocus;
-(id)restorableState;
-(void)restoreToState:(id)arg1 startPlayback:(char)arg2 ;
-(id)contentVideoState;
-(void)setUserAudioOnlyModeActive:(char)arg1 ;
-(id<YTPlaybackControllerEventsDelegate>)eventsDelegate;
-(char)isPlayingAdSurvey;
-(char)isPlayingAdIntro;
-(char)playlistControlsHidden;
-(char)isTransitioningPlayerViewLayout;
-(UIViewController*<YTVideoPlayerOverlayProtocol>)activeVideoPlayerOverlay;
-(void)playbackRouteDidChange;
-(id)playerSnapshotView;
-(id<YTPlaybackController>)internalPlaybackController;
-(YTPlayerView *)playerView;
-(void)failWithError:(id)arg1 ;
-(void)setVolume:(float)arg1 ;
-(int)state;
-(void)reset;
-(void)loadView;
-(void)viewDidLoad;
-(void)viewDidAppear:(char)arg1 ;
-(void)viewWillDisappear:(char)arg1 ;
-(void)setUIDelegate:(id<YTPlaybackControllerUIDelegate>)arg1 ;
-(int)playerState;
-(id<YTPlaybackControllerUIDelegate>)UIDelegate;
@end

