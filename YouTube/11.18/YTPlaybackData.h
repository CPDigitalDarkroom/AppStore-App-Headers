/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:49:29 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/FFD4619E-59E7-49B9-AD90-0E28F5807C56/YouTube.app/YouTube
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@class MLVideo, YTPlayerResponse, YTInnerTubeResponseCacheContext, YTCPN, YTExpiredPlaybackData, NSString;

@interface YTPlaybackData : NSObject {

	MLVideo* _video;
	YTPlayerResponse* _playerResponse;
	YTInnerTubeResponseCacheContext* _cacheContext;
	YTCPN* _CPN;
	YTExpiredPlaybackData* _expiredPlaybackData;

}

@property (setter=replacePlayerResponse:,nonatomic,retain) YTPlayerResponse * playerResponse;              //@synthesize playerResponse=_playerResponse - In the implementation block
@property (nonatomic,readonly) YTInnerTubeResponseCacheContext * cacheContext;                             //@synthesize cacheContext=_cacheContext - In the implementation block
@property (nonatomic,readonly) YTCPN * CPN;                                                                //@synthesize CPN=_CPN - In the implementation block
@property (nonatomic,readonly) YTExpiredPlaybackData * expiredPlaybackData;                                //@synthesize expiredPlaybackData=_expiredPlaybackData - In the implementation block
@property (nonatomic,readonly) MLVideo * video;                                                            //@synthesize video=_video - In the implementation block
@property (nonatomic,readonly) NSString * videoID; 
+(id)playbackDataWithAd:(id)arg1 ;
+(id)playbackDataWithPlayerResponse:(id)arg1 cacheContext:(id)arg2 ;
+(id)playbackDataWithPlayerResponse:(id)arg1 cacheContext:(id)arg2 expiredPlaybackData:(id)arg3 ;
-(YTPlayerResponse *)playerResponse;
-(NSString *)videoID;
-(YTInnerTubeResponseCacheContext *)cacheContext;
-(YTCPN *)CPN;
-(void)replacePlayerResponse:(id)arg1 ;
-(char)isSurvey;
-(id)initWithPlayerResponse:(id)arg1 cacheContext:(id)arg2 expiredPlaybackData:(id)arg3 video:(id)arg4 ;
-(char)isYouTubeHostedVideo;
-(char)isPlayableInBackground;
-(char)needsCPNService;
-(char)wantsVideoPlayer;
-(YTExpiredPlaybackData *)expiredPlaybackData;
-(MLVideo *)video;
-(char)isExpired;
@end

