/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:49:26 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/FFD4619E-59E7-49B9-AD90-0E28F5807C56/YouTube.app/YouTube
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <YouTube/YTBaseCoreDataStore.h>
#import <YouTube/YTRetryableStore.h>

@class NSString, GIMMe;

@interface YTOfflineImageStore : YTBaseCoreDataStore <YTRetryableStore> {

	NSString* _subDirectory;
	GIMMe* _gimme;
	unsigned _searchPathDirectory;

}

@property (assign,nonatomic,__weak) GIMMe * gimme;                        //@synthesize gimme=_gimme - In the implementation block
@property (nonatomic,readonly) unsigned searchPathDirectory;              //@synthesize searchPathDirectory=_searchPathDirectory - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)offlineThumbnailURLFromThumbnailDetails:(id)arg1 ;
+(id)fetchRequestForPredicate:(id)arg1 context:(id)arg2 ;
+(id)fetchImageEntityWithURL:(id)arg1 context:(id)arg2 error:(id*)arg3 ;
+(id)generateNewFilename;
+(id)predicateForDeletableImages;
+(id)offlineThumbnailURLFromThumbnailURLs:(id)arg1 ;
+(id)offlineImageEntityWithURL:(id)arg1 context:(id)arg2 error:(id*)arg3 ;
-(GIMMe *)gimme;
-(void)setGimme:(GIMMe *)arg1 ;
-(void)fetchPinnedURL:(id)arg1 responseBlock:(/*^block*/id)arg2 errorBlock:(/*^block*/id)arg3 ;
-(void)savePinnedURL:(id)arg1 responseBlock:(/*^block*/id)arg2 errorBlock:(/*^block*/id)arg3 ;
-(void)unpinURL:(id)arg1 responseBlock:(/*^block*/id)arg2 errorBlock:(/*^block*/id)arg3 ;
-(id)initWithSearchPathDirectory:(unsigned)arg1 subDirectory:(id)arg2 ;
-(unsigned)searchPathDirectory;
-(void)saveImage:(id)arg1 withURL:(id)arg2 responseBlock:(/*^block*/id)arg3 errorBlock:(/*^block*/id)arg4 ;
-(void)fetchURLNeedingImageWithResponseBlock:(/*^block*/id)arg1 errorBlock:(/*^block*/id)arg2 ;
-(void)fetchDeletableImageWithResponseBlock:(/*^block*/id)arg1 errorBlock:(/*^block*/id)arg2 ;
-(void)deleteImageForURL:(id)arg1 responseBlock:(/*^block*/id)arg2 errorBlock:(/*^block*/id)arg3 ;
-(id)localURLsFromFilenames:(id)arg1 ;
-(id)localURLFromFilename:(id)arg1 ;
-(void)repairMissingImagesWithResponseBlock:(/*^block*/id)arg1 errorBlock:(/*^block*/id)arg2 ;
-(void)resetRetryStateForTaskWithID:(id)arg1 responseBlock:(/*^block*/id)arg2 errorBlock:(/*^block*/id)arg3 ;
-(id)fullPathForFilename:(id)arg1 ;
-(char)excludeFromBackupByFullPath:(id)arg1 ;
-(char)filenameExists:(id)arg1 ;
-(void)retryTaskWithID:(id)arg1 maxRetryDate:(id)arg2 retryConfig:(id)arg3 responseBlock:(/*^block*/id)arg4 errorBlock:(/*^block*/id)arg5 ;
-(id)imageDirectoryPath;
@end

