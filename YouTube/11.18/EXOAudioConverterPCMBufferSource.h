/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:50:06 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/FFD4619E-59E7-49B9-AD90-0E28F5807C56/YouTube.app/YouTube
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <YouTube/YouTube-Structs.h>
#import <YouTube/EXOBaseComponent.h>
#import <YouTube/EXOAudioPCMBufferSource.h>

@protocol EXOSampleBufferSource;
@class AVAudioFormat, NSError, NSMutableArray, EXOSampleBuffer, NSString, EXOFormat;

@interface EXOAudioConverterPCMBufferSource : EXOBaseComponent <EXOAudioPCMBufferSource> {

	id<EXOSampleBufferSource> _upstream;
	NSError* _converterCallbackError;
	OpaqueAudioConverterRef _audioConverter;
	opaqueCMFormatDescriptionRef _formatDescription;
	NSMutableArray* _freeBuffers;
	vector<AudioStreamPacketDescription, std::__1::allocator<AudioStreamPacketDescription> >* _packetDescriptions;
	SCD_Struct_YT44 _presentationTime;
	long long _samplesDecodedSinceDiscontinuity;
	int _readStatus;
	EXOSampleBuffer* _sampleBuffer;
	EXOSampleBuffer* _incompatibleFormatSampleBuffer;
	char _prepared;
	AVAudioFormat* _audioFormat;
	unsigned _outputBufferFrameCapacity;

}

@property (assign,nonatomic) unsigned outputBufferFrameCapacity;              //@synthesize outputBufferFrameCapacity=_outputBufferFrameCapacity - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) SCD_Struct_YT44 duration; 
@property (nonatomic,readonly) SCD_Struct_YT44 bufferedTime; 
@property (getter=isPrepared,nonatomic,readonly) char prepared;               //@synthesize prepared=_prepared - In the implementation block
@property (nonatomic,readonly) EXOFormat * format; 
@property (nonatomic,readonly) AVAudioFormat * audioFormat;                   //@synthesize audioFormat=_audioFormat - In the implementation block
-(id)initWithContext:(id)arg1 sampleBufferSource:(id)arg2 ;
-(SCD_Struct_YT44)bufferedTime;
-(void)setOutputBufferFrameCapacity:(unsigned)arg1 ;
-(char)prepareAndReturnError:(id*)arg1 ;
-(int)readNextWithOptions:(SCD_Struct_EX193)arg1 sampleBuffer:(id*)arg2 error:(id*)arg3 ;
-(void)doneWithBuffer:(id)arg1 ;
-(int)readNextPCMBuffer:(id*)arg1 error:(id*)arg2 ;
-(void)disposeAudioConverter;
-(char)recreateAudioConverterAfterFormatChangeAndReturnError:(id*)arg1 ;
-(id)getAudioPCMBuffer;
-(char)setupAudioConverterWithFormatDescription:(opaqueCMFormatDescriptionRef)arg1 andReturnError:(id*)arg2 ;
-(void)updateStateForDiscontinuity;
-(long)audioConverterCallbackWithIoDataPacketCount:(unsigned*)arg1 ioData:(AudioBufferList*)arg2 outDataPacketDescription:(AudioStreamPacketDescription*)arg3 ;
-(unsigned)outputBufferFrameCapacity;
-(void)setFormatDescription:(opaqueCMFormatDescriptionRef)arg1 ;
-(void)seekToTime:(SCD_Struct_YT44)arg1 ;
-(EXOFormat *)format;
-(void)dealloc;
-(SCD_Struct_YT44)duration;
-(void)suspend;
-(char)isPrepared;
-(AVAudioFormat *)audioFormat;
@end

