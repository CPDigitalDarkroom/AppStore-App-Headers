/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:50:02 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/FFD4619E-59E7-49B9-AD90-0E28F5807C56/YouTube.app/YouTube
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@class NSMutableDictionary, NSDateFormatter, SSOConfiguration, SSOProfileSource, SSOServiceExternalAuthState;

@interface SSOService : NSObject {

	NSMutableDictionary* _identities;
	NSDateFormatter* _dateFormatter;
	char _isSigningInWithController;
	NSMutableDictionary* _authorizerCache;
	char _areIdentitiesStale;
	SSOConfiguration* _configuration;
	SSOProfileSource* _profileSource;
	SSOServiceExternalAuthState* _externalAuthState;

}

@property (nonatomic,retain) SSOConfiguration * configuration;                             //@synthesize configuration=_configuration - In the implementation block
@property (nonatomic,readonly) SSOProfileSource * profileSource;                           //@synthesize profileSource=_profileSource - In the implementation block
@property (assign,nonatomic) char areIdentitiesStale;                                      //@synthesize areIdentitiesStale=_areIdentitiesStale - In the implementation block
@property (nonatomic,retain) SSOServiceExternalAuthState * externalAuthState;              //@synthesize externalAuthState=_externalAuthState - In the implementation block
+(id)fetcherWithRequest:(id)arg1 configuration:(id)arg2 ;
+(void)setFetcherToCallBackOnMainQueue:(id)arg1 ;
+(id)errorForCancelWithDismissal:(char)arg1 ;
+(id)profileDictionaryFromIDToken:(id)arg1 ;
+(char)isSSOFetcher:(id)arg1 ;
+(char)isSignInCancelledError:(id)arg1 ;
+(id)deviceIdentifier;
-(char)isValidIdentity:(id)arg1 ;
-(id)authorizationForIdentity:(id)arg1 scopes:(id)arg2 error:(id*)arg3 ;
-(void)accessTokenRefreshFailed:(id)arg1 ;
-(SSOProfileSource *)profileSource;
-(id)recentlySelectedIdentity;
-(id)forgetIdentity:(id)arg1 callback:(/*^block*/id)arg2 ;
-(void)requestTokenAuthURLForIdentity:(id)arg1 targetURL:(id)arg2 service:(id)arg3 source:(id)arg4 callback:(/*^block*/id)arg5 ;
-(void)requestAuthorizationCodeWithIdentity:(id)arg1 scopes:(id)arg2 audience:(id)arg3 verifier:(id)arg4 extraParameters:(id)arg5 callback:(/*^block*/id)arg6 ;
-(void)requestAuthorizationCodeWithIdentity:(id)arg1 scopes:(id)arg2 clientID:(id)arg3 applicationID:(id)arg4 extraParameters:(id)arg5 callback:(/*^block*/id)arg6 ;
-(void)accessTokenRefreshed:(id)arg1 ;
-(void)identityListDidChange:(id)arg1 ;
-(id)identitiesWithError:(id*)arg1 ;
-(id)identitiesSortedBySelectionDate;
-(id)lastUsedDateForIdentity:(id)arg1 ;
-(void)signInWithUserEmail:(id)arg1 UIDelegate:(id)arg2 callback:(/*^block*/id)arg3 ;
-(void)removeCachedAuthorizersForIdentity:(id)arg1 ;
-(void)reauthenticateUser:(id)arg1 UIDelegate:(id)arg2 callback:(/*^block*/id)arg3 ;
-(char)writeAndAuthorizeIdentity:(id)arg1 outputIdentity:(id*)arg2 error:(id*)arg3 ;
-(id)errorFromAuthAdvice:(id)arg1 ;
-(void)setExternalAuthState:(SSOServiceExternalAuthState *)arg1 ;
-(char)handleExternalAuthOpenURL:(id)arg1 ;
-(SSOServiceExternalAuthState *)externalAuthState;
-(void)continueAuthenticationForURL:(id)arg1 externalAuthState:(id)arg2 ;
-(char)isValidUserID:(id)arg1 ;
-(void)postIdentityListChangedNotificationWithUserInfo:(id)arg1 ;
-(void)setAreIdentitiesStale:(char)arg1 ;
-(char)areIdentitiesStale;
-(id)identityForHashedUserID:(id)arg1 ;
-(id)identitiesSortedForDisplay;
-(void)signInWithUIDelegate:(id)arg1 callback:(/*^block*/id)arg2 ;
-(void)signInIdentity:(id)arg1 callback:(/*^block*/id)arg2 ;
-(void)reauthenticateIdentity:(id)arg1 UIDelegate:(id)arg2 callback:(/*^block*/id)arg3 ;
-(char)application:(id)arg1 didFinishLaunchingWithOptions:(id)arg2 callback:(/*^block*/id)arg3 ;
-(char)finishExternalSignInWithError:(id)arg1 ;
-(void)clearFileCache;
-(void)requestAuthenticationWithIdentity:(id)arg1 scopes:(id)arg2 callback:(/*^block*/id)arg3 ;
-(void)requestServiceTokenWithIdentity:(id)arg1 service:(id)arg2 callback:(/*^block*/id)arg3 ;
-(void)requestAccessTokenWithIdentity:(id)arg1 scopes:(id)arg2 callback:(/*^block*/id)arg3 ;
-(void)markIdentityAsSelected:(id)arg1 ;
-(void)markIdentityAsUnselected:(id)arg1 ;
-(id)appDictionary;
-(void)dealloc;
-(id)init;
-(char)application:(id)arg1 openURL:(id)arg2 sourceApplication:(id)arg3 annotation:(id)arg4 ;
-(char)application:(id)arg1 openURL:(id)arg2 options:(id)arg3 ;
-(void)applicationWillEnterForeground:(id)arg1 ;
-(void)setConfiguration:(SSOConfiguration *)arg1 ;
-(SSOConfiguration *)configuration;
-(id)initWithConfiguration:(id)arg1 ;
-(id)identities;
@end

