/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:49:26 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/FFD4619E-59E7-49B9-AD90-0E28F5807C56/YouTube.app/YouTube
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <YouTube/YTInlinePlaybackCellControllerResponderProvider.h>
#import <YouTube/YTGraftingViewController.h>
#import <YouTube/YTMetadataViewResponderProvider.h>
#import <YouTube/YTPlaybackControllerAutoplayDelegate.h>
#import <YouTube/YTPlaybackControllerEventsDelegate.h>
#import <YouTube/YTSystemNotificationsObserver.h>
#import <YouTube/YTSuggestionsDroppingDelegate.h>
#import <YouTube/YTPlaybackControllerUIDelegate.h>
#import <YouTube/YTActiveVideoReportingRendererProvider.h>
#import <YouTube/YTInlinePlaybackContainerControllerProtocol.h>
#import <YouTube/YTInlinePlaybackLayoutProtocol.h>
#import <YouTube/YTInlinePlaybackSnapshotProvider.h>
#import <YouTube/YTPlayerMDXDelegate.h>
#import <YouTube/YTResponder.h>

@protocol YTInlinePlaybackContainer, YTInlinePlaybackContainerDelegate, YTInlinePlaybackHintController, YTResponder;
@class UIView, NSIndexPath, NSMutableDictionary, YTINavigationEndpoint, YTCache, YTExperimentalSuggestionsDroppingController, YTNavigationEndpointResponderEvent, YTPlayerViewController, NSString;

@interface YTVideoPreviewController : NSObject <YTInlinePlaybackCellControllerResponderProvider, YTGraftingViewController, YTMetadataViewResponderProvider, YTPlaybackControllerAutoplayDelegate, YTPlaybackControllerEventsDelegate, YTSystemNotificationsObserver, YTSuggestionsDroppingDelegate, YTPlaybackControllerUIDelegate, YTActiveVideoReportingRendererProvider, YTInlinePlaybackContainerControllerProtocol, YTInlinePlaybackLayoutProtocol, YTInlinePlaybackSnapshotProvider, YTPlayerMDXDelegate, YTResponder> {

	UIView*<YTInlinePlaybackContainer> _activeInlinePlaybackContainer;
	NSIndexPath* _activeInlinePlaybackContainerIndexPath;
	NSMutableDictionary* _videoIDToPlayerState;
	id<YTInlinePlaybackContainerDelegate> _inlinePlaybackContainerDelegate;
	char _inlinePlayerActive;
	int _inlinePlaybackLayout;
	YTINavigationEndpoint* _errorNavigationEndpoint;
	YTCache* _snapshotViewCache;
	NSIndexPath* _autoScrollIndexPath;
	char _inlineVideoPlaying;
	char _inlinePlaybackGlobalPlayEnabled;
	char _mdxActive;
	char _creatorEndscreenActive;
	id<YTInlinePlaybackHintController> _hintController;
	YTExperimentalSuggestionsDroppingController* _suggestionsDroppingController;
	YTNavigationEndpointResponderEvent* _suppressedNavigationEvent;
	id<YTResponder> _parentResponder;
	YTINavigationEndpoint* _activeNavigationEndpoint;
	YTINavigationEndpoint* _graftingNavigationEndpoint;
	YTPlayerViewController* _playerViewController;

}

@property (nonatomic,retain) YTINavigationEndpoint * activeNavigationEndpoint;                //@synthesize activeNavigationEndpoint=_activeNavigationEndpoint - In the implementation block
@property (nonatomic,retain) YTINavigationEndpoint * graftingNavigationEndpoint;              //@synthesize graftingNavigationEndpoint=_graftingNavigationEndpoint - In the implementation block
@property (nonatomic,readonly) YTPlayerViewController * playerViewController;                 //@synthesize playerViewController=_playerViewController - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,__weak,readonly) id<YTResponder> parentResponder;                        //@synthesize parentResponder=_parentResponder - In the implementation block
-(id<YTResponder>)parentResponder;
-(char)isMDXActive;
-(void)appDidChangeDeviceOrientation;
-(YTINavigationEndpoint *)graftingNavigationEndpoint;
-(void)setGraftingNavigationEndpoint:(YTINavigationEndpoint *)arg1 ;
-(id)navEndpoint;
-(/*^block*/id)clientDataBlock;
-(void)setInlinePlaybackLayout:(int)arg1 ;
-(void)playbackControllerDidPause;
-(void)playbackControllerDidFinishPlaying;
-(void)playbackControllerCurrentVideoMediaTimeDidChange:(double)arg1 ;
-(void)playbackControllerWillFailWithError:(id)arg1 ;
-(void)playbackControllerPlayerStateDidChange;
-(void)playbackControllerDidLoadSurvey;
-(void)mdxSessionDidBegin;
-(void)mdxSessionDidEnd;
-(void)showAddToMenuFromView:(id)arg1 ;
-(void)setInlinePlayerActive:(char)arg1 ;
-(char)inlinePlayerActive;
-(id)metadataRenderer;
-(void)didSetInlinePlaybackLayout;
-(void)showCaptionsMenuFromView:(id)arg1 ;
-(void)showQualityMenuFromView:(id)arg1 ;
-(char)isInlinePlaybackGlobalPlayEnabled;
-(char)isInlinePlayerActive;
-(void)updateGlobalPlayEnabled:(char)arg1 ;
-(id)initWithPlayerViewController:(id)arg1 hintController:(id)arg2 systemNotifications:(id)arg3 suggestionsDroppingController:(id)arg4 ;
-(void)hideWatch;
-(id)activeInlinePlaybackContainer;
-(char)isCompanionAdLoaded;
-(void)showSmallScreen;
-(void)showFullScreen;
-(void)maybeAutoplayFollowingFailedPlayback;
-(void)claimPlayerViewController;
-(void)loadCompanionAd:(id)arg1 ;
-(id)activeVideoReportingRenderer;
-(id)nextPlayerTransitionForAutoplay;
-(char)willAutoPlayNextVideoOnFinish;
-(void)hideCompanionAd;
-(id)snapshotViewForVideoID:(id)arg1 ;
-(void)showPlayerViewAnimated:(char)arg1 ;
-(void)setInlinePlaybackGlobalPlayEnabled:(char)arg1 ;
-(void)addSuggestedRenderers:(id)arg1 forRenderer:(id)arg2 ;
-(char)handleNavigationEvent:(id)arg1 ;
-(void)didDequeueCell:(id)arg1 atIndexPath:(id)arg2 updatePlayerView:(char)arg3 ;
-(void)viewWillDisappearForDelegate:(id)arg1 ;
-(id)activeInlinePlaybackContainerIndexPath;
-(void)scrollViewDidEndDecelerating;
-(void)restorePlayerViewToActiveContainer;
-(void)clearActiveContainer;
-(void)willAutoScrollToIndexPath:(id)arg1 ;
-(void)setActiveContainer:(id)arg1 indexPath:(id)arg2 inlinePlaybackContainerDelegate:(id)arg3 ;
-(char)activeContainerVideoMatchesPlayerVideo;
-(void)updatePlayerView;
-(void)configurePlayerForAutoplaySurvey;
-(void)playActiveInlinePlaybackContainerWithAutoplay:(char)arg1 ;
-(void)resetActiveInlinePlaybackContainer;
-(char)shouldSwitchToContainer:(id)arg1 withIndexPath:(id)arg2 ;
-(void)switchToContainer:(id)arg1 indexPath:(id)arg2 ;
-(char)shouldPlayWhileScrolling;
-(void)showSmallscreenHints;
-(char)sendNavigationEventAfterRotate;
-(void)clickInfoCardIfActive;
-(void)savePlayerViewControllerState;
-(void)captureSnapshot;
-(id)activeCellController;
-(void)showFullscreenHints;
-(char)activeContainerVideoErrored;
-(void)loadPlayerWithAutoplay:(char)arg1 ;
-(double)mediaTimeForActiveContainer;
-(char)isActiveIndexPath:(id)arg1 ;
-(void)captureAndSetSnapshotView;
-(char)shouldSwitchToContainer:(id)arg1 ;
-(char)activeEndpointMatchesContainer:(id)arg1 ;
-(id)inlinePlaybackCellController;
-(YTINavigationEndpoint *)activeNavigationEndpoint;
-(void)setActiveNavigationEndpoint:(YTINavigationEndpoint *)arg1 ;
-(YTPlayerViewController *)playerViewController;
-(void)didReceiveMemoryWarning;
-(char)shouldAutorotate;
-(void)resetPlayer;
@end

