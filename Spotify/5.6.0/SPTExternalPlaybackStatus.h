/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:45:33 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/D2238F36-ED84-40F4-9CB2-8C71CACC8B47/Spotify.app/Spotify
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol SPTExternalContentItem, CollectionFeature, SPTImageLoader, SPTImageLoaderFactory, SPTGaiaDeviceStateManager;
@class SPTPlayerState, NSDictionary, SPTExternalPlaybackNotification, SPTTrack, NSString, NSURL, NSArray;

@interface SPTExternalPlaybackStatus : NSObject {

	char _playbackRepeating;
	char _playbackRepeatingSingleTrack;
	char _saved;
	SPTPlayerState* _state;
	NSDictionary* _contextMetadata;
	id<SPTExternalContentItem> _contentItemForSaving;
	SPTExternalPlaybackNotification* _alert;
	SPTExternalPlaybackNotification* _status;
	SPTTrack* _track;
	id<CollectionFeature> _collectionFeature;
	id<SPTImageLoader> _imageLoader;
	/*^block*/id _imageLoadCallback;
	id<SPTImageLoaderFactory> _imageLoaderFactory;
	id<SPTGaiaDeviceStateManager> _gaiaDeviceStateManager;
	int _radioTrackFeedback;

}

@property (nonatomic,retain) SPTPlayerState * state;                                            //@synthesize state=_state - In the implementation block
@property (nonatomic,readonly) double position; 
@property (nonatomic,readonly) double trackDuration; 
@property (nonatomic,readonly) char playbackIsProgressing; 
@property (nonatomic,readonly) float playbackSpeed; 
@property (nonatomic,readonly) char playbackStatusPaused; 
@property (nonatomic,readonly) char playbackShuffled; 
@property (assign,nonatomic) char playbackRepeating;                                            //@synthesize playbackRepeating=_playbackRepeating - In the implementation block
@property (assign,nonatomic) char playbackRepeatingSingleTrack;                                 //@synthesize playbackRepeatingSingleTrack=_playbackRepeatingSingleTrack - In the implementation block
@property (nonatomic,readonly) char thumbedUpInRadio; 
@property (nonatomic,readonly) char thumbedDownInRadio; 
@property (nonatomic,readonly) NSString * trackDisplayName; 
@property (nonatomic,readonly) NSURL * trackURI; 
@property (nonatomic,readonly) NSString * trackDisplayAlbum; 
@property (nonatomic,readonly) unsigned trackNumber; 
@property (nonatomic,readonly) NSURL * albumURI; 
@property (nonatomic,readonly) NSString * trackDisplayArtist; 
@property (nonatomic,readonly) NSURL * artistURI; 
@property (assign,nonatomic) char saved;                                                        //@synthesize saved=_saved - In the implementation block
@property (nonatomic,readonly) NSString * coverArtIdentifier; 
@property (nonatomic,retain) NSDictionary * contextMetadata;                                    //@synthesize contextMetadata=_contextMetadata - In the implementation block
@property (nonatomic,readonly) NSArray * disallowRepeatingTrackReasons; 
@property (nonatomic,readonly) NSArray * disallowRepeatingContextReasons; 
@property (nonatomic,readonly) NSArray * disallowRepeatingShuffleReasons; 
@property (nonatomic,retain) id<SPTExternalContentItem> contentItemForSaving;                   //@synthesize contentItemForSaving=_contentItemForSaving - In the implementation block
@property (nonatomic,readonly) char canStartRadio; 
@property (nonatomic,readonly) char canProvideRelatedAlbums; 
@property (nonatomic,readonly) char canThumbUpDown; 
@property (nonatomic,readonly) char canSave; 
@property (nonatomic,readonly) char canSeek; 
@property (nonatomic,readonly) char canToggleShuffle; 
@property (nonatomic,readonly) char canToggleRepeatOne; 
@property (nonatomic,readonly) char canToggleRepeatAll; 
@property (nonatomic,readonly) char canPause; 
@property (nonatomic,readonly) char canSkipNext; 
@property (nonatomic,readonly) char canSkipPrevious; 
@property (nonatomic,retain) SPTExternalPlaybackNotification * alert;                           //@synthesize alert=_alert - In the implementation block
@property (nonatomic,retain) SPTExternalPlaybackNotification * status;                          //@synthesize status=_status - In the implementation block
@property (nonatomic,retain) SPTTrack * track;                                                  //@synthesize track=_track - In the implementation block
@property (assign,nonatomic,__weak) id<CollectionFeature> collectionFeature;                    //@synthesize collectionFeature=_collectionFeature - In the implementation block
@property (nonatomic,retain) id<SPTImageLoader> imageLoader;                                    //@synthesize imageLoader=_imageLoader - In the implementation block
@property (nonatomic,copy) id imageLoadCallback;                                                //@synthesize imageLoadCallback=_imageLoadCallback - In the implementation block
@property (nonatomic,retain) id<SPTImageLoaderFactory> imageLoaderFactory;                      //@synthesize imageLoaderFactory=_imageLoaderFactory - In the implementation block
@property (nonatomic,retain) id<SPTGaiaDeviceStateManager> gaiaDeviceStateManager;              //@synthesize gaiaDeviceStateManager=_gaiaDeviceStateManager - In the implementation block
@property (assign,nonatomic) int radioTrackFeedback;                                            //@synthesize radioTrackFeedback=_radioTrackFeedback - In the implementation block
-(id<SPTImageLoader>)imageLoader;
-(void)setImageLoader:(id<SPTImageLoader>)arg1 ;
-(void)setGaiaDeviceStateManager:(id<SPTGaiaDeviceStateManager>)arg1 ;
-(id<SPTGaiaDeviceStateManager>)gaiaDeviceStateManager;
-(id<SPTImageLoaderFactory>)imageLoaderFactory;
-(void)setImageLoaderFactory:(id<SPTImageLoaderFactory>)arg1 ;
-(void)setCollectionFeature:(id<CollectionFeature>)arg1 ;
-(NSURL *)artistURI;
-(NSURL *)albumURI;
-(NSString *)trackDisplayName;
-(NSString *)trackDisplayArtist;
-(NSString *)trackDisplayAlbum;
-(char)canThumbUpDown;
-(char)thumbedUpInRadio;
-(char)thumbedDownInRadio;
-(char)playbackShuffled;
-(char)canToggleShuffle;
-(char)playbackRepeating;
-(char)playbackRepeatingSingleTrack;
-(char)canToggleRepeatAll;
-(NSDictionary *)contextMetadata;
-(void)setContextMetadata:(NSDictionary *)arg1 ;
-(void)setContentItemForSaving:(id<SPTExternalContentItem>)arg1 ;
-(void)decorateWithMetadata:(id)arg1 ;
-(id)initWithPlaybackStatus:(id)arg1 statusMessage:(id)arg2 ;
-(id)initWithPlaybackStatus:(id)arg1 alertMessage:(id)arg2 ;
-(id)initWithPlaybackStatus:(id)arg1 savedStatus:(char)arg2 ;
-(char)playbackStatusPaused;
-(char)playbackIsProgressing;
-(NSArray *)disallowRepeatingTrackReasons;
-(NSArray *)disallowRepeatingContextReasons;
-(NSArray *)disallowRepeatingShuffleReasons;
-(NSString *)coverArtIdentifier;
-(void)setPlaybackRepeating:(char)arg1 ;
-(void)setPlaybackRepeatingSingleTrack:(char)arg1 ;
-(id<SPTExternalContentItem>)contentItemForSaving;
-(int)radioTrackFeedback;
-(void)setRadioTrackFeedback:(int)arg1 ;
-(char)canStartRadio;
-(NSURL *)trackURI;
-(id)initWithPlaybackStatus:(id)arg1 radioTrackFeedback:(int)arg2 ;
-(char)canProvideRelatedAlbums;
-(char)canToggleRepeatOne;
-(id)initWithState:(id)arg1 collectionFeature:(id)arg2 track:(id)arg3 imageLoaderFactory:(id)arg4 gaiaDeviceStateManager:(id)arg5 radioTrackFeedback:(int)arg6 statusMessage:(id)arg7 alertMessage:(id)arg8 saved:(char)arg9 ;
-(id)initWithState:(id)arg1 collectionFeature:(id)arg2 imageLoaderFactory:(id)arg3 statusMessage:(id)arg4 alertMessage:(id)arg5 saved:(char)arg6 ;
-(id)coverArtImageURL;
-(void)setImageLoadCallback:(id)arg1 ;
-(id)imageLoadCallback;
-(SPTTrack *)track;
-(double)trackDuration;
-(unsigned)trackNumber;
-(float)playbackSpeed;
-(SPTPlayerState *)state;
-(void)setState:(SPTPlayerState *)arg1 ;
-(double)position;
-(SPTExternalPlaybackNotification *)status;
-(void)setStatus:(SPTExternalPlaybackNotification *)arg1 ;
-(char)hasContext;
-(char)canSave;
-(SPTExternalPlaybackNotification *)alert;
-(void)setAlert:(SPTExternalPlaybackNotification *)arg1 ;
-(char)canSeek;
-(char)saved;
-(void)setSaved:(char)arg1 ;
-(void)setTrack:(SPTTrack *)arg1 ;
-(char)canSkipNext;
-(char)canSkipPrevious;
-(id<CollectionFeature>)collectionFeature;
-(char)canPause;
@end

