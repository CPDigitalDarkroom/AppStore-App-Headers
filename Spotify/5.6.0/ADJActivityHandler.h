/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:45:48 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/D2238F36-ED84-40F4-9CB2-8C71CACC8B47/Spotify.app/Spotify
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Spotify/ADJActivityHandler.h>

@protocol ADJActivityHandler <NSObject>
@required
-(void)trackEvent:(id)arg1;
-(void)setOfflineMode:(char)arg1;
-(void)appWillOpenUrl:(id)arg1;
-(void)trackSubsessionStart;
-(void)trackSubsessionEnd;
-(void)setDeviceToken:(id)arg1;
-(void)launchAttributionDelegate;
-(void)setAskingAttribution:(char)arg1;
-(void)finishedTracking:(id)arg1;
-(char)updateAttribution:(id)arg1;
-(void)setIadDate:(id)arg1 withPurchaseDate:(id)arg2;
-(void)setIadDetails:(id)arg1 error:(id)arg2 retriesLeft:(int)arg3;
-(void)setEnabled:(char)arg1;
-(char)isEnabled;
-(void)setAttribution:(id)arg1;
-(id)attribution;
-(id)initWithConfig:(id)arg1;

@end


@protocol OS_dispatch_queue, ADJPackageHandler, ADJAttributionHandler, ADJLogger, AdjustDelegate;
@class NSObject, ADJActivityState, ADJTimerCycle, ADJAttribution, ADJConfig, ADJDeviceInfo, NSString;

@interface ADJActivityHandler : NSObject <ADJActivityHandler> {

	char _enabled;
	char _offline;
	NSObject*<OS_dispatch_queue> _internalQueue;
	id<ADJPackageHandler> _packageHandler;
	id<ADJAttributionHandler> _attributionHandler;
	ADJActivityState* _activityState;
	ADJTimerCycle* _timer;
	id<ADJLogger> _logger;
	NSObject*<AdjustDelegate> _delegate;
	ADJAttribution* _attribution;
	ADJConfig* _adjustConfig;
	ADJDeviceInfo* _deviceInfo;

}

@property (nonatomic,retain) NSObject*<OS_dispatch_queue> internalQueue;                //@synthesize internalQueue=_internalQueue - In the implementation block
@property (nonatomic,retain) id<ADJPackageHandler> packageHandler;                      //@synthesize packageHandler=_packageHandler - In the implementation block
@property (nonatomic,retain) id<ADJAttributionHandler> attributionHandler;              //@synthesize attributionHandler=_attributionHandler - In the implementation block
@property (nonatomic,retain) ADJActivityState * activityState;                          //@synthesize activityState=_activityState - In the implementation block
@property (nonatomic,retain) ADJTimerCycle * timer;                                     //@synthesize timer=_timer - In the implementation block
@property (nonatomic,retain) id<ADJLogger> logger;                                      //@synthesize logger=_logger - In the implementation block
@property (assign,nonatomic,__weak) NSObject*<AdjustDelegate> delegate;                 //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,copy) ADJAttribution * attribution;                                //@synthesize attribution=_attribution - In the implementation block
@property (nonatomic,copy) ADJConfig * adjustConfig;                                    //@synthesize adjustConfig=_adjustConfig - In the implementation block
@property (assign,nonatomic) char enabled;                                              //@synthesize enabled=_enabled - In the implementation block
@property (assign,nonatomic) char offline;                                              //@synthesize offline=_offline - In the implementation block
@property (nonatomic,copy) ADJDeviceInfo * deviceInfo;                                  //@synthesize deviceInfo=_deviceInfo - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)handlerWithConfig:(id)arg1 ;
-(void)trackEvent:(id)arg1 ;
-(void)setOfflineMode:(char)arg1 ;
-(void)appWillOpenUrl:(id)arg1 ;
-(void)trackSubsessionStart;
-(void)trackSubsessionEnd;
-(void)setDeviceToken:(id)arg1 ;
-(void)setAdjustConfig:(ADJConfig *)arg1 ;
-(void)addNotificationObserver;
-(void)endInternal;
-(void)eventInternal:(id)arg1 ;
-(void)launchDeepLink:(id)arg1 ;
-(id<ADJAttributionHandler>)attributionHandler;
-(char)hasChangedState:(char)arg1 nextState:(char)arg2 trueMessage:(id)arg3 falseMessage:(id)arg4 ;
-(ADJActivityState *)activityState;
-(void)writeActivityState;
-(void)updateState:(char)arg1 pausingMessage:(id)arg2 remainsPausedMessage:(id)arg3 unPausingMessage:(id)arg4 ;
-(void)appWillOpenUrlInternal:(id)arg1 ;
-(void)setDeviceTokenInternal:(id)arg1 ;
-(ADJConfig *)adjustConfig;
-(id<ADJPackageHandler>)packageHandler;
-(void)writeAttribution;
-(void)launchAttributionDelegate;
-(void)setAskingAttribution:(char)arg1 ;
-(void)updateStatusInternal;
-(void)readAttribution;
-(void)readActivityState;
-(void)setPackageHandler:(id<ADJPackageHandler>)arg1 ;
-(void)setAttributionHandler:(id<ADJAttributionHandler>)arg1 ;
-(void)timerFiredInternal;
-(void)processSession;
-(void)checkAttributionState;
-(void)setActivityState:(ADJActivityState *)arg1 ;
-(void)transferSessionPackage:(double)arg1 ;
-(char)updateActivityState:(double)arg1 ;
-(char)checkTransactionId:(id)arg1 ;
-(char)readDeeplinkQueryString:(id)arg1 adjustDeepLinks:(id)arg2 attribution:(id)arg3 ;
-(char)trySetAttributionDeeplink:(id)arg1 withKey:(id)arg2 withValue:(id)arg3 ;
-(void)updateAttributionHandlerStatus;
-(void)updatePackageHandlerStatus;
-(void)removeNotificationObserver;
-(void)finishedTracking:(id)arg1 ;
-(char)updateAttribution:(id)arg1 ;
-(void)setIadDate:(id)arg1 withPurchaseDate:(id)arg2 ;
-(void)setIadDetails:(id)arg1 error:(id)arg2 retriesLeft:(int)arg3 ;
-(id<ADJLogger>)logger;
-(void)setLogger:(id<ADJLogger>)arg1 ;
-(char)checkEvent:(id)arg1 ;
-(void)stopTimer;
-(void)initInternal;
-(char)enabled;
-(void)setDelegate:(NSObject*<AdjustDelegate>)arg1 ;
-(NSObject*<AdjustDelegate>)delegate;
-(void)setEnabled:(char)arg1 ;
-(char)isEnabled;
-(void)startTimer;
-(void)setTimer:(ADJTimerCycle *)arg1 ;
-(ADJTimerCycle *)timer;
-(char)paused;
-(void)setDeviceInfo:(ADJDeviceInfo *)arg1 ;
-(ADJDeviceInfo *)deviceInfo;
-(void)setAttribution:(ADJAttribution *)arg1 ;
-(ADJAttribution *)attribution;
-(void)updateStatus;
-(NSObject*<OS_dispatch_queue>)internalQueue;
-(void)startInternal;
-(char)offline;
-(void)setOffline:(char)arg1 ;
-(void)setInternalQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(id)initWithConfig:(id)arg1 ;
@end

