/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:45:44 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/D2238F36-ED84-40F4-9CB2-8C71CACC8B47/Spotify.app/Spotify
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Spotify/SPTDataLoaderDelegate.h>
#import <Spotify/SPTPlayerObserver.h>
#import <Spotify/SPTRunningStepManagerObserver.h>
#import <Spotify/SPTRunningPlaybackManager.h>

@protocol SPTPlayer, SPTProductState, SPTLocalSettings, SPTRunningTestManager, SPTDataLoaderCancellationToken;
@class SPTDataLoader, SPTRunningStepManager, SPTRunningAudioUXManager, SPTLogCenter, SPTRunningLocalisationManagerImplementation, SPTRunningPlaybackStateRestorer, SPTRunningImageCache, SPTPlayerState, NSArray, NSURL, NSDictionary, SPTPlayOptions, SPTPlayerRestrictions, SPTPlayerContext, NSMapTable, NSTimer, NSString;

@interface SPTRunningPlaybackManagerListImplementation : NSObject <SPTDataLoaderDelegate, SPTPlayerObserver, SPTRunningStepManagerObserver, SPTRunningPlaybackManager> {

	char _currentContext;
	char _automaticallyChangingTempo;
	unsigned _tempo;
	SPTDataLoader* _dataLoader;
	id<SPTPlayer> _player;
	SPTRunningStepManager* _stepManager;
	SPTRunningAudioUXManager* _audioUXManager;
	id<SPTProductState> _productState;
	id<SPTLocalSettings> _localSettings;
	SPTLogCenter* _logCenter;
	id<SPTRunningTestManager> _testManager;
	SPTRunningLocalisationManagerImplementation* _localisationManager;
	SPTRunningPlaybackStateRestorer* _playbackStateRestorer;
	SPTRunningImageCache* _imageCache;
	unsigned _minimumTempo;
	unsigned _maximumTempo;
	SPTPlayerState* _playerState;
	NSArray* _sortedTempoKeys;
	id<SPTDataLoaderCancellationToken> _cancellationToken;
	NSURL* _viewURL;
	NSDictionary* _tempoPlaybackList;
	SPTPlayOptions* _playOptions;
	SPTPlayerRestrictions* _restrictions;
	SPTPlayerContext* _context;
	NSMapTable* _observers;
	NSURL* _currentPlaybackURL;
	NSTimer* _logTimer;
	double _lastLoggedTempo;

}

@property (nonatomic,retain) SPTDataLoader * dataLoader;                                                         //@synthesize dataLoader=_dataLoader - In the implementation block
@property (nonatomic,retain) id<SPTPlayer> player;                                                               //@synthesize player=_player - In the implementation block
@property (nonatomic,retain) SPTRunningStepManager * stepManager;                                                //@synthesize stepManager=_stepManager - In the implementation block
@property (nonatomic,retain) SPTRunningAudioUXManager * audioUXManager;                                          //@synthesize audioUXManager=_audioUXManager - In the implementation block
@property (nonatomic,retain) id<SPTProductState> productState;                                                   //@synthesize productState=_productState - In the implementation block
@property (nonatomic,retain) id<SPTLocalSettings> localSettings;                                                 //@synthesize localSettings=_localSettings - In the implementation block
@property (nonatomic,retain) SPTLogCenter * logCenter;                                                           //@synthesize logCenter=_logCenter - In the implementation block
@property (nonatomic,retain) id<SPTRunningTestManager> testManager;                                              //@synthesize testManager=_testManager - In the implementation block
@property (nonatomic,retain) SPTRunningLocalisationManagerImplementation * localisationManager;                  //@synthesize localisationManager=_localisationManager - In the implementation block
@property (nonatomic,retain) SPTRunningPlaybackStateRestorer * playbackStateRestorer;                            //@synthesize playbackStateRestorer=_playbackStateRestorer - In the implementation block
@property (nonatomic,retain) SPTRunningImageCache * imageCache;                                                  //@synthesize imageCache=_imageCache - In the implementation block
@property (assign,getter=isCurrentContext,nonatomic) char currentContext;                                        //@synthesize currentContext=_currentContext - In the implementation block
@property (assign,nonatomic) unsigned minimumTempo;                                                              //@synthesize minimumTempo=_minimumTempo - In the implementation block
@property (assign,nonatomic) unsigned maximumTempo;                                                              //@synthesize maximumTempo=_maximumTempo - In the implementation block
@property (nonatomic,retain) SPTPlayerState * playerState;                                                       //@synthesize playerState=_playerState - In the implementation block
@property (nonatomic,retain) NSArray * sortedTempoKeys;                                                          //@synthesize sortedTempoKeys=_sortedTempoKeys - In the implementation block
@property (nonatomic,retain) id<SPTDataLoaderCancellationToken> cancellationToken;                               //@synthesize cancellationToken=_cancellationToken - In the implementation block
@property (nonatomic,retain) NSURL * viewURL;                                                                    //@synthesize viewURL=_viewURL - In the implementation block
@property (nonatomic,retain) NSDictionary * tempoPlaybackList;                                                   //@synthesize tempoPlaybackList=_tempoPlaybackList - In the implementation block
@property (nonatomic,retain) SPTPlayOptions * playOptions;                                                       //@synthesize playOptions=_playOptions - In the implementation block
@property (nonatomic,retain) SPTPlayerRestrictions * restrictions;                                               //@synthesize restrictions=_restrictions - In the implementation block
@property (nonatomic,retain) SPTPlayerContext * context;                                                         //@synthesize context=_context - In the implementation block
@property (nonatomic,retain) NSMapTable * observers;                                                             //@synthesize observers=_observers - In the implementation block
@property (nonatomic,retain) NSURL * currentPlaybackURL;                                                         //@synthesize currentPlaybackURL=_currentPlaybackURL - In the implementation block
@property (nonatomic,readonly) double currentTrackTempo; 
@property (assign,nonatomic) double lastLoggedTempo;                                                             //@synthesize lastLoggedTempo=_lastLoggedTempo - In the implementation block
@property (nonatomic,retain) NSTimer * logTimer;                                                                 //@synthesize logTimer=_logTimer - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) unsigned tempo;                                                                   //@synthesize tempo=_tempo - In the implementation block
@property (getter=isAutomaticallyChangingTempo,nonatomic,readonly) char automaticallyChangingTempo;              //@synthesize automaticallyChangingTempo=_automaticallyChangingTempo - In the implementation block
@property (assign,nonatomic) double currentContextPosition; 
@property (nonatomic,readonly) double currentContextLength; 
-(id<SPTProductState>)productState;
-(SPTLogCenter *)logCenter;
-(void)setProductState:(id<SPTProductState>)arg1 ;
-(void)addObserver:(id)arg1 on:(id)arg2 ;
-(void)setLogCenter:(SPTLogCenter *)arg1 ;
-(id<SPTLocalSettings>)localSettings;
-(void)setLocalSettings:(id<SPTLocalSettings>)arg1 ;
-(id<SPTDataLoaderCancellationToken>)cancellationToken;
-(SPTDataLoader *)dataLoader;
-(void)setCancellationToken:(id<SPTDataLoaderCancellationToken>)arg1 ;
-(void)dataLoader:(id)arg1 didReceiveSuccessfulResponse:(id)arg2 ;
-(void)dataLoader:(id)arg1 didReceiveErrorResponse:(id)arg2 ;
-(void)dataLoader:(id)arg1 didCancelRequest:(id)arg2 ;
-(void)setDataLoader:(SPTDataLoader *)arg1 ;
-(void)player:(id)arg1 stateDidChange:(id)arg2 ;
-(void)player:(id)arg1 didEncounterError:(id)arg2 ;
-(void)dispatchBlock:(/*^block*/id)arg1 onQueue:(id)arg2 ;
-(void)setPlaybackStateRestorer:(SPTRunningPlaybackStateRestorer *)arg1 ;
-(SPTRunningPlaybackStateRestorer *)playbackStateRestorer;
-(NSURL *)viewURL;
-(void)setViewURL:(NSURL *)arg1 ;
-(void)setTestManager:(id<SPTRunningTestManager>)arg1 ;
-(id<SPTRunningTestManager>)testManager;
-(char)isAutomaticallyChangingTempo;
-(void)playTempo:(unsigned)arg1 withNewTempoAudioUXVoiceover:(char)arg2 automaticallyPlay:(char)arg3 ;
-(void)setAutomaticallyChangingTempo:(char)arg1 withChangingAudioUXVoiceover:(char)arg2 playImmediately:(char)arg3 ;
-(void)syncPlaybackManagerWithStepManager;
-(unsigned)minimumTempo;
-(unsigned)maximumTempo;
-(SPTRunningLocalisationManagerImplementation *)localisationManager;
-(void)setLocalisationManager:(SPTRunningLocalisationManagerImplementation *)arg1 ;
-(SPTRunningAudioUXManager *)audioUXManager;
-(void)setStepManager:(SPTRunningStepManager *)arg1 ;
-(void)setAudioUXManager:(SPTRunningAudioUXManager *)arg1 ;
-(id)initWithDataLoader:(id)arg1 player:(id)arg2 stepManager:(id)arg3 audioUXManager:(id)arg4 productState:(id)arg5 localSettings:(id)arg6 logCenter:(id)arg7 testManager:(id)arg8 localisationManager:(id)arg9 playbackStateRestorer:(id)arg10 imageCache:(id)arg11 ;
-(SPTRunningStepManager *)stepManager;
-(void)runningStepManagerDidChangeStableTempo:(id)arg1 fromTempo:(double)arg2 ;
-(NSDictionary *)tempoPlaybackList;
-(void)setTempoPlaybackList:(NSDictionary *)arg1 ;
-(void)setSortedTempoKeys:(NSArray *)arg1 ;
-(NSArray *)sortedTempoKeys;
-(NSURL *)currentPlaybackURL;
-(char)isCurrentContext;
-(SPTPlayOptions *)playOptions;
-(void)playContext:(id)arg1 withOptions:(id)arg2 forURL:(id)arg3 ;
-(double)trackTempo:(id)arg1 ;
-(double)lengthForTrack:(id)arg1 ;
-(void)setAudioFadeInDuration:(double)arg1 forTrack:(id)arg2 ;
-(void)calculateShuffleWeightsForContext:(id)arg1 ;
-(void)setCurrentPlaybackURL:(NSURL *)arg1 ;
-(void)setPlayOptions:(SPTPlayOptions *)arg1 ;
-(void)logTimerFired:(id)arg1 ;
-(void)setAutomaticallyChangingTempo:(char)arg1 ;
-(double)currentContextPosition;
-(void)playTracks:(id)arg1 atTempo:(unsigned)arg2 shuffled:(char)arg3 suppressions:(id)arg4 initiallyPaused:(char)arg5 percentageMapping:(char)arg6 fromURL:(id)arg7 weightedModifier:(double)arg8 ;
-(double)currentTrackTempo;
-(void)syncWeightedShufflingWithStepManagerTempo;
-(void)syncStepTempoWithPlaybackTempo;
-(double)lastLoggedTempo;
-(void)setLastLoggedTempo:(double)arg1 ;
-(void)setCurrentContextPosition:(double)arg1 ;
-(double)currentContextLength;
-(void)setAudioFadeInStartTime:(double)arg1 forTrack:(id)arg2 ;
-(void)setTempoPlaybackList:(id)arg1 viewURI:(id)arg2 ;
-(void)setMinimumTempo:(unsigned)arg1 ;
-(void)setMaximumTempo:(unsigned)arg1 ;
-(void)setTempo:(unsigned)arg1 ;
-(unsigned)tempo;
-(void)setImageCache:(SPTRunningImageCache *)arg1 ;
-(SPTRunningImageCache *)imageCache;
-(void)setPlayer:(id<SPTPlayer>)arg1 ;
-(id<SPTPlayer>)player;
-(void)dealloc;
-(void)removeObserver:(id)arg1 ;
-(SPTPlayerContext *)context;
-(void)setContext:(SPTPlayerContext *)arg1 ;
-(void)setCurrentContext:(char)arg1 ;
-(void)setObservers:(NSMapTable *)arg1 ;
-(NSMapTable *)observers;
-(void)setRestrictions:(SPTPlayerRestrictions *)arg1 ;
-(SPTPlayerRestrictions *)restrictions;
-(void)setLogTimer:(NSTimer *)arg1 ;
-(NSTimer *)logTimer;
-(SPTPlayerState *)playerState;
-(void)setPlayerState:(SPTPlayerState *)arg1 ;
@end

