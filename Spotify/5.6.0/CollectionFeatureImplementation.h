/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:45:31 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/D2238F36-ED84-40F4-9CB2-8C71CACC8B47/Spotify.app/Spotify
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Spotify/SPTService.h>
#import <Spotify/CollectionFeature.h>

@protocol PageRegistry, SPTVoiceCommandFeature, SPTClientSessionService, ContainerFeature, SPTCoreService, SPTNetworkFeature, SPTPlayerFeature, SPContextMenuFeature, CosmosFeature, PlaylistFeature, SPTAudioTouchFeature, SPTAbbaFeature, SPTSettingsFeature, SPTMomentsFeature, FollowFeature, SPTInstrumentationService, ShuffleFeature, SPTNewReleasesFeature, SPTITunesLibraryManager, SPTCollectionEntityList, SPTPageInstrumentation;
@class SPTCollection, SPTCollectionOfflineImageManager, SPTCollectionCacheplayTestManagerImplementation, SPTSaveToCollectionPushNotificationAction, NSMutableArray, SPTCollectionOverviewNavigationModel, SPTCollectionRecentlyPlayedCosmosModel, SPTCollectionCacheplayEntityAdditionalSection, SPCollectionController, SPCollectionOfflineController, SPTTrackContextFactory, SPTRecentlyPlayedController, SPTRouter, SPTCollectionLoggerImplementation, SPTSyncManager, SPTCollectionTouchPreviewProvider, SPTLocalFilesImportManager, SPTPlaylistCore, SPTCollectionTestManager, SPTaskCompletionSource, NSString, SPTAllocationContext;

@interface CollectionFeatureImplementation : NSObject <SPTService, CollectionFeature> {

	id<PageRegistry> _pageRegistry;
	id<SPTVoiceCommandFeature> _voiceCommandFeature;
	SPTCollection* _collection;
	id<SPTClientSessionService> _clientSessionService;
	id<ContainerFeature> _containerFeature;
	id<SPTCoreService> _coreService;
	id<SPTNetworkFeature> _networkFeature;
	id<SPTPlayerFeature> _playerFeature;
	id<SPContextMenuFeature> _contextMenuFeature;
	id<CosmosFeature> _cosmosFeature;
	id<PlaylistFeature> _playlistFeature;
	id<SPTAudioTouchFeature> _audioTouch;
	id<SPTAbbaFeature> _abbaFeature;
	id<SPTSettingsFeature> _settings;
	id<SPTMomentsFeature> _momentsFeature;
	id<FollowFeature> _followFeature;
	id<SPTInstrumentationService> _instrumentationService;
	id<ShuffleFeature> _shuffleFeature;
	id<SPTNewReleasesFeature> _upcomingReleasesFeature;
	SPTCollectionOfflineImageManager* _offlineImageManager;
	id<SPTITunesLibraryManager> _itunesLibraryManager;
	SPTCollectionCacheplayTestManagerImplementation* _cacheplayTestManager;
	SPTSaveToCollectionPushNotificationAction* _saveToCollectionPushNotificationAction;
	NSMutableArray* _registeredEntityContentTypes;
	SPTCollectionOverviewNavigationModel* _collectionListModel;
	SPTCollectionRecentlyPlayedCosmosModel* _recentlyPlayedCosmosModel;
	id<SPTCollectionEntityList> _recentlyPlayedEntityList;
	id<SPTCollectionEntityList> _internalRecentlyPlayedEntityList;
	id<SPTCollectionEntityList> _recentlyPlayedPlaylistEntityList;
	SPTCollectionCacheplayEntityAdditionalSection* _overViewAdditionalSection;
	SPCollectionController* _collectionController;
	SPCollectionOfflineController* _collectionOfflineController;
	SPTTrackContextFactory* _trackContextFactory;
	SPTRecentlyPlayedController* _recentlyPlayedController;
	SPTRouter* _collectionCosmosRouter;
	SPTCollectionLoggerImplementation* _collectionLogger;
	id<SPTPageInstrumentation> _pageInstrumentation;
	SPTSyncManager* _syncManager;
	SPTCollectionTouchPreviewProvider* _touchPreviewProvider;
	SPTLocalFilesImportManager* _localFilesImportManager;
	SPTPlaylistCore* _playlistCore;
	SPTCollectionTestManager* _testManager;
	SPTaskCompletionSource* _voiceFeatureTaskCompletionSource;

}

@property (nonatomic,readonly) SPTCollection * collection;                                                                    //@synthesize collection=_collection - In the implementation block
@property (assign,nonatomic,__weak) id<SPTClientSessionService> clientSessionService;                                         //@synthesize clientSessionService=_clientSessionService - In the implementation block
@property (assign,nonatomic,__weak) id<ContainerFeature> containerFeature;                                                    //@synthesize containerFeature=_containerFeature - In the implementation block
@property (assign,nonatomic,__weak) id<SPTCoreService> coreService;                                                           //@synthesize coreService=_coreService - In the implementation block
@property (assign,nonatomic,__weak) id<SPTNetworkFeature> networkFeature;                                                     //@synthesize networkFeature=_networkFeature - In the implementation block
@property (assign,nonatomic,__weak) id<SPTPlayerFeature> playerFeature;                                                       //@synthesize playerFeature=_playerFeature - In the implementation block
@property (assign,nonatomic,__weak) id<SPContextMenuFeature> contextMenuFeature;                                              //@synthesize contextMenuFeature=_contextMenuFeature - In the implementation block
@property (assign,nonatomic,__weak) id<CosmosFeature> cosmosFeature;                                                          //@synthesize cosmosFeature=_cosmosFeature - In the implementation block
@property (assign,nonatomic,__weak) id<PlaylistFeature> playlistFeature;                                                      //@synthesize playlistFeature=_playlistFeature - In the implementation block
@property (assign,nonatomic,__weak) id<SPTAudioTouchFeature> audioTouch;                                                      //@synthesize audioTouch=_audioTouch - In the implementation block
@property (assign,nonatomic,__weak) id<SPTAbbaFeature> abbaFeature;                                                           //@synthesize abbaFeature=_abbaFeature - In the implementation block
@property (assign,nonatomic,__weak) id<SPTSettingsFeature> settings;                                                          //@synthesize settings=_settings - In the implementation block
@property (assign,nonatomic,__weak) id<SPTMomentsFeature> momentsFeature;                                                     //@synthesize momentsFeature=_momentsFeature - In the implementation block
@property (assign,nonatomic,__weak) id<FollowFeature> followFeature;                                                          //@synthesize followFeature=_followFeature - In the implementation block
@property (assign,nonatomic,__weak) id<SPTInstrumentationService> instrumentationService;                                     //@synthesize instrumentationService=_instrumentationService - In the implementation block
@property (assign,nonatomic,__weak) id<ShuffleFeature> shuffleFeature;                                                        //@synthesize shuffleFeature=_shuffleFeature - In the implementation block
@property (assign,nonatomic,__weak) id<SPTNewReleasesFeature> upcomingReleasesFeature;                                        //@synthesize upcomingReleasesFeature=_upcomingReleasesFeature - In the implementation block
@property (nonatomic,retain) SPTCollectionOfflineImageManager * offlineImageManager;                                          //@synthesize offlineImageManager=_offlineImageManager - In the implementation block
@property (nonatomic,retain) id<SPTITunesLibraryManager> itunesLibraryManager;                                                //@synthesize itunesLibraryManager=_itunesLibraryManager - In the implementation block
@property (nonatomic,retain) SPTCollectionCacheplayTestManagerImplementation * cacheplayTestManager;                          //@synthesize cacheplayTestManager=_cacheplayTestManager - In the implementation block
@property (nonatomic,retain) SPTSaveToCollectionPushNotificationAction * saveToCollectionPushNotificationAction;              //@synthesize saveToCollectionPushNotificationAction=_saveToCollectionPushNotificationAction - In the implementation block
@property (nonatomic,retain) NSMutableArray * registeredEntityContentTypes;                                                   //@synthesize registeredEntityContentTypes=_registeredEntityContentTypes - In the implementation block
@property (nonatomic,retain) SPTCollectionOverviewNavigationModel * collectionListModel;                                      //@synthesize collectionListModel=_collectionListModel - In the implementation block
@property (nonatomic,retain) SPTCollectionRecentlyPlayedCosmosModel * recentlyPlayedCosmosModel;                              //@synthesize recentlyPlayedCosmosModel=_recentlyPlayedCosmosModel - In the implementation block
@property (nonatomic,retain) id<SPTCollectionEntityList> recentlyPlayedEntityList;                                            //@synthesize recentlyPlayedEntityList=_recentlyPlayedEntityList - In the implementation block
@property (nonatomic,retain) id<SPTCollectionEntityList> internalRecentlyPlayedEntityList;                                    //@synthesize internalRecentlyPlayedEntityList=_internalRecentlyPlayedEntityList - In the implementation block
@property (nonatomic,retain) id<SPTCollectionEntityList> recentlyPlayedPlaylistEntityList;                                    //@synthesize recentlyPlayedPlaylistEntityList=_recentlyPlayedPlaylistEntityList - In the implementation block
@property (nonatomic,retain) SPTCollectionCacheplayEntityAdditionalSection * overViewAdditionalSection;                       //@synthesize overViewAdditionalSection=_overViewAdditionalSection - In the implementation block
@property (nonatomic,retain) SPCollectionController * collectionController;                                                   //@synthesize collectionController=_collectionController - In the implementation block
@property (nonatomic,retain) SPCollectionOfflineController * collectionOfflineController;                                     //@synthesize collectionOfflineController=_collectionOfflineController - In the implementation block
@property (nonatomic,retain) SPTTrackContextFactory * trackContextFactory;                                                    //@synthesize trackContextFactory=_trackContextFactory - In the implementation block
@property (nonatomic,retain) SPTRecentlyPlayedController * recentlyPlayedController;                                          //@synthesize recentlyPlayedController=_recentlyPlayedController - In the implementation block
@property (nonatomic,retain) SPTRouter * collectionCosmosRouter;                                                              //@synthesize collectionCosmosRouter=_collectionCosmosRouter - In the implementation block
@property (nonatomic,retain) SPTCollectionLoggerImplementation * collectionLogger;                                            //@synthesize collectionLogger=_collectionLogger - In the implementation block
@property (nonatomic,retain) id<SPTPageInstrumentation> pageInstrumentation;                                                  //@synthesize pageInstrumentation=_pageInstrumentation - In the implementation block
@property (nonatomic,retain) SPTSyncManager * syncManager;                                                                    //@synthesize syncManager=_syncManager - In the implementation block
@property (nonatomic,retain) SPTCollectionTouchPreviewProvider * touchPreviewProvider;                                        //@synthesize touchPreviewProvider=_touchPreviewProvider - In the implementation block
@property (nonatomic,retain) SPTLocalFilesImportManager * localFilesImportManager;                                            //@synthesize localFilesImportManager=_localFilesImportManager - In the implementation block
@property (nonatomic,retain) SPTPlaylistCore * playlistCore;                                                                  //@synthesize playlistCore=_playlistCore - In the implementation block
@property (nonatomic,retain) SPTCollectionTestManager * testManager;                                                          //@synthesize testManager=_testManager - In the implementation block
@property (nonatomic,retain) SPTaskCompletionSource * voiceFeatureTaskCompletionSource;                                       //@synthesize voiceFeatureTaskCompletionSource=_voiceFeatureTaskCompletionSource - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,retain) SPTAllocationContext * allocationContext; 
@property (getter=isYourLibraryFeatureEnabled,nonatomic,readonly) char yourLibraryFeatureEnabled; 
@property (assign,nonatomic,__weak) id<SPTVoiceCommandFeature> voiceCommandFeature;                                           //@synthesize voiceCommandFeature=_voiceCommandFeature - In the implementation block
+(id)serviceDependencies;
+(id)sharedImplementation;
+(id)serviceIdentifier;
-(void)setCoreService:(id<SPTCoreService>)arg1 ;
-(void)setContainerFeature:(id<ContainerFeature>)arg1 ;
-(id<ContainerFeature>)containerFeature;
-(id<SPTCoreService>)coreService;
-(void)configureWithServices:(id)arg1 ;
-(void)setClientSessionService:(id<SPTClientSessionService>)arg1 ;
-(void)setNetworkFeature:(id<SPTNetworkFeature>)arg1 ;
-(id<SPTNetworkFeature>)networkFeature;
-(id<SPTClientSessionService>)clientSessionService;
-(void)setPlayerFeature:(id<SPTPlayerFeature>)arg1 ;
-(id<SPTPlayerFeature>)playerFeature;
-(void)setAbbaFeature:(id<SPTAbbaFeature>)arg1 ;
-(id<SPTAbbaFeature>)abbaFeature;
-(void)setAudioTouch:(id<SPTAudioTouchFeature>)arg1 ;
-(id<SPTAudioTouchFeature>)audioTouch;
-(id<SPContextMenuFeature>)contextMenuFeature;
-(void)setContextMenuFeature:(id<SPContextMenuFeature>)arg1 ;
-(void)setFollowFeature:(id<FollowFeature>)arg1 ;
-(id<FollowFeature>)followFeature;
-(id)provideCollection;
-(void)setInstrumentationService:(id<SPTInstrumentationService>)arg1 ;
-(void)setShuffleFeature:(id<ShuffleFeature>)arg1 ;
-(void)setVoiceCommandFeature:(id<SPTVoiceCommandFeature>)arg1 ;
-(id<SPTInstrumentationService>)instrumentationService;
-(void)setPageInstrumentation:(id<SPTPageInstrumentation>)arg1 ;
-(id)provideTrackContextFactory;
-(id<SPTPageInstrumentation>)pageInstrumentation;
-(id<ShuffleFeature>)shuffleFeature;
-(id)provideCollectionLogger;
-(id<SPTVoiceCommandFeature>)voiceCommandFeature;
-(SPTTrackContextFactory *)trackContextFactory;
-(void)setTrackContextFactory:(SPTTrackContextFactory *)arg1 ;
-(SPTCollectionLoggerImplementation *)collectionLogger;
-(id)provideLocalSettings;
-(void)setCosmosFeature:(id<CosmosFeature>)arg1 ;
-(id<CosmosFeature>)cosmosFeature;
-(void)setPlaylistFeature:(id<PlaylistFeature>)arg1 ;
-(void)setMomentsFeature:(id<SPTMomentsFeature>)arg1 ;
-(void)setUpcomingReleasesFeature:(id<SPTNewReleasesFeature>)arg1 ;
-(void)setPlaylistCore:(SPTPlaylistCore *)arg1 ;
-(id)createCollectionControllerWithSession:(id)arg1 core:(id)arg2 playerFeature:(id)arg3 ;
-(id)provideResolverCollection;
-(char)isYourLibraryFeatureEnabled;
-(id)provideCollectionRecentlyPlayedPage:(id)arg1 ;
-(id)provideCollectionArtistsPage:(id)arg1 ;
-(id)provideCollectionPlaylistsPage:(id)arg1 ;
-(id)provideCollectionAlbumsPage:(id)arg1 ;
-(id)provideCollectionAllSongsPage:(id)arg1 context:(id)arg2 ;
-(id)provideCollectionArtistPage:(id)arg1 context:(id)arg2 ;
-(id)provideCollectionAlbumPage:(id)arg1 context:(id)arg2 ;
-(id)provideImportMusicViewControllerWithURL:(id)arg1 ;
-(void)setOfflineImageManager:(SPTCollectionOfflineImageManager *)arg1 ;
-(void)setSaveToCollectionPushNotificationAction:(SPTSaveToCollectionPushNotificationAction *)arg1 ;
-(SPTSaveToCollectionPushNotificationAction *)saveToCollectionPushNotificationAction;
-(id<PlaylistFeature>)playlistFeature;
-(void)setLocalFilesImportManager:(SPTLocalFilesImportManager *)arg1 ;
-(SPTLocalFilesImportManager *)localFilesImportManager;
-(id)provideTestManager;
-(id)provideSaveRemoveActionTaskForURL:(id)arg1 logContext:(id)arg2 sourceURL:(id)arg3 ;
-(id)provideCompleteAlbumActionTaskForURL:(id)arg1 logContext:(id)arg2 sourceURL:(id)arg3 ;
-(void)setVoiceFeatureTaskCompletionSource:(SPTaskCompletionSource *)arg1 ;
-(SPTaskCompletionSource *)voiceFeatureTaskCompletionSource;
-(SPTRouter *)collectionCosmosRouter;
-(void)unregisterCollectionResolverWithRouter:(id)arg1 ;
-(void)unregisterRecentlyPlayedResolverWithRouter:(id)arg1 ;
-(SPTRecentlyPlayedController *)recentlyPlayedController;
-(void)setItunesLibraryManager:(id<SPTITunesLibraryManager>)arg1 ;
-(SPCollectionController *)collectionController;
-(void)setCollectionController:(SPCollectionController *)arg1 ;
-(void)setCollectionOfflineController:(SPCollectionOfflineController *)arg1 ;
-(void)setTestManager:(SPTCollectionTestManager *)arg1 ;
-(SPTCollectionTouchPreviewProvider *)touchPreviewProvider;
-(void)setTouchPreviewProvider:(SPTCollectionTouchPreviewProvider *)arg1 ;
-(id<SPTITunesLibraryManager>)itunesLibraryManager;
-(void)setCollectionLogger:(SPTCollectionLoggerImplementation *)arg1 ;
-(id)provideTouchPreviewProvider;
-(void)setupAdditionalSectionForViewController:(id)arg1 entityList:(id)arg2 ;
-(id)playerForViewURI:(id)arg1 featureIdentifier:(id)arg2 referrerIdentifier:(id)arg3 ;
-(id)trackContextPlayerForViewURI:(id)arg1 featureIdentifier:(id)arg2 referrerIdentifier:(id)arg3 ;
-(id)provideCacheplayTestManager;
-(id)provideCollectionArtistModelForURL:(id)arg1 referrerIdentifier:(id)arg2 ;
-(id)provideCollectionAlbumModelForURL:(id)arg1 referrerIdentifier:(id)arg2 ;
-(SPTCollectionOverviewNavigationModel *)collectionListModel;
-(void)setCollectionListModel:(SPTCollectionOverviewNavigationModel *)arg1 ;
-(id)provideContentListModel;
-(SPTCollectionCacheplayTestManagerImplementation *)cacheplayTestManager;
-(id)provideInternalRecentlyPlayedEntityList;
-(id)provideRecentlyPlayedPlaylistsEntityList;
-(void)setCacheplayTestManager:(SPTCollectionCacheplayTestManagerImplementation *)arg1 ;
-(void)registerRecentlyPlayedController;
-(void)setCollectionCosmosRouter:(SPTRouter *)arg1 ;
-(void)registerRecentlyPlayedResolverWithRouter:(id)arg1 ;
-(void)registerCollectionResolverWithRouter:(id)arg1 ;
-(void)registerLocalFilesResolverWithRouter:(id)arg1 ;
-(SPTPlaylistCore *)playlistCore;
-(void)unregisterLocalFilesResolverWithRouter:(id)arg1 ;
-(id)provideSyncManager;
-(id)additionalSectionForEntityList:(id)arg1 ;
-(id<SPTNewReleasesFeature>)upcomingReleasesFeature;
-(SPTCollectionRecentlyPlayedCosmosModel *)recentlyPlayedCosmosModel;
-(void)setRecentlyPlayedCosmosModel:(SPTCollectionRecentlyPlayedCosmosModel *)arg1 ;
-(NSMutableArray *)registeredEntityContentTypes;
-(void)registerCollectionEntityContentType:(unsigned)arg1 ;
-(id<SPTCollectionEntityList>)internalRecentlyPlayedEntityList;
-(id)provideRecentlyPlayedModel;
-(void)setInternalRecentlyPlayedEntityList:(id<SPTCollectionEntityList>)arg1 ;
-(id<SPTCollectionEntityList>)recentlyPlayedEntityList;
-(void)setRecentlyPlayedEntityList:(id<SPTCollectionEntityList>)arg1 ;
-(id<SPTCollectionEntityList>)recentlyPlayedPlaylistEntityList;
-(void)setRecentlyPlayedPlaylistEntityList:(id<SPTCollectionEntityList>)arg1 ;
-(id)provideRecentlyPlayedEntityList;
-(SPTCollectionTestManager *)testManager;
-(id<SPTMomentsFeature>)momentsFeature;
-(id)provideCollectedContextForAlbumURL:(id)arg1 ;
-(id)provideCollectedContextForArtistURL:(id)arg1 ;
-(id)provideCollectionController;
-(id)provideITunesLibraryManager;
-(id)provideShortcutItemsProvider;
-(id)provideSortingEntityManagerWithDelegate:(id)arg1 ;
-(char)isMobileLocalFilesImportEnabled;
-(void)registerCollectionContentListWithTitle:(id)arg1 icon:(int)arg2 URL:(id)arg3 order:(unsigned)arg4 ;
-(void)unregisterCollectionContentListWithTitle:(id)arg1 URL:(id)arg2 ;
-(id)provideNUXModiferForLocalFileImport;
-(id)provideCollectionArtistModelForURL:(id)arg1 ;
-(id)provideCollectionAlbumModelForURL:(id)arg1 ;
-(id)provideResolverForArtistView;
-(id)provideResolverForFollowModel;
-(SPTCollectionOfflineImageManager *)offlineImageManager;
-(void)setRegisteredEntityContentTypes:(NSMutableArray *)arg1 ;
-(SPTCollectionCacheplayEntityAdditionalSection *)overViewAdditionalSection;
-(void)setOverViewAdditionalSection:(SPTCollectionCacheplayEntityAdditionalSection *)arg1 ;
-(SPCollectionOfflineController *)collectionOfflineController;
-(void)setRecentlyPlayedController:(SPTRecentlyPlayedController *)arg1 ;
-(SPTCollection *)collection;
-(void)dealloc;
-(id)init;
-(id<SPTSettingsFeature>)settings;
-(void)load;
-(void)setSettings:(id<SPTSettingsFeature>)arg1 ;
-(SPTSyncManager *)syncManager;
-(void)setSyncManager:(SPTSyncManager *)arg1 ;
-(void)unload;
@end

