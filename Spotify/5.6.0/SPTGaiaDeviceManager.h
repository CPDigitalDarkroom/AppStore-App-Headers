/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:45:53 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/D2238F36-ED84-40F4-9CB2-8C71CACC8B47/Spotify.app/Spotify
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Spotify/Spotify-Structs.h>
#import <Spotify/SPTGaiaDeviceDelegate.h>
#import <Spotify/SPTGaiaDeviceStateManager.h>

@class SPTGaiaDevice, NSArray, SPTGaiaBonjourManager, NSPointerArray, NSString;

@interface SPTGaiaDeviceManager : NSObject <SPTGaiaDeviceDelegate, SPTGaiaDeviceStateManager> {

	shared_ptr<spotify::connect::GaiaManagerInterface>* _gaiaManager;
	Session* _session;
	shared_ptr<spotify::connect::GaiaConnectDeviceApi>* deviceAPI;
	scoped_connection* remote_transfer_connection;
	scoped_connection* device_map_connection;
	scoped_connection* connect_login_connection;
	scoped_connection* onboarding_connection;
	char _playingRemotely;
	char _canPlay;
	id delegate;
	NSArray* _devices;
	SPTGaiaDevice* _activeDevice;
	SPTGaiaDevice* _deviceBeingActivated;
	/*^block*/id _activationCallback;
	SPTGaiaBonjourManager* _bonjourManager;
	NSPointerArray* _stateObservers;

}

@property (assign,nonatomic) id delegate; 
@property (getter=isPlayingRemotely,nonatomic,readonly) char playingRemotely;                               //@synthesize playingRemotely=_playingRemotely - In the implementation block
@property (nonatomic,retain) NSArray * devices;                                                             //@synthesize devices=_devices - In the implementation block
@property (nonatomic,retain) SPTGaiaDevice * activeDevice;                                                  //@synthesize activeDevice=_activeDevice - In the implementation block
@property (nonatomic,retain) SPTGaiaDevice * deviceBeingActivated;                                          //@synthesize deviceBeingActivated=_deviceBeingActivated - In the implementation block
@property (getter=newlyDiscoveredDevices,nonatomic,readonly) NSArray * newlyDiscoveredDevices; 
@property (assign,nonatomic) char canPlay;                                                                  //@synthesize canPlay=_canPlay - In the implementation block
@property (setter=setAttach:,nonatomic,retain) NSString * attach; 
@property (nonatomic,copy) id activationCallback;                                                           //@synthesize activationCallback=_activationCallback - In the implementation block
@property (nonatomic,retain) SPTGaiaBonjourManager * bonjourManager;                                        //@synthesize bonjourManager=_bonjourManager - In the implementation block
@property (nonatomic,retain) NSPointerArray * stateObservers;                                               //@synthesize stateObservers=_stateObservers - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(char)isPlayingRemotely;
-(void)activateDevice:(id)arg1 withCallback:(/*^block*/id)arg2 ;
-(void)acknowledgeNewlyDiscovered;
-(char)searchForDevices;
-(void)clearNewlyDiscovered;
-(void)clearOnboardingFlows;
-(void)removeAllBonjourDevices;
-(SPTGaiaDevice *)deviceBeingActivated;
-(char)loginConnectDevice:(id)arg1 info:(id)arg2 ;
-(char)addOrUpdateConnectDevice:(id)arg1 info:(id)arg2 ;
-(char)removeConnectDevice:(id)arg1 ;
-(void)reportOnboardingFlow:(char)arg1 ;
-(shared_ptr<spotify::connect::GaiaManagerInterface>*)cpp;
-(void)removeDeviceWithServiceInfo:(id)arg1 ;
-(void)addDeviceWithServiceInfo:(id)arg1 ;
-(id)getOrCreateGaiaDeviceFromCpp:(shared_ptr<spotify::connect::GaiaDeviceInterface>*)arg1 ;
-(void)device:(id)arg1 reportedError:(id)arg2 ;
-(void)device:(id)arg1 volumeChanged:(float)arg2 ;
-(void)rebuildDeviceList;
-(SPTGaiaBonjourManager *)bonjourManager;
-(void)notifyActiveDeviceDidChange:(id)arg1 ;
-(void)notifyPlayingRemotelyDidChange:(char)arg1 ;
-(void)setDeviceBeingActivated:(SPTGaiaDevice *)arg1 ;
-(void)notifyDeviceBeingActivatedDidChange:(id)arg1 error:(id)arg2 ;
-(void)setActivationCallback:(id)arg1 ;
-(shared_ptr<spotify::connect::GaiaDeviceInterface>*)getActiveDeviceNonConst;
-(void)handleActiveDeviceChanged:(id)arg1 forceNotify:(char)arg2 ;
-(id)activationCallback;
-(void)notifyDeviceBeingOnboarded:(id)arg1 ;
-(void)notifyAvailableDevicesDidChange:(id)arg1 ;
-(shared_ptr<spotify::connect::GaiaDeviceInterface>*)getDeviceBeingActivatedNonConst;
-(void)handleDeviceBeingActivatedChanged:(id)arg1 ;
-(void)notifyDevice:(id)arg1 volumeDidChange:(float)arg2 ;
-(NSPointerArray *)stateObservers;
-(SposDict)coreDictionaryFromDeviceInfo:(id)arg1 ;
-(id)initWithGaiaManager:(shared_ptr<spotify::connect::GaiaManagerInterface>*)arg1 session:(Session*)arg2 offlineMode:(id)arg3 ;
-(void)deinitCpp;
-(void)remoteTransfer:(const shared_ptr<const spotify::connect::GaiaDeviceInterface>*)arg1 error:(int)arg2 ;
-(void)onboarding:(const shared_ptr<spotify::connect::GaiaDeviceInterface>*)arg1 ;
-(NSArray *)newlyDiscoveredDevices;
-(void)notifyConnectLoginStatusDidChange:(const basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)arg1 username:(const basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)arg2 blob:(const basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)arg3 clientKey:(const basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)arg4 tokenType:(const basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)arg5 ;
-(void)setBonjourManager:(SPTGaiaBonjourManager *)arg1 ;
-(void)setStateObservers:(NSPointerArray *)arg1 ;
-(void)setDevices:(NSArray *)arg1 ;
-(void)setDelegate:(id)arg1 ;
-(char)isEqual:(id)arg1 ;
-(unsigned)hash;
-(id)delegate;
-(void)addObserver:(id)arg1 ;
-(void)removeObserver:(id)arg1 ;
-(NSString *)attach;
-(void)setAttach:(NSString *)arg1 ;
-(SPTGaiaDevice *)activeDevice;
-(NSArray *)devices;
-(void)defaultsChanged:(id)arg1 ;
-(void)setActiveDevice:(SPTGaiaDevice *)arg1 ;
-(void)setCanPlay:(char)arg1 ;
-(char)canPlay;
@end

