/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:45:44 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/D2238F36-ED84-40F4-9CB2-8C71CACC8B47/Spotify.app/Spotify
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Spotify/SPTPlayerObserver.h>
#import <Spotify/SPTDailyMixManagerObserver.h>
#import <Spotify/SPTNowPlayingRemoteControlPolicy.h>

@protocol SPTPlayer;
@class SPTDailyMixManagerImplementation, SPTPlayerState, NSHashTable, NSString, NSArray;

@interface SPTDailyMixRemoteControlPolicy : NSObject <SPTPlayerObserver, SPTDailyMixManagerObserver, SPTNowPlayingRemoteControlPolicy> {

	char _useFeedbackUI;
	char _feedbackEnabled;
	id<SPTPlayer> _player;
	SPTDailyMixManagerImplementation* _dailyMixManager;
	SPTPlayerState* _currentState;
	int _currentFeedback;
	NSHashTable* _observers;

}

@property (nonatomic,retain) id<SPTPlayer> player;                                            //@synthesize player=_player - In the implementation block
@property (nonatomic,retain) SPTDailyMixManagerImplementation * dailyMixManager;              //@synthesize dailyMixManager=_dailyMixManager - In the implementation block
@property (assign,getter=isEnabled,nonatomic) char useFeedbackUI;                             //@synthesize useFeedbackUI=_useFeedbackUI - In the implementation block
@property (assign,getter=isFeedbackEnabled,nonatomic) char feedbackEnabled;                   //@synthesize feedbackEnabled=_feedbackEnabled - In the implementation block
@property (nonatomic,copy) SPTPlayerState * currentState;                                     //@synthesize currentState=_currentState - In the implementation block
@property (assign,nonatomic) int currentFeedback;                                             //@synthesize currentFeedback=_currentFeedback - In the implementation block
@property (nonatomic,retain) NSHashTable * observers;                                         //@synthesize observers=_observers - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) char shouldNextTrackCommandBeAvailable; 
@property (nonatomic,readonly) char shouldNextTrackCommandBeEnabled; 
@property (nonatomic,readonly) char shouldPreviousTrackCommandBeAvailable; 
@property (nonatomic,readonly) char shouldPreviousTrackCommandBeEnabled; 
@property (nonatomic,readonly) char shouldSkipBackwardCommandBeAvailable; 
@property (nonatomic,readonly) char shouldSkipBackwardCommandBeEnabled; 
@property (nonatomic,readonly) NSArray * skipBackwardCommandIntervals; 
@property (nonatomic,readonly) char shouldSkipForwardCommandBeAvailable; 
@property (nonatomic,readonly) char shouldSkipForwardCommandBeEnabled; 
@property (nonatomic,readonly) NSArray * skipForwardCommandIntervals; 
@property (nonatomic,readonly) char shouldSeekForwardCommandBeAvailable; 
@property (nonatomic,readonly) char shouldSeekForwardCommandBeEnabled; 
@property (nonatomic,readonly) char shouldSeekBackwardCommandBeAvailable; 
@property (nonatomic,readonly) char shouldSeekBackwardCommandBeEnabled; 
@property (nonatomic,readonly) char shouldLikeCommandBeAvailable; 
@property (nonatomic,readonly) char shouldLikeCommandBeEnabled; 
@property (nonatomic,readonly) char shouldLikeCommandBeSelected; 
@property (nonatomic,readonly) NSString * localizedTitleForLikeCommand; 
@property (nonatomic,readonly) char shouldDislikeCommandBeAvailable; 
@property (nonatomic,readonly) char shouldDislikeCommandBeEnabled; 
@property (nonatomic,readonly) char shouldDislikeCommandBeSelected; 
@property (nonatomic,readonly) NSString * localizedTitleForDislikeCommand; 
@property (nonatomic,readonly) char shouldBookmarkCommandBeAvailable; 
@property (nonatomic,readonly) char shouldBookmarkCommandBeEnabled; 
@property (nonatomic,readonly) NSString * localizedTitleForBookmarkCommand; 
-(void)player:(id)arg1 stateDidChange:(id)arg2 ;
-(SPTDailyMixManagerImplementation *)dailyMixManager;
-(char)shouldNextTrackCommandBeAvailable;
-(char)shouldNextTrackCommandBeEnabled;
-(char)shouldPreviousTrackCommandBeAvailable;
-(char)shouldPreviousTrackCommandBeEnabled;
-(char)shouldSeekForwardCommandBeAvailable;
-(char)shouldSeekForwardCommandBeEnabled;
-(char)shouldSeekBackwardCommandBeAvailable;
-(char)shouldSeekBackwardCommandBeEnabled;
-(void)bookmarkButtonPressedWithCompletion:(/*^block*/id)arg1 ;
-(void)notifyObserversThatPolicyDidChange;
-(void)removeRemoteControlStateUpdateOserver:(id)arg1 ;
-(void)addRemoteControlStateUpdateOserver:(id)arg1 ;
-(char)shouldSkipBackwardCommandBeAvailable;
-(char)shouldSkipBackwardCommandBeEnabled;
-(NSArray *)skipBackwardCommandIntervals;
-(char)shouldSkipForwardCommandBeAvailable;
-(char)shouldSkipForwardCommandBeEnabled;
-(NSArray *)skipForwardCommandIntervals;
-(char)shouldLikeCommandBeAvailable;
-(char)shouldLikeCommandBeEnabled;
-(NSString *)localizedTitleForLikeCommand;
-(char)shouldDislikeCommandBeAvailable;
-(char)shouldDislikeCommandBeEnabled;
-(NSString *)localizedTitleForDislikeCommand;
-(char)shouldBookmarkCommandBeAvailable;
-(char)shouldBookmarkCommandBeEnabled;
-(NSString *)localizedTitleForBookmarkCommand;
-(void)skipBackwardWithInterval:(double)arg1 ;
-(void)skipForwardWithInterval:(double)arg1 ;
-(void)likeButtonPressedWithCompletion:(/*^block*/id)arg1 ;
-(void)dislikeButtonPressedWithCompletion:(/*^block*/id)arg1 ;
-(char)shouldLikeCommandBeSelected;
-(char)shouldDislikeCommandBeSelected;
-(void)setDailyMixManager:(SPTDailyMixManagerImplementation *)arg1 ;
-(id)initWithPlayer:(id)arg1 dailyMixManager:(id)arg2 ;
-(void)setUseFeedbackUI:(char)arg1 ;
-(void)dailyMixManager:(id)arg1 feedbackChangedForTrackURL:(id)arg2 trackFeedback:(int)arg3 ;
-(char)isFeedbackEnabled;
-(int)currentFeedback;
-(void)setCurrentFeedback:(int)arg1 ;
-(void)setFeedbackEnabled:(char)arg1 ;
-(void)setPlayer:(id<SPTPlayer>)arg1 ;
-(id<SPTPlayer>)player;
-(void)dealloc;
-(SPTPlayerState *)currentState;
-(char)isEnabled;
-(void)setCurrentState:(SPTPlayerState *)arg1 ;
-(void)setObservers:(NSHashTable *)arg1 ;
-(NSHashTable *)observers;
@end

