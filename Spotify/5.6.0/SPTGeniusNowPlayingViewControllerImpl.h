/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:45:35 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/D2238F36-ED84-40F4-9CB2-8C71CACC8B47/Spotify.app/Spotify
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <UIKit/UIViewController.h>
#import <UIKit/UIGestureRecognizerDelegate.h>
#import <Spotify/SPTGeniusNowPlayingViewController.h>

@protocol SPTGeniusNowPlayingViewControllerDelegate, SPTImageLoaderFactory, SPTPlayer;
@class SPTGeniusService, SPTTheme, SPTGeniusCardManagerImplementation, NSURL, SPTGeniusLoggingService, UIGestureRecognizer, SPTGeniusNowPlayingViewCoverArtView, SPTGeniusCardsViewController, NSTimer, NSString;

@interface SPTGeniusNowPlayingViewControllerImpl : UIViewController <UIGestureRecognizerDelegate, SPTGeniusNowPlayingViewController> {

	char _active;
	char _geniusFeatureEnabled;
	char _geniusEnabled;
	char _contextEnabled;
	char _contextChecked;
	char _showCardsViewOnTop;
	char _screenLockingDisabled;
	char _hasInteracted;
	char _userWantsGenius;
	id<SPTGeniusNowPlayingViewControllerDelegate> delegate;
	SPTGeniusService* _geniusService;
	SPTTheme* _theme;
	SPTGeniusCardManagerImplementation* _cardManager;
	NSURL* _trackURI;
	int _contextType;
	id<SPTImageLoaderFactory> _imageLoaderFactory;
	SPTGeniusLoggingService* _loggingService;
	id<SPTPlayer> _player;
	UIGestureRecognizer* _gestureRecognizer;
	SPTGeniusNowPlayingViewCoverArtView* _coverArtView;
	SPTGeniusCardsViewController* _cardsViewController;
	NSTimer* _animationTimer;

}

@property (nonatomic,retain) SPTGeniusService * geniusService;                                           //@synthesize geniusService=_geniusService - In the implementation block
@property (assign,nonatomic) char geniusFeatureEnabled;                                                  //@synthesize geniusFeatureEnabled=_geniusFeatureEnabled - In the implementation block
@property (nonatomic,readonly) SPTTheme * theme;                                                         //@synthesize theme=_theme - In the implementation block
@property (nonatomic,readonly) SPTGeniusCardManagerImplementation * cardManager;                         //@synthesize cardManager=_cardManager - In the implementation block
@property (nonatomic,retain) NSURL * trackURI;                                                           //@synthesize trackURI=_trackURI - In the implementation block
@property (assign,getter=isGeniusEnabled,nonatomic) char geniusEnabled;                                  //@synthesize geniusEnabled=_geniusEnabled - In the implementation block
@property (assign,nonatomic) char contextEnabled;                                                        //@synthesize contextEnabled=_contextEnabled - In the implementation block
@property (assign,nonatomic) char contextChecked;                                                        //@synthesize contextChecked=_contextChecked - In the implementation block
@property (assign,nonatomic) int contextType;                                                            //@synthesize contextType=_contextType - In the implementation block
@property (nonatomic,retain) id<SPTImageLoaderFactory> imageLoaderFactory;                               //@synthesize imageLoaderFactory=_imageLoaderFactory - In the implementation block
@property (nonatomic,retain) SPTGeniusLoggingService * loggingService;                                   //@synthesize loggingService=_loggingService - In the implementation block
@property (nonatomic,retain) id<SPTPlayer> player;                                                       //@synthesize player=_player - In the implementation block
@property (nonatomic,retain) UIGestureRecognizer * gestureRecognizer;                                    //@synthesize gestureRecognizer=_gestureRecognizer - In the implementation block
@property (assign,nonatomic) char showCardsViewOnTop;                                                    //@synthesize showCardsViewOnTop=_showCardsViewOnTop - In the implementation block
@property (nonatomic,retain) SPTGeniusNowPlayingViewCoverArtView * coverArtView;                         //@synthesize coverArtView=_coverArtView - In the implementation block
@property (nonatomic,retain) SPTGeniusCardsViewController * cardsViewController;                         //@synthesize cardsViewController=_cardsViewController - In the implementation block
@property (assign,nonatomic) char screenLockingDisabled;                                                 //@synthesize screenLockingDisabled=_screenLockingDisabled - In the implementation block
@property (nonatomic,retain) NSTimer * animationTimer;                                                   //@synthesize animationTimer=_animationTimer - In the implementation block
@property (assign,nonatomic) char hasInteracted;                                                         //@synthesize hasInteracted=_hasInteracted - In the implementation block
@property (assign,nonatomic) char userWantsGenius;                                                       //@synthesize userWantsGenius=_userWantsGenius - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (assign,getter=isActive,nonatomic) char active;                                                //@synthesize active=_active - In the implementation block
@property (assign,nonatomic,__weak) id<SPTGeniusNowPlayingViewControllerDelegate> delegate; 
-(id<SPTImageLoaderFactory>)imageLoaderFactory;
-(void)setImageLoaderFactory:(id<SPTImageLoaderFactory>)arg1 ;
-(NSURL *)trackURI;
-(SPTGeniusService *)geniusService;
-(void)setGeniusService:(SPTGeniusService *)arg1 ;
-(id)initWithGeniusService:(id)arg1 imageLoaderFactory:(id)arg2 loggingService:(id)arg3 player:(id)arg4 theme:(id)arg5 cardManager:(id)arg6 ;
-(SPTGeniusCardManagerImplementation *)cardManager;
-(void)appWillBecomeActive:(id)arg1 ;
-(void)appWillEnterBackground:(id)arg1 ;
-(SPTGeniusCardsViewController *)cardsViewController;
-(void)setCoverArtView:(SPTGeniusNowPlayingViewCoverArtView *)arg1 ;
-(SPTGeniusLoggingService *)loggingService;
-(void)setCardsViewController:(SPTGeniusCardsViewController *)arg1 ;
-(SPTGeniusNowPlayingViewCoverArtView *)coverArtView;
-(void)gestureRecognizerDidReceiveEvent:(id)arg1 ;
-(void)updateScreenLocking;
-(char)contextChecked;
-(char)contextEnabled;
-(void)handleGeniusEnabledActiveCardForContextEnabled:(char)arg1 ;
-(void)setContextChecked:(char)arg1 ;
-(void)setContextType:(int)arg1 ;
-(void)setContextEnabled:(char)arg1 ;
-(void)showCardsViewOnTop:(char)arg1 animated:(char)arg2 ;
-(char)hasInteracted;
-(char)userWantsGenius;
-(void)bringCardsViewToFrontDelayed;
-(void)bounceCoverArtDelayed;
-(void)bringCardsViewToFront;
-(void)bounceCoverArt;
-(void)setGeniusEnabled:(char)arg1 ;
-(void)setHasInteracted:(char)arg1 ;
-(void)setUserWantsGenius:(char)arg1 ;
-(void)setTrackURI:(NSURL *)arg1 ;
-(void)annotationsDidLoad:(id)arg1 trackURI:(id)arg2 ;
-(char)showCardsViewOnTop;
-(char)screenLockingDisabled;
-(void)setScreenLockingDisabled:(char)arg1 ;
-(void)didBeginDragging;
-(void)logSwipeForContextEnabled:(char)arg1 showGenius:(char)arg2 trackURI:(id)arg3 ;
-(void)didEndDragging;
-(void)resetWithTrackURI:(id)arg1 imageURL:(id)arg2 ;
-(void)setShowCardsViewOnTop:(char)arg1 ;
-(char)geniusFeatureEnabled;
-(void)setGeniusFeatureEnabled:(char)arg1 ;
-(void)setLoggingService:(SPTGeniusLoggingService *)arg1 ;
-(char)isGeniusEnabled;
-(void)setPlayer:(id<SPTPlayer>)arg1 ;
-(id<SPTPlayer>)player;
-(void)setDelegate:(id<SPTGeniusNowPlayingViewControllerDelegate>)arg1 ;
-(void)dealloc;
-(id<SPTGeniusNowPlayingViewControllerDelegate>)delegate;
-(void)setGestureRecognizer:(UIGestureRecognizer *)arg1 ;
-(UIGestureRecognizer *)gestureRecognizer;
-(char)gestureRecognizerShouldBegin:(id)arg1 ;
-(char)isActive;
-(void)viewWillLayoutSubviews;
-(void)viewDidLoad;
-(void)setActive:(char)arg1 ;
-(id)topView;
-(id)backView;
-(int)contextType;
-(SPTTheme *)theme;
-(NSTimer *)animationTimer;
-(void)setAnimationTimer:(NSTimer *)arg1 ;
@end

