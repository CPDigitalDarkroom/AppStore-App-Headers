/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:45:43 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/D2238F36-ED84-40F4-9CB2-8C71CACC8B47/Spotify.app/Spotify
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Spotify/SPTPlayerObserver.h>
#import <Spotify/SPTPlayerQueueObserver.h>
#import <Spotify/SPTProductStateObserver.h>
#import <Spotify/SPTNowPlayingEntityDecorationControllerObserver.h>
#import <Spotify/SPTQueueViewModel.h>

@protocol SPTPlayer, SPTProductState, SPTQueuePlaybackDelegateRegistry, SPTQueueViewModelDelegate, OS_dispatch_source, OS_dispatch_queue, SPTLogCenterProtocol;
@class SPTQueueViewModelDataSource, SPTPlayerContext, SPTNowPlayingEntityDecorationController, NSObject, SPTPlayerQueue, NSString;

@interface SPTQueueViewModelImplementation : NSObject <SPTPlayerObserver, SPTPlayerQueueObserver, SPTProductStateObserver, SPTNowPlayingEntityDecorationControllerObserver, SPTQueueViewModel> {

	id<SPTPlayer> _player;
	id<SPTProductState> _productState;
	id<SPTQueuePlaybackDelegateRegistry> _playbackDelegateRegistry;
	char _updatesEnabled;
	SPTNowPlayingEntityDecorationController* _entityDecorationController;
	char _disallowInsertingIntoNextTracks;
	char _disallowInsertingIntoContextTracks;
	char _disallowReorderingInNextTracks;
	char _disallowReorderingInContextTracks;
	char _disallowRemovingFromNextTracks;
	char _disallowRemovingFromContextTracks;
	char _inhibitUpdates;
	id<SPTQueueViewModelDelegate> _delegate;
	SPTPlayerContext* _stagedContext;
	unsigned _viewMode;
	NSObject*<OS_dispatch_source> _timer;
	NSObject*<OS_dispatch_queue> _queueFetchQueue;
	SPTQueueViewModelDataSource* _dataSource;
	SPTPlayerQueue* _queue;
	id<SPTLogCenterProtocol> _logCenter;

}

@property (nonatomic,retain) NSObject*<OS_dispatch_source> timer;                        //@synthesize timer=_timer - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> queueFetchQueue;               //@synthesize queueFetchQueue=_queueFetchQueue - In the implementation block
@property (nonatomic,retain) SPTQueueViewModelDataSource * dataSource;                   //@synthesize dataSource=_dataSource - In the implementation block
@property (nonatomic,retain) SPTPlayerQueue * queue;                                     //@synthesize queue=_queue - In the implementation block
@property (assign,nonatomic) char inhibitUpdates;                                        //@synthesize inhibitUpdates=_inhibitUpdates - In the implementation block
@property (assign,nonatomic) char disallowReorderingInContextTracks;                     //@synthesize disallowReorderingInContextTracks=_disallowReorderingInContextTracks - In the implementation block
@property (assign,nonatomic,__weak) id<SPTLogCenterProtocol> logCenter;                  //@synthesize logCenter=_logCenter - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,retain) SPTPlayerContext * stagedContext; 
@property (assign,nonatomic) unsigned viewMode;                                          //@synthesize viewMode=_viewMode - In the implementation block
@property (assign,nonatomic,__weak) id<SPTQueueViewModelDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
-(id<SPTLogCenterProtocol>)logCenter;
-(void)setLogCenter:(id<SPTLogCenterProtocol>)arg1 ;
-(void)productState:(id)arg1 stateDidChange:(id)arg2 ;
-(void)player:(id)arg1 stateDidChange:(id)arg2 fromState:(id)arg3 ;
-(id)contextURI;
-(void)player:(id)arg1 queueDidChange:(id)arg2 ;
-(SPTPlayerContext *)stagedContext;
-(void)entityDecorationControllerDidUpdate:(id)arg1 ;
-(void)setStagedContext:(SPTPlayerContext *)arg1 ;
-(void)setViewMode:(unsigned)arg1 animated:(char)arg2 ;
-(void)performUpdates:(/*^block*/id)arg1 completion:(/*^block*/id)arg2 ;
-(void)playStagedContext;
-(id)shuffleQueueTracks:(id)arg1 ;
-(char)inhibitUpdates;
-(void)updatePlayerQueueWithDataSource:(id)arg1 ;
-(id)contextURIForViewMode:(unsigned)arg1 ;
-(void)playStagedTrackAtIndex:(unsigned)arg1 ignoreShuffle:(char)arg2 ;
-(void)notifyDelegateDebounced;
-(NSObject*<OS_dispatch_queue>)queueFetchQueue;
-(void)player:(id)arg1 updateWithChangeQueue:(id)arg2 ;
-(id)unshuffleQueueTracks:(id)arg1 ;
-(id)playerTracksForDataSource:(id)arg1 ;
-(void)setInhibitUpdates:(char)arg1 ;
-(char)disallowReorderingInContextTracks;
-(void)playCurrentTrack;
-(id)playUpNextTrackAtIndex:(unsigned)arg1 ;
-(id)playFutureTrackAtIndex:(unsigned)arg1 ;
-(void)playStagedTrackAtIndex:(unsigned)arg1 ;
-(id)moveTrackAtIndex:(unsigned)arg1 inSection:(unsigned)arg2 toIndex:(unsigned)arg3 toSection:(unsigned)arg4 ;
-(id)removeTracks:(id)arg1 ;
-(id)addFutureTracksToUpNext:(id)arg1 ;
-(id)initWithPlayer:(id)arg1 productState:(id)arg2 playbackDelegateRegistry:(id)arg3 entityDecorationController:(id)arg4 logCenter:(id)arg5 ;
-(void)setQueueFetchQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(void)setDisallowReorderingInContextTracks:(char)arg1 ;
-(SPTPlayerQueue *)queue;
-(void)setQueue:(SPTPlayerQueue *)arg1 ;
-(void)setDataSource:(SPTQueueViewModelDataSource *)arg1 ;
-(void)setDelegate:(id<SPTQueueViewModelDelegate>)arg1 ;
-(SPTQueueViewModelDataSource *)dataSource;
-(id<SPTQueueViewModelDelegate>)delegate;
-(void)disableUpdates;
-(void)enableUpdates;
-(unsigned)viewMode;
-(void)setTimer:(NSObject*<OS_dispatch_source>)arg1 ;
-(NSObject*<OS_dispatch_source>)timer;
-(void)setViewMode:(unsigned)arg1 ;
@end

