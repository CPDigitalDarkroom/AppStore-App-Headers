/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:45:26 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/D2238F36-ED84-40F4-9CB2-8C71CACC8B47/Spotify.app/Spotify
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Spotify/SDLAbstractTransport.h>
#import <Spotify/SDLIAPSessionDelegate.h>

@protocol OS_dispatch_queue;
@class NSObject, SDLIAPSession, SDLTimer;

@interface SDLIAPTransport : SDLAbstractTransport <SDLIAPSessionDelegate> {

	NSObject*<OS_dispatch_queue> _transmit_queue;
	char _alreadyDestructed;
	char _sessionSetupInProgress;
	SDLIAPSession* _controlSession;
	SDLIAPSession* _session;
	int _retryCounter;
	SDLTimer* _protocolIndexTimer;

}

@property (retain) SDLIAPSession * controlSession;              //@synthesize controlSession=_controlSession - In the implementation block
@property (retain) SDLIAPSession * session;                     //@synthesize session=_session - In the implementation block
@property (assign) int retryCounter;                            //@synthesize retryCounter=_retryCounter - In the implementation block
@property (assign) char sessionSetupInProgress;                 //@synthesize sessionSetupInProgress=_sessionSetupInProgress - In the implementation block
@property (retain) SDLTimer * protocolIndexTimer;               //@synthesize protocolIndexTimer=_protocolIndexTimer - In the implementation block
-(void)onSessionInitializationCompleteForSession:(id)arg1 ;
-(void)onSessionStreamsEnded:(id)arg1 ;
-(void)sdl_startEventListening;
-(void)sdl_accessoryConnected:(id)arg1 ;
-(void)sdl_accessoryDisconnected:(id)arg1 ;
-(void)sdl_applicationWillEnterForeground:(id)arg1 ;
-(void)setRetryCounter:(int)arg1 ;
-(void)setSessionSetupInProgress:(char)arg1 ;
-(char)sessionSetupInProgress;
-(void)sdl_establishSession;
-(int)retryCounter;
-(void)sdl_createIAPControlSessionWithAccessory:(id)arg1 ;
-(void)sdl_createIAPDataSessionWithAccessory:(id)arg1 forProtocol:(id)arg2 ;
-(void)setControlSession:(SDLIAPSession *)arg1 ;
-(SDLIAPSession *)controlSession;
-(SDLTimer *)protocolIndexTimer;
-(void)setProtocolIndexTimer:(SDLTimer *)arg1 ;
-(void)sdl_retryEstablishSession;
-(/*^block*/id)sdl_controlStreamHasBytesHandlerForAccessory:(id)arg1 ;
-(/*^block*/id)sdl_controlStreamEndedHandler;
-(/*^block*/id)sdl_controlStreamErroredHandler;
-(/*^block*/id)sdl_dataStreamHasBytesHandler;
-(/*^block*/id)sdl_dataStreamEndedHandler;
-(/*^block*/id)sdl_dataStreamErroredHandler;
-(void)sdl_stopEventListening;
-(void)sdl_destructObjects;
-(void)dispose;
-(SDLIAPSession *)session;
-(void)dealloc;
-(id)init;
-(void)connect;
-(void)disconnect;
-(void)setSession:(SDLIAPSession *)arg1 ;
-(double)retryDelay;
-(void)sendData:(id)arg1 ;
@end

