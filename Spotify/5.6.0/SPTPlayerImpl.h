/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:45:54 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/D2238F36-ED84-40F4-9CB2-8C71CACC8B47/Spotify.app/Spotify
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Spotify/SPTPlayerSubscriptionObserver.h>
#import <Spotify/SPTPlayer.h>

@protocol SPTResolver, OS_dispatch_queue, SPTPlayerLocalObservers;
@class SPTPlayerContext, NSURL, NSString, SPTPlayerState, NSObject, NSHashTable, SPTPlayerSubscription;

@interface SPTPlayerImpl : NSObject <SPTPlayerSubscriptionObserver, SPTPlayer> {

	id<SPTResolver> _resolver;
	NSObject*<OS_dispatch_queue> _queue;
	NSString* _featureIdentifier;
	NSString* _featureVersion;
	NSHashTable* _observers;
	NSHashTable* _queueObservers;
	SPTPlayerState* _lastState;
	/*^block*/id _timeGetter;
	SPTPlayerSubscription* _subscription;
	NSURL* _viewURI;
	NSString* _referrerIdentifier;
	id<SPTPlayerLocalObservers> _localObservers;

}

@property (nonatomic,retain) id<SPTPlayerLocalObservers> localObservers;              //@synthesize localObservers=_localObservers - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,retain) SPTPlayerContext * stagedContext; 
@property (nonatomic,copy,readonly) NSURL * viewURI;                                  //@synthesize viewURI=_viewURI - In the implementation block
@property (nonatomic,copy,readonly) NSString * featureIdentifier;                     //@synthesize featureIdentifier=_featureIdentifier - In the implementation block
@property (nonatomic,copy,readonly) NSString * referrerIdentifier;                    //@synthesize referrerIdentifier=_referrerIdentifier - In the implementation block
@property (nonatomic,copy,readonly) SPTPlayerState * state; 
+(id)makeErrorWithLocalizedString:(id)arg1 ;
+(id)failedTaskWithLocalizedErrorString:(id)arg1 ;
+(id)makeRequestWithAction:(id)arg1 suffix:(id)arg2 body:(id)arg3 ;
+(id)errorRequest;
+(id)requestHeaders;
-(NSString *)featureIdentifier;
-(NSString *)referrerIdentifier;
-(NSURL *)viewURI;
-(void)fetchState:(/*^block*/id)arg1 on:(id)arg2 ;
-(void)addPlayerObserver:(id)arg1 ;
-(void)removePlayerObserver:(id)arg1 ;
-(id)playContext:(id)arg1 options:(id)arg2 viewURI:(id)arg3 ;
-(id)skipToNextTrackWithOptions:(id)arg1 ;
-(id)playContext:(id)arg1 options:(id)arg2 ;
-(id)setShufflingContext:(char)arg1 ;
-(id)seekTo:(double)arg1 ;
-(id)skipToPreviousTrackWithOptions:(id)arg1 ;
-(id)setRepeatingContext:(char)arg1 ;
-(id)setRepeatingTrack:(char)arg1 ;
-(void)addStagedContextObserver:(id)arg1 ;
-(void)addPlayerQueueObserver:(id)arg1 ;
-(SPTPlayerContext *)stagedContext;
-(void)setStagedContext:(SPTPlayerContext *)arg1 ;
-(void)fetchQueue:(/*^block*/id)arg1 on:(id)arg2 ;
-(id)initWithResolver:(id)arg1 queue:(id)arg2 playerSubscription:(id)arg3 localObservers:(id)arg4 viewURI:(id)arg5 referrerIdentifier:(id)arg6 featureIdentifier:(id)arg7 featureVersion:(id)arg8 ;
-(void)removePlayerQueueObserver:(id)arg1 ;
-(id)skipToNextTrackWithOptions:(id)arg1 track:(id)arg2 ;
-(id)skipToPreviousTrackWithOptions:(id)arg1 track:(id)arg2 ;
-(id)initWithResolver:(id)arg1 queue:(id)arg2 timeGetter:(/*^block*/id)arg3 playerSubscription:(id)arg4 localObservers:(id)arg5 viewURI:(id)arg6 referrerIdentifier:(id)arg7 featureIdentifier:(id)arg8 featureVersion:(id)arg9 ;
-(id)loggingParams;
-(id)sendRequestWithAction:(id)arg1 parameters:(id)arg2 ;
-(id)playOriginWithViewURIOverride:(id)arg1 externalReferrer:(id)arg2 ;
-(id)playOrPrepareContext:(id)arg1 options:(id)arg2 viewURI:(id)arg3 externalReferrer:(id)arg4 prepare:(char)arg5 ;
-(id)sendRequestWithAction:(id)arg1 ;
-(id)performPutWithEndpointSuffix:(id)arg1 body:(id)arg2 ;
-(void)getOrSubQueue:(/*^block*/id)arg1 action:(id)arg2 ;
-(void)emitStateUpdate:(id)arg1 oldState:(id)arg2 observer:(id)arg3 ;
-(void)globalPlayerSubscription:(id)arg1 gotStateUpdate:(id)arg2 ;
-(id)globalPlayerSubscription:(id)arg1 parseStateUpdate:(id)arg2 ;
-(void)probePlayContext:(id)arg1 options:(id)arg2 viewURI:(id)arg3 externalReferrer:(id)arg4 callback:(/*^block*/id)arg5 on:(id)arg6 ;
-(id)playContext:(id)arg1 options:(id)arg2 externalReferrer:(id)arg3 ;
-(id)preparePlaybackOfContext:(id)arg1 options:(id)arg2 viewURI:(id)arg3 ;
-(id)initWithResolver:(id)arg1 queue:(id)arg2 timeGetter:(/*^block*/id)arg3 localObservers:(id)arg4 viewURI:(id)arg5 referrerIdentifier:(id)arg6 featureIdentifier:(id)arg7 featureVersion:(id)arg8 ;
-(void)setLocalObservers:(id<SPTPlayerLocalObservers>)arg1 ;
-(id<SPTPlayerLocalObservers>)localObservers;
-(id)restore:(id)arg1 ;
-(id)save;
-(id)setQueue:(id)arg1 ;
-(SPTPlayerState *)state;
-(id)stop;
-(id)resume;
-(char)hasObserver:(id)arg1 ;
-(id)pause:(id)arg1 ;
-(id)updateWithContext:(id)arg1 ;
@end

