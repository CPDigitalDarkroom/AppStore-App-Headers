/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:45:52 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/D2238F36-ED84-40F4-9CB2-8C71CACC8B47/Spotify.app/Spotify
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Spotify/SPTDataLoaderRequestResponseHandlerDelegate.h>
#import <Spotify/SPTDataLoaderCancellationTokenDelegate.h>
#import <libobjc.A.dylib/NSURLSessionDataDelegate.h>
#import <libobjc.A.dylib/NSURLSessionTaskDelegate.h>

@protocol SPTDataLoaderCancellationTokenFactory;
@class SPTDataLoaderRateLimiter, SPTDataLoaderResolver, NSURLSession, NSOperationQueue, NSMutableArray, NSMapTable, SPTDataLoaderServerTrustPolicy, NSString;

@interface SPTDataLoaderService : NSObject <SPTDataLoaderRequestResponseHandlerDelegate, SPTDataLoaderCancellationTokenDelegate, NSURLSessionDataDelegate, NSURLSessionTaskDelegate> {

	char _allCertificatesAllowed;
	SPTDataLoaderRateLimiter* _rateLimiter;
	SPTDataLoaderResolver* _resolver;
	id<SPTDataLoaderCancellationTokenFactory> _cancellationTokenFactory;
	NSURLSession* _session;
	NSOperationQueue* _sessionQueue;
	NSMutableArray* _handlers;
	NSMapTable* _consumptionObservers;
	SPTDataLoaderServerTrustPolicy* _serverTrustPolicy;

}

@property (assign,getter=areAllCertificatesAllowed,nonatomic) char allCertificatesAllowed;                    //@synthesize allCertificatesAllowed=_allCertificatesAllowed - In the implementation block
@property (nonatomic,retain) SPTDataLoaderRateLimiter * rateLimiter;                                          //@synthesize rateLimiter=_rateLimiter - In the implementation block
@property (nonatomic,retain) SPTDataLoaderResolver * resolver;                                                //@synthesize resolver=_resolver - In the implementation block
@property (nonatomic,retain) id<SPTDataLoaderCancellationTokenFactory> cancellationTokenFactory;              //@synthesize cancellationTokenFactory=_cancellationTokenFactory - In the implementation block
@property (nonatomic,retain) NSURLSession * session;                                                          //@synthesize session=_session - In the implementation block
@property (nonatomic,retain) NSOperationQueue * sessionQueue;                                                 //@synthesize sessionQueue=_sessionQueue - In the implementation block
@property (nonatomic,retain) NSMutableArray * handlers;                                                       //@synthesize handlers=_handlers - In the implementation block
@property (nonatomic,retain) NSMapTable * consumptionObservers;                                               //@synthesize consumptionObservers=_consumptionObservers - In the implementation block
@property (nonatomic,retain) SPTDataLoaderServerTrustPolicy * serverTrustPolicy;                              //@synthesize serverTrustPolicy=_serverTrustPolicy - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)dataLoaderServiceWithUserAgent:(id)arg1 rateLimiter:(id)arg2 resolver:(id)arg3 customURLProtocolClasses:(id)arg4 ;
-(void)addConsumptionObserver:(id)arg1 on:(id)arg2 ;
-(id)createDataLoaderFactoryWithAuthorisers:(id)arg1 ;
-(void)cancellationTokenDidCancel:(id)arg1 ;
-(void)removeConsumptionObserver:(id)arg1 ;
-(id)initWithUserAgent:(id)arg1 rateLimiter:(id)arg2 resolver:(id)arg3 customURLProtocolClasses:(id)arg4 ;
-(NSMapTable *)consumptionObservers;
-(id<SPTDataLoaderCancellationTokenFactory>)cancellationTokenFactory;
-(void)performRequest:(id)arg1 requestResponseHandler:(id)arg2 ;
-(id)handlerForTask:(id)arg1 ;
-(char)areAllCertificatesAllowed;
-(SPTDataLoaderServerTrustPolicy *)serverTrustPolicy;
-(void)setAllCertificatesAllowed:(char)arg1 ;
-(void)setCancellationTokenFactory:(id<SPTDataLoaderCancellationTokenFactory>)arg1 ;
-(void)setConsumptionObservers:(NSMapTable *)arg1 ;
-(void)setServerTrustPolicy:(SPTDataLoaderServerTrustPolicy *)arg1 ;
-(id)requestResponseHandler:(id)arg1 performRequest:(id)arg2 ;
-(void)requestResponseHandler:(id)arg1 authorisedRequest:(id)arg2 ;
-(void)requestResponseHandler:(id)arg1 failedToAuthoriseRequest:(id)arg2 error:(id)arg3 ;
-(void)cancelAllLoads;
-(void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveResponse:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)URLSession:(id)arg1 dataTask:(id)arg2 didBecomeDownloadTask:(id)arg3 ;
-(void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveData:(id)arg3 ;
-(void)URLSession:(id)arg1 dataTask:(id)arg2 willCacheResponse:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)URLSession:(id)arg1 task:(id)arg2 willPerformHTTPRedirection:(id)arg3 newRequest:(id)arg4 completionHandler:(/*^block*/id)arg5 ;
-(void)URLSession:(id)arg1 task:(id)arg2 didReceiveChallenge:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3 ;
-(void)setHandlers:(NSMutableArray *)arg1 ;
-(NSMutableArray *)handlers;
-(NSURLSession *)session;
-(void)dealloc;
-(void)setSession:(NSURLSession *)arg1 ;
-(NSOperationQueue *)sessionQueue;
-(SPTDataLoaderRateLimiter *)rateLimiter;
-(void)setRateLimiter:(SPTDataLoaderRateLimiter *)arg1 ;
-(SPTDataLoaderResolver *)resolver;
-(void)setResolver:(SPTDataLoaderResolver *)arg1 ;
-(void)setSessionQueue:(NSOperationQueue *)arg1 ;
@end

