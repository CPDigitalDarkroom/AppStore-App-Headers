/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:45:25 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/D2238F36-ED84-40F4-9CB2-8C71CACC8B47/Spotify.app/Spotify
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol OS_dispatch_queue;
#import <Spotify/Spotify-Structs.h>
@class NSData, NSObject, MPVolumeView;

@interface GNSAudioPlayer : NSObject {

	char _systemVolumeChanged;
	NSData* _token;
	OpaqueAudioQueueRef _audioQueue;
	NSObject*<OS_dispatch_queue> _audioPlayerQueue;
	float _volume;
	float _systemVolume;
	MPVolumeView* _volumeView;
	char* _pcmData;
	int _pcmDataLength;
	char* _pcmDataStartTransition;
	int _pcmDataStartTransitionLength;
	float _sampleRate;

}

@property (nonatomic,retain) NSData * token;                                             //@synthesize token=_token - In the implementation block
@property (assign,nonatomic) OpaqueAudioQueueRef audioQueue;                             //@synthesize audioQueue=_audioQueue - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> audioPlayerQueue;              //@synthesize audioPlayerQueue=_audioPlayerQueue - In the implementation block
@property (assign,nonatomic) float volume;                                               //@synthesize volume=_volume - In the implementation block
@property (assign,nonatomic) float systemVolume;                                         //@synthesize systemVolume=_systemVolume - In the implementation block
@property (assign,nonatomic) char systemVolumeChanged;                                   //@synthesize systemVolumeChanged=_systemVolumeChanged - In the implementation block
@property (nonatomic,retain) MPVolumeView * volumeView;                                  //@synthesize volumeView=_volumeView - In the implementation block
@property (assign,nonatomic) char* pcmData;                                              //@synthesize pcmData=_pcmData - In the implementation block
@property (assign,nonatomic) int pcmDataLength;                                          //@synthesize pcmDataLength=_pcmDataLength - In the implementation block
@property (assign,nonatomic) char* pcmDataStartTransition;                               //@synthesize pcmDataStartTransition=_pcmDataStartTransition - In the implementation block
@property (assign,nonatomic) int pcmDataStartTransitionLength;                           //@synthesize pcmDataStartTransitionLength=_pcmDataStartTransitionLength - In the implementation block
@property (assign,nonatomic) float sampleRate;                                           //@synthesize sampleRate=_sampleRate - In the implementation block
+(void)convertSamples:(vector<float, std::__1::allocator<float> >*)arg1 toPcm:(char**)arg2 length:(int*)arg3 ;
-(float)systemVolume;
-(void)startPlayingWithToken:(id)arg1 volume:(float)arg2 encoding:(id)arg3 ;
-(void)freePcmData;
-(OpaqueAudioQueueRef)audioQueue;
-(void)playSamples:(char*)arg1 startTransition:(char*)arg2 ;
-(void)restoreSystemVolume;
-(void)fillAndEnqueueBuffer:(AudioQueueBuffer*)arg1 queue:(OpaqueAudioQueueRef)arg2 isFirstBuffer:(char)arg3 ;
-(float)computePlayerVolumeAlteringSystemVolumeIfNecessary;
-(void)setAudioQueue:(OpaqueAudioQueueRef)arg1 ;
-(NSObject*<OS_dispatch_queue>)audioPlayerQueue;
-(void)setAudioPlayerQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(void)setSystemVolume:(float)arg1 ;
-(char)systemVolumeChanged;
-(void)setSystemVolumeChanged:(char)arg1 ;
-(char*)pcmData;
-(void)setPcmData:(char*)arg1 ;
-(int)pcmDataLength;
-(void)setPcmDataLength:(int)arg1 ;
-(char*)pcmDataStartTransition;
-(void)setPcmDataStartTransition:(char*)arg1 ;
-(int)pcmDataStartTransitionLength;
-(void)setPcmDataStartTransitionLength:(int)arg1 ;
-(MPVolumeView *)volumeView;
-(char)isPlaying;
-(void)setVolume:(float)arg1 ;
-(void)dealloc;
-(id)init;
-(void)setSampleRate:(float)arg1 ;
-(float)sampleRate;
-(NSData *)token;
-(void)setToken:(NSData *)arg1 ;
-(float)volume;
-(void)stopPlaying;
-(void)setVolumeView:(MPVolumeView *)arg1 ;
@end

