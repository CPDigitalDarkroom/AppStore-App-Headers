/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:45:29 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/D2238F36-ED84-40F4-9CB2-8C71CACC8B47/Spotify.app/Spotify
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Spotify/SPTableViewController.h>
#import <Spotify/SPTNavigationControllerNavigationBarState.h>
#import <Spotify/SPTSingleRequestViewModelDelegate.h>
#import <Spotify/SPTAlbumViewModelPlaybackDelegate.h>
#import <Spotify/SPTImageLoaderDelegate.h>
#import <Spotify/SPTAlbumMetadataViewDelegate.h>
#import <Spotify/SPTCollectionObserver.h>
#import <Spotify/SPTEntityTableHeaderViewDelegate.h>
#import <Spotify/SPTOfflineObserver.h>
#import <Spotify/SPTOfflineSwitchDelegate.h>
#import <Spotify/SPTProductStateObserver.h>
#import <Spotify/SPTTableViewContinuousSwipeDelegate.h>
#import <Spotify/SPTOnDemandUpsellTestProtocol.h>
#import <Spotify/SPTVoiceCommandFeatureObserver.h>
#import <Spotify/SPTVoiceCommandInterfaceHost.h>
#import <Spotify/SPObjectRepresentation.h>

@protocol SPContextMenuFeature, CollectionFeature, SPTAudioTouch, SPTProductState, SPTImageLoader, SPTShuffleButtonTestController, SPTAdsManager, SPTAbbaFeatureFlags, SPTCollectionLogger, SPTUpsellManager, SPTOnDemandUpsellTest, SPTVoiceCommandFeature, SPTSpotlightIndexRegistry;
@class SPTAlbumViewModel, SPTViewLogger, SPTClientEventLogger, SPTAlbumMetadataView, SPTActionButton, SPTEntityTableHeaderView, SPTProgressView, SPTInfoView, SPTCollectionView, SPTTableViewCell, SPTPopoverController, SPTOfflineManager, SPTTableViewOfflineSwitchCell, SPTNetworkConnectivityController, NSString;

@interface SPTAlbumViewController : SPTableViewController <SPTNavigationControllerNavigationBarState, SPTSingleRequestViewModelDelegate, SPTAlbumViewModelPlaybackDelegate, SPTImageLoaderDelegate, SPTAlbumMetadataViewDelegate, SPTCollectionObserver, SPTEntityTableHeaderViewDelegate, SPTOfflineObserver, SPTOfflineSwitchDelegate, SPTProductStateObserver, SPTTableViewContinuousSwipeDelegate, SPTOnDemandUpsellTestProtocol, SPTVoiceCommandFeatureObserver, SPTVoiceCommandInterfaceHost, SPObjectRepresentation> {

	char _alwaysShowAvailableOfflineRolloutFlag;
	char _hasSetupContentOffset;
	char _shouldMakeAvailableOfflineWhenSaved;
	char _displayAvailableOffline;
	id<SPContextMenuFeature> _contextMenu;
	id<CollectionFeature> _collection;
	id<SPTAudioTouch> _audioTouch;
	SPTAlbumViewModel* _viewModel;
	id<SPTProductState> _productState;
	SPTViewLogger* _viewLogger;
	SPTClientEventLogger* _clientEventLogger;
	id<SPTImageLoader> _imageLoader;
	SPTAlbumMetadataView* _metadataView;
	SPTActionButton* _saveButton;
	SPTEntityTableHeaderView* _headerView;
	SPTProgressView* _progressView;
	SPTInfoView* _infoView;
	SPTCollectionView* _relatedAlbumsCollectionView;
	SPTTableViewCell* _copyrightCell;
	SPTPopoverController* _contextPopoverController;
	SPTOfflineManager* _offlineManager;
	id<SPTShuffleButtonTestController> _shuffleButtonTestController;
	SPTTableViewOfflineSwitchCell* _offlineSwitchCell;
	id<SPTAdsManager> _adsManager;
	SPTNetworkConnectivityController* _networkConnectivityController;
	id<SPTAbbaFeatureFlags> _abbaFeatureFlags;
	id<SPTCollectionLogger> _collectionLogger;
	id<SPTUpsellManager> _upsellManager;
	id<SPTOnDemandUpsellTest> _onDemandUpsellTest;
	id<SPTVoiceCommandFeature> _voiceCommandFeature;
	id<SPTSpotlightIndexRegistry> _spotlightIndexRegistry;

}

@property (assign,nonatomic) char alwaysShowAvailableOfflineRolloutFlag;                                    //@synthesize alwaysShowAvailableOfflineRolloutFlag=_alwaysShowAvailableOfflineRolloutFlag - In the implementation block
@property (nonatomic,__weak,readonly) id<SPContextMenuFeature> contextMenu;                                 //@synthesize contextMenu=_contextMenu - In the implementation block
@property (nonatomic,__weak,readonly) id<CollectionFeature> collection;                                     //@synthesize collection=_collection - In the implementation block
@property (nonatomic,retain) id<SPTAudioTouch> audioTouch;                                                  //@synthesize audioTouch=_audioTouch - In the implementation block
@property (nonatomic,retain) SPTAlbumViewModel * viewModel;                                                 //@synthesize viewModel=_viewModel - In the implementation block
@property (assign,nonatomic,__weak) id<SPTProductState> productState;                                       //@synthesize productState=_productState - In the implementation block
@property (nonatomic,retain) SPTViewLogger * viewLogger;                                                    //@synthesize viewLogger=_viewLogger - In the implementation block
@property (nonatomic,retain) SPTClientEventLogger * clientEventLogger;                                      //@synthesize clientEventLogger=_clientEventLogger - In the implementation block
@property (nonatomic,retain) id<SPTImageLoader> imageLoader;                                                //@synthesize imageLoader=_imageLoader - In the implementation block
@property (nonatomic,retain) SPTAlbumMetadataView * metadataView;                                           //@synthesize metadataView=_metadataView - In the implementation block
@property (nonatomic,retain) SPTActionButton * saveButton;                                                  //@synthesize saveButton=_saveButton - In the implementation block
@property (assign,nonatomic) char hasSetupContentOffset;                                                    //@synthesize hasSetupContentOffset=_hasSetupContentOffset - In the implementation block
@property (nonatomic,retain) SPTEntityTableHeaderView * headerView;                                         //@synthesize headerView=_headerView - In the implementation block
@property (nonatomic,retain) SPTProgressView * progressView;                                                //@synthesize progressView=_progressView - In the implementation block
@property (nonatomic,retain) SPTInfoView * infoView;                                                        //@synthesize infoView=_infoView - In the implementation block
@property (nonatomic,retain) SPTCollectionView * relatedAlbumsCollectionView;                               //@synthesize relatedAlbumsCollectionView=_relatedAlbumsCollectionView - In the implementation block
@property (nonatomic,retain) SPTTableViewCell * copyrightCell;                                              //@synthesize copyrightCell=_copyrightCell - In the implementation block
@property (nonatomic,retain) SPTPopoverController * contextPopoverController;                               //@synthesize contextPopoverController=_contextPopoverController - In the implementation block
@property (assign,nonatomic,__weak) SPTOfflineManager * offlineManager;                                     //@synthesize offlineManager=_offlineManager - In the implementation block
@property (nonatomic,readonly) id<SPTShuffleButtonTestController> shuffleButtonTestController;              //@synthesize shuffleButtonTestController=_shuffleButtonTestController - In the implementation block
@property (nonatomic,retain) SPTTableViewOfflineSwitchCell * offlineSwitchCell;                             //@synthesize offlineSwitchCell=_offlineSwitchCell - In the implementation block
@property (assign,nonatomic) char shouldMakeAvailableOfflineWhenSaved;                                      //@synthesize shouldMakeAvailableOfflineWhenSaved=_shouldMakeAvailableOfflineWhenSaved - In the implementation block
@property (assign,nonatomic) char displayAvailableOffline;                                                  //@synthesize displayAvailableOffline=_displayAvailableOffline - In the implementation block
@property (assign,nonatomic,__weak) id<SPTAdsManager> adsManager;                                           //@synthesize adsManager=_adsManager - In the implementation block
@property (nonatomic,retain) SPTNetworkConnectivityController * networkConnectivityController;              //@synthesize networkConnectivityController=_networkConnectivityController - In the implementation block
@property (nonatomic,readonly) id<SPTAbbaFeatureFlags> abbaFeatureFlags;                                    //@synthesize abbaFeatureFlags=_abbaFeatureFlags - In the implementation block
@property (nonatomic,__weak,readonly) id<SPTCollectionLogger> collectionLogger;                             //@synthesize collectionLogger=_collectionLogger - In the implementation block
@property (nonatomic,__weak,readonly) id<SPTUpsellManager> upsellManager;                                   //@synthesize upsellManager=_upsellManager - In the implementation block
@property (assign,nonatomic,__weak) id<SPTOnDemandUpsellTest> onDemandUpsellTest;                           //@synthesize onDemandUpsellTest=_onDemandUpsellTest - In the implementation block
@property (nonatomic,__weak,readonly) id<SPTVoiceCommandFeature> voiceCommandFeature;                       //@synthesize voiceCommandFeature=_voiceCommandFeature - In the implementation block
@property (assign,nonatomic,__weak) id<SPTSpotlightIndexRegistry> spotlightIndexRegistry;                   //@synthesize spotlightIndexRegistry=_spotlightIndexRegistry - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id<SPTProductState>)productState;
-(SPTClientEventLogger *)clientEventLogger;
-(SPTNetworkConnectivityController *)networkConnectivityController;
-(unsigned)preferredNavigationBarState;
-(id)viewEventURI;
-(SPTViewLogger *)viewLogger;
-(void)setProductState:(id<SPTProductState>)arg1 ;
-(id<SPTImageLoader>)imageLoader;
-(void)imageLoader:(id)arg1 didLoadImage:(id)arg2 forURL:(id)arg3 loadTime:(double)arg4 context:(id)arg5 ;
-(void)setImageLoader:(id<SPTImageLoader>)arg1 ;
-(int)stackedNavigationPageSize;
-(void)setNetworkConnectivityController:(SPTNetworkConnectivityController *)arg1 ;
-(unsigned)offlineSwitchCellOfflineAvailability:(id)arg1 ;
-(void)offlineSwitchCellDidChangeState:(id)arg1 isOn:(char)arg2 ;
-(id<SPTAbbaFeatureFlags>)abbaFeatureFlags;
-(void)setClientEventLogger:(SPTClientEventLogger *)arg1 ;
-(void)productState:(id)arg1 stateDidChange:(id)arg2 ;
-(void)setAudioTouch:(id<SPTAudioTouch>)arg1 ;
-(id<SPContextMenuFeature>)contextMenu;
-(id<SPTAudioTouch>)audioTouch;
-(void)setViewLogger:(SPTViewLogger *)arg1 ;
-(void)viewModel:(id)arg1 offlineModeChanged:(char)arg2 ;
-(void)viewModel:(id)arg1 setLoading:(char)arg2 ;
-(id<SPTAdsManager>)adsManager;
-(void)setAdsManager:(id<SPTAdsManager>)arg1 ;
-(SPTOfflineManager *)offlineManager;
-(id<SPTVoiceCommandFeature>)voiceCommandFeature;
-(id)initWithContextMenu:(id)arg1 collection:(id)arg2 albumViewModel:(id)arg3 productState:(id)arg4 viewLogger:(id)arg5 clientEventLogger:(id)arg6 imageLoader:(id)arg7 audioTouch:(id)arg8 offlineManager:(id)arg9 adsManager:(id)arg10 connectivityController:(id)arg11 shuffleButtonTestController:(id)arg12 abbaFeatureFlags:(id)arg13 collectionLogger:(id)arg14 upsellManager:(id)arg15 onDemandUpsellTest:(id)arg16 voiceCommandFeature:(id)arg17 spotlightIndexRegistry:(id)arg18 ;
-(void)setupHeaderView;
-(void)setShouldMakeAvailableOfflineWhenSaved:(char)arg1 ;
-(void)setContextPopoverController:(SPTPopoverController *)arg1 ;
-(SPTPopoverController *)contextPopoverController;
-(char)shouldMakeAvailableOfflineWhenSaved;
-(void)setAlbumIsOffline:(char)arg1 ;
-(void)currentlyPlayingRowChanged;
-(void)collectionDidChange:(id)arg1 ;
-(void)offlineStateChangedForEntity:(id)arg1 ;
-(void)setOfflineManager:(SPTOfflineManager *)arg1 ;
-(void)setupTableView;
-(void)setupInfoView;
-(void)updateInfoViewWithError:(id)arg1 ;
-(id)offlineURL;
-(char)hasSetupContentOffset;
-(void)setHasSetupContentOffset:(char)arg1 ;
-(void)setCopyrightCell:(SPTTableViewCell *)arg1 ;
-(SPTTableViewCell *)copyrightCell;
-(id<SPTShuffleButtonTestController>)shuffleButtonTestController;
-(void)updateHeaderViewPrimaryButton;
-(void)setMetadataView:(SPTAlbumMetadataView *)arg1 ;
-(SPTAlbumMetadataView *)metadataView;
-(char)displayAvailableOffline;
-(char)isCopyrightSection:(int)arg1 ;
-(char)isRelatedAlbumsSection:(int)arg1 ;
-(void)configureRelatedAlbumCell:(id)arg1 atIndexPath:(id)arg2 ;
-(char)isAvailableOfflineSection:(int)arg1 ;
-(SPTTableViewOfflineSwitchCell *)offlineSwitchCell;
-(void)configureTrackCell:(id)arg1 atIndexPath:(id)arg2 ;
-(char)isTracksSection:(int)arg1 ;
-(id<SPTCollectionLogger>)collectionLogger;
-(char)playRowAtIndex:(int)arg1 ;
-(id<SPTOnDemandUpsellTest>)onDemandUpsellTest;
-(int)offlineSyncStatusForURL:(id)arg1 ;
-(void)trackContextMenuButtonTapped:(id)arg1 ;
-(void)registerAudioTouchInCell:(id)arg1 atIndexPath:(id)arg2 ;
-(id<SPTUpsellManager>)upsellManager;
-(void)updateOnCollectionChange;
-(void)updateHeaderSaveButton;
-(void)updateUserActivityState:(id)arg1 withThumbnailImage:(id)arg2 ;
-(void)resumePlayback;
-(void)playButtonTapped;
-(void)toggleCollectionButtonTapped:(id)arg1 ;
-(void)viewContextMenuButtonTapped;
-(void)setDisplayAvailableOffline:(char)arg1 ;
-(char)alwaysShowAvailableOfflineRolloutFlag;
-(void)toggleAvailableOfflineBarAnimated:(char)arg1 ;
-(void)setupRightNavigationItems;
-(SPTCollectionView *)relatedAlbumsCollectionView;
-(void)updateAvailableOffline:(char)arg1 ;
-(char)albumIsOffline;
-(id)trackURLs;
-(id<SPTSpotlightIndexRegistry>)spotlightIndexRegistry;
-(void)viewModel:(id)arg1 didLoadData:(id)arg2 loadTime:(double)arg3 ;
-(void)viewModel:(id)arg1 didFailLoad:(id)arg2 ;
-(void)albumMetadataView:(id)arg1 artistViewTapped:(id)arg2 isArtistName:(char)arg3 ;
-(void)entityTableHeaderViewImageViewDidReceiveTap:(id)arg1 ;
-(void)entityTableHeaderView:(id)arg1 didScrollToPageNumber:(int)arg2 ;
-(char)continuousSwipeEnabledForTableView:(id)arg1 ;
-(void)shufflePlayAndUpsellFromOnDemandTest;
-(void)triggerOnDemandUpsellFromOnDemandTest;
-(void)defaultShuffleBounceFromOnDemandTest;
-(void)shufflePlayFromOnDemandTest;
-(void)voiceCommandFeature:(id)arg1 enabledStateDidChange:(char)arg2 ;
-(void)updateVisiblePreviews;
-(void)setAlwaysShowAvailableOfflineRolloutFlag:(char)arg1 ;
-(void)setRelatedAlbumsCollectionView:(SPTCollectionView *)arg1 ;
-(void)setOfflineSwitchCell:(SPTTableViewOfflineSwitchCell *)arg1 ;
-(void)setOnDemandUpsellTest:(id<SPTOnDemandUpsellTest>)arg1 ;
-(void)setSpotlightIndexRegistry:(id<SPTSpotlightIndexRegistry>)arg1 ;
-(SPTInfoView *)infoView;
-(void)setInfoView:(SPTInfoView *)arg1 ;
-(SPTAlbumViewModel *)viewModel;
-(id<CollectionFeature>)collection;
-(void)setViewModel:(SPTAlbumViewModel *)arg1 ;
-(void)dealloc;
-(void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3 ;
-(void)tableView:(id)arg1 didEndDisplayingCell:(id)arg2 forRowAtIndexPath:(id)arg3 ;
-(float)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2 ;
-(float)tableView:(id)arg1 heightForHeaderInSection:(int)arg2 ;
-(id)tableView:(id)arg1 viewForHeaderInSection:(int)arg2 ;
-(id)tableView:(id)arg1 willSelectRowAtIndexPath:(id)arg2 ;
-(void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2 ;
-(void)scrollViewDidScroll:(id)arg1 ;
-(int)tableView:(id)arg1 numberOfRowsInSection:(int)arg2 ;
-(id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2 ;
-(int)numberOfSectionsInTableView:(id)arg1 ;
-(void)updateUserActivityState:(id)arg1 ;
-(int)style;
-(void)viewWillLayoutSubviews;
-(void)viewWillAppear:(char)arg1 ;
-(void)viewDidLoad;
-(void)viewWillDisappear:(char)arg1 ;
-(SPTEntityTableHeaderView *)headerView;
-(void)setHeaderView:(SPTEntityTableHeaderView *)arg1 ;
-(void)updateHeaderView;
-(void)setProgressView:(SPTProgressView *)arg1 ;
-(SPTProgressView *)progressView;
-(SPTActionButton *)saveButton;
-(void)setSaveButton:(SPTActionButton *)arg1 ;
@end

