/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:45:30 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/D2238F36-ED84-40F4-9CB2-8C71CACC8B47/Spotify.app/Spotify
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Spotify/Spotify-Structs.h>
#import <Spotify/SPTBMWListScreenDelegate.h>
#import <Spotify/RAPIEntertainmentAppLinkDelegate.h>

@protocol SPTExternalContentProvider;
@class RAPIEntertainmentAppLink, NSMutableDictionary, SPKVObservation, NSString;

@interface SPTBMWLoggedInSession : NSObject <SPTBMWListScreenDelegate, RAPIEntertainmentAppLinkDelegate> {

	char _appLinkIsConnected;
	RAPIEntertainmentAppLink* _bmwAppLink;
	id<SPTExternalContentProvider> _externalContent;
	NSMutableDictionary* _screenModels;
	SPKVObservation* _playbackStatusObservation;

}

@property (nonatomic,retain) RAPIEntertainmentAppLink * bmwAppLink;                       //@synthesize bmwAppLink=_bmwAppLink - In the implementation block
@property (nonatomic,retain) id<SPTExternalContentProvider> externalContent;              //@synthesize externalContent=_externalContent - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * screenModels;                          //@synthesize screenModels=_screenModels - In the implementation block
@property (assign,nonatomic) char appLinkIsConnected;                                     //@synthesize appLinkIsConnected=_appLinkIsConnected - In the implementation block
@property (nonatomic,retain) SPKVObservation * playbackStatusObservation;                 //@synthesize playbackStatusObservation=_playbackStatusObservation - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(int)getGroupCountForScreen:(int)arg1 ;
-(id)getGroupLabelForGroup:(int)arg1 forScreen:(int)arg2 ;
-(int)getItemCountForGroup:(int)arg1 forScreen:(int)arg2 ;
-(id)getStringForLine:(int)arg1 forRow:(int)arg2 forGroup:(int)arg3 forScreen:(int)arg4 ;
-(int)getTargetScreenForRow:(int)arg1 forGroup:(int)arg2 forScreen:(int)arg3 ;
-(id)getTitleForScreen:(int)arg1 ;
-(void)onScreenChangedFrom:(int)arg1 to:(int)arg2 withClickedItemIndex:(int)arg3 andGroupIndex:(int)arg4 ;
-(id)getMoreLabelForGroup:(int)arg1 forScreen:(int)arg2 ;
-(void)onSearchStringChanged:(id)arg1 forSearchScreen:(int)arg2 ;
-(void)handleOnItemClicked:(id)arg1 ;
-(void)onStartPlayback;
-(void)onPausePlayback;
-(void)onSkipPrev;
-(void)onSkipNext;
-(void)onBeginSeekBackward;
-(void)onBeginSeekForward;
-(void)onEndSeek;
-(void)onConnectedToCar:(id)arg1 ;
-(void)onDisconnectedFromCar;
-(void)onTextLog:(id)arg1 source:(int)arg2 ;
-(int)getCurrentTrackTime;
-(int)getTotalTrackTime;
-(float)getCurrentTrackProgress;
-(void)onCarLanguageChanged:(id)arg1 ;
-(char)canProvideDataImmediately:(int)arg1 ;
-(id)getLoadingLabelForScreen:(int)arg1 ;
-(id)getImageForRow:(int)arg1 forGroup:(int)arg2 withPreferredSize:(CGSize)arg3 forScreen:(int)arg4 ;
-(char)isMasterOptionButtonCheckedForScreen:(int)arg1 ;
-(void)setScreenModels:(NSMutableDictionary *)arg1 ;
-(void)setPlaybackStatusObservation:(SPKVObservation *)arg1 ;
-(void)receiveSavedStateChanged:(id)arg1 ;
-(SPKVObservation *)playbackStatusObservation;
-(id<SPTExternalContentProvider>)externalContent;
-(void)updateNowPlayingScreenWithStatus:(id)arg1 ;
-(void)setBmwAppLink:(RAPIEntertainmentAppLink *)arg1 ;
-(void)setExternalContent:(id<SPTExternalContentProvider>)arg1 ;
-(RAPIEntertainmentAppLink *)bmwAppLink;
-(NSMutableDictionary *)screenModels;
-(char)appLinkIsConnected;
-(int)screenIndexForModel:(id)arg1 ;
-(void)handleSaveButtonClicked;
-(void)handleRepeatOrThumbDownButtonClicked;
-(void)handleShuffleOrThumbUpButtonClicked;
-(void)handleSkipNextClicked;
-(void)handleSkipPreviousClicked;
-(id)screenModelForScreen:(unsigned)arg1 ;
-(void)startPlaybackIfNeeded;
-(void)setAppLinkIsConnected:(char)arg1 ;
-(void)handleLoggedInWithAppLink:(id)arg1 externalContent:(id)arg2 ;
-(void)screen:(id)arg1 requestedPlaybackOfItem:(id)arg2 parent:(id)arg3 ;
-(void)screen:(id)arg1 wantsNavigationToScreen:(unsigned)arg2 showing:(id)arg3 ;
-(void)screen:(id)arg1 didInvalidateRow:(int)arg2 ofGroup:(int)arg3 ;
-(void)screenDidInvalidate:(id)arg1 ;
-(void)handleLoggedOut;
-(void)dealloc;
-(id)init;
@end

