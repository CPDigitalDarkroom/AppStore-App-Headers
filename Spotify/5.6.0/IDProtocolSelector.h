/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:45:22 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/D2238F36-ED84-40F4-9CB2-8C71CACC8B47/Spotify.app/Spotify
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Spotify/IDStreamProviderDelegate.h>
#import <Spotify/IDA4AConnectionDelegate.h>
#import <Spotify/IDA4AConnectionMonitorDelegate.h>
#import <Spotify/IDBclBroadcastSender.h>

@protocol IDBclBroadcastReceiver, IDProtocolSelectorDelegate, IDStreamProvider;
@class IDA4AProtocol, IDA4AConnection, IDExternalAccessorySelector, IDA4AProxyInfo, NSSet, NSMutableSet, IDBackgroundTask, NSConditionLock, IDA4AConnectionMonitor, IDJSONRPCRequest, IDJSONRPCNotification, NSString;

@interface IDProtocolSelector : NSObject <IDStreamProviderDelegate, IDA4AConnectionDelegate, IDA4AConnectionMonitorDelegate, IDBclBroadcastSender> {

	char _isTargetedForSimulator;
	id<IDBclBroadcastReceiver> _broadcastReceiver;
	id<IDProtocolSelectorDelegate> _delegate;
	IDA4AProtocol* _preselectedCommunicationProtocol;
	IDA4AProtocol* _claimedCommunicationProtocol;
	IDA4AProtocol* _selectedCommunicationProtocol;
	id<IDStreamProvider> _streamProvider;
	IDA4AConnection* _a4aConnection;
	IDExternalAccessorySelector* _externalAccessorySelector;
	IDA4AProxyInfo* _proxyInfo;
	NSSet* _communicationProtocols;
	NSSet* _negotiationProtocols;
	NSSet* _preselectableCommunicationProtocols;
	IDA4AProtocol* _selectedNegotiationProtocol;
	NSMutableSet* _receivedProtocols;
	IDA4AProtocol* _legacyProtocol;
	IDBackgroundTask* _backgroundTask;
	NSConditionLock* _stateCondition;
	NSConditionLock* _connectionCondition;
	IDA4AConnectionMonitor* _connectionMonitor;
	float _handshakeTimeout;
	float _broadcastResponseTimeout;
	float _claimProtocolWaitTime;
	IDJSONRPCRequest* _lastBroadcastProtocolRequest;
	IDJSONRPCNotification* _lastClaimProtocolNotification;

}

@property (__weak) id<IDBclBroadcastReceiver> broadcastReceiver;                         //@synthesize broadcastReceiver=_broadcastReceiver - In the implementation block
@property (__weak) id<IDProtocolSelectorDelegate> delegate;                              //@synthesize delegate=_delegate - In the implementation block
@property (getter=isStarted,readonly) char started; 
@property (retain) IDA4AProtocol * preselectedCommunicationProtocol;                     //@synthesize preselectedCommunicationProtocol=_preselectedCommunicationProtocol - In the implementation block
@property (retain) IDA4AProtocol * claimedCommunicationProtocol;                         //@synthesize claimedCommunicationProtocol=_claimedCommunicationProtocol - In the implementation block
@property (retain) IDA4AProtocol * selectedCommunicationProtocol;                        //@synthesize selectedCommunicationProtocol=_selectedCommunicationProtocol - In the implementation block
@property (retain) id<IDStreamProvider> streamProvider;                                  //@synthesize streamProvider=_streamProvider - In the implementation block
@property (retain) IDA4AConnection * a4aConnection;                                      //@synthesize a4aConnection=_a4aConnection - In the implementation block
@property (retain) IDExternalAccessorySelector * externalAccessorySelector;              //@synthesize externalAccessorySelector=_externalAccessorySelector - In the implementation block
@property (retain) IDA4AProxyInfo * proxyInfo;                                           //@synthesize proxyInfo=_proxyInfo - In the implementation block
@property (retain) NSSet * communicationProtocols;                                       //@synthesize communicationProtocols=_communicationProtocols - In the implementation block
@property (retain) NSSet * negotiationProtocols;                                         //@synthesize negotiationProtocols=_negotiationProtocols - In the implementation block
@property (retain) NSSet * preselectableCommunicationProtocols;                          //@synthesize preselectableCommunicationProtocols=_preselectableCommunicationProtocols - In the implementation block
@property (retain) IDA4AProtocol * selectedNegotiationProtocol;                          //@synthesize selectedNegotiationProtocol=_selectedNegotiationProtocol - In the implementation block
@property (retain) NSMutableSet * receivedProtocols;                                     //@synthesize receivedProtocols=_receivedProtocols - In the implementation block
@property (retain) IDA4AProtocol * legacyProtocol;                                       //@synthesize legacyProtocol=_legacyProtocol - In the implementation block
@property (retain) IDBackgroundTask * backgroundTask;                                    //@synthesize backgroundTask=_backgroundTask - In the implementation block
@property (retain) NSConditionLock * stateCondition;                                     //@synthesize stateCondition=_stateCondition - In the implementation block
@property (retain) NSConditionLock * connectionCondition;                                //@synthesize connectionCondition=_connectionCondition - In the implementation block
@property (retain) IDA4AConnectionMonitor * connectionMonitor;                           //@synthesize connectionMonitor=_connectionMonitor - In the implementation block
@property (assign) float handshakeTimeout;                                               //@synthesize handshakeTimeout=_handshakeTimeout - In the implementation block
@property (assign) float broadcastResponseTimeout;                                       //@synthesize broadcastResponseTimeout=_broadcastResponseTimeout - In the implementation block
@property (assign) float claimProtocolWaitTime;                                          //@synthesize claimProtocolWaitTime=_claimProtocolWaitTime - In the implementation block
@property (assign) char isTargetedForSimulator;                                          //@synthesize isTargetedForSimulator=_isTargetedForSimulator - In the implementation block
@property (retain) IDJSONRPCRequest * lastBroadcastProtocolRequest;                      //@synthesize lastBroadcastProtocolRequest=_lastBroadcastProtocolRequest - In the implementation block
@property (retain) IDJSONRPCNotification * lastClaimProtocolNotification;                //@synthesize lastClaimProtocolNotification=_lastClaimProtocolNotification - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)monitor:(id)arg1 didCreatePacket:(id)arg2 ;
-(void)monitor:(id)arg1 didEncounterError:(id)arg2 ;
-(IDA4AProxyInfo *)proxyInfo;
-(void)setProxyInfo:(IDA4AProxyInfo *)arg1 ;
-(NSConditionLock *)stateCondition;
-(NSConditionLock *)connectionCondition;
-(void)setStreamProvider:(id<IDStreamProvider>)arg1 ;
-(id<IDStreamProvider>)streamProvider;
-(NSSet *)preselectableCommunicationProtocols;
-(id<IDBclBroadcastReceiver>)broadcastReceiver;
-(void)sendBroadcast:(id)arg1 ;
-(float)handshakeTimeout;
-(void)waitForHandshakeWithTimeout:(float)arg1 ;
-(void)setBroadcastReceiver:(id<IDBclBroadcastReceiver>)arg1 ;
-(void)setStateCondition:(NSConditionLock *)arg1 ;
-(void)setConnectionCondition:(NSConditionLock *)arg1 ;
-(void)setHandshakeTimeout:(float)arg1 ;
-(IDA4AConnection *)a4aConnection;
-(void)closeA4AConnection;
-(void)setA4aConnection:(IDA4AConnection *)arg1 ;
-(unsigned)protocolVersionForProxy:(id)arg1 ;
-(void)connection:(id)arg1 didReceivePacket:(id)arg2 ;
-(void)connection:(id)arg1 errorOccured:(id)arg2 ;
-(void)connectionDidCloseUnderlyingStreams:(id)arg1 ;
-(void)setPreselectedCommunicationProtocol:(IDA4AProtocol *)arg1 ;
-(char)isTargetedForSimulator;
-(void)setExternalAccessorySelector:(IDExternalAccessorySelector *)arg1 ;
-(IDExternalAccessorySelector *)externalAccessorySelector;
-(void)streamProvider:(id)arg1 didFailToStartWithError:(id)arg2 ;
-(IDBackgroundTask *)backgroundTask;
-(void)streamProvider:(id)arg1 didFailToResolveStreamsWithError:(id)arg2 ;
-(void)streamProvider:(id)arg1 didResolveInputStream:(id)arg2 outputStream:(id)arg3 ;
-(void)streamProviderWillDiscardStreams:(id)arg1 ;
-(NSSet *)negotiationProtocols;
-(NSSet *)communicationProtocols;
-(IDA4AProtocol *)legacyProtocol;
-(void)setSelectedCommunicationProtocol:(IDA4AProtocol *)arg1 ;
-(IDA4AProtocol *)selectedCommunicationProtocol;
-(IDA4AProtocol *)selectedNegotiationProtocol;
-(IDA4AProtocol *)preselectedCommunicationProtocol;
-(NSMutableSet *)receivedProtocols;
-(void)resetProtocolSelectorState;
-(void)setSelectedNegotiationProtocol:(IDA4AProtocol *)arg1 ;
-(void)setLastClaimProtocolNotification:(IDJSONRPCNotification *)arg1 ;
-(void)setLastBroadcastProtocolRequest:(IDJSONRPCRequest *)arg1 ;
-(void)setClaimedCommunicationProtocol:(IDA4AProtocol *)arg1 ;
-(id)stringFromIDProtocolSelectorState:(unsigned)arg1 ;
-(id)stringFromIDProtocolSelectorConnectionToAccessoryState:(unsigned)arg1 ;
-(void)resetStreamProvider;
-(void)finishHandshake;
-(void)processA4ABroadcastPacket:(id)arg1 ;
-(void)requestBroadcastProtocol;
-(float)broadcastResponseTimeout;
-(void)claimRandomCommunicationProtocol;
-(IDJSONRPCNotification *)lastClaimProtocolNotification;
-(IDJSONRPCRequest *)lastBroadcastProtocolRequest;
-(void)enqueJSONRPCMessage:(id)arg1 ;
-(id)availableCommunicationProtocols;
-(void)sendClaimProtocolNotification:(id)arg1 ;
-(float)claimProtocolWaitTime;
-(void)useClaimedProtocolAsSelectedProtocol;
-(IDA4AProtocol *)claimedCommunicationProtocol;
-(void)setCommunicationProtocols:(NSSet *)arg1 ;
-(void)setNegotiationProtocols:(NSSet *)arg1 ;
-(void)setPreselectableCommunicationProtocols:(NSSet *)arg1 ;
-(void)setReceivedProtocols:(NSMutableSet *)arg1 ;
-(void)setLegacyProtocol:(IDA4AProtocol *)arg1 ;
-(void)setBroadcastResponseTimeout:(float)arg1 ;
-(void)setClaimProtocolWaitTime:(float)arg1 ;
-(void)setIsTargetedForSimulator:(char)arg1 ;
-(void)setDelegate:(id<IDProtocolSelectorDelegate>)arg1 ;
-(id)init;
-(NSString *)description;
-(NSString *)debugDescription;
-(id<IDProtocolSelectorDelegate>)delegate;
-(void)stop;
-(void)start;
-(char)isStarted;
-(void)setBackgroundTask:(IDBackgroundTask *)arg1 ;
-(IDA4AConnectionMonitor *)connectionMonitor;
-(void)setConnectionMonitor:(IDA4AConnectionMonitor *)arg1 ;
@end

