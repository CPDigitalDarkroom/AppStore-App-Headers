/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:45:40 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/D2238F36-ED84-40F4-9CB2-8C71CACC8B47/Spotify.app/Spotify
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Spotify/Spotify-Structs.h>
#import <UIKit/UIViewController.h>
#import <Spotify/SPTNowPlayingModelDelegate.h>
#import <Spotify/SPTNowPlayingRunningHeadUnitViewDelegate.h>
#import <Spotify/SPTOfflineModeStateObserver.h>
#import <Spotify/SPTRunningPlaybackManagerObserver.h>
#import <Spotify/SPTNowPlayingContainedViewController.h>
#import <Spotify/SPTNowPlayingRemoteControlPolicyProvider.h>

@protocol SPTUpsellManager, SPTRunningPlaybackManager, SPTRunningUserInterfaceFactory, SPTOfflineModeState, SPTRunningLocalisationManager, SPTRunningTestManager;
@class SPTNowPlayingModel, SPTTheme, SPTLogCenter, SPTNowPlayingRunningHeadUnitView, NSString;

@interface SPTNowPlayingRunningHeadUnitViewController : UIViewController <SPTNowPlayingModelDelegate, SPTNowPlayingRunningHeadUnitViewDelegate, SPTOfflineModeStateObserver, SPTRunningPlaybackManagerObserver, SPTNowPlayingContainedViewController, SPTNowPlayingRemoteControlPolicyProvider> {

	SPTNowPlayingModel* _nowPlayingModel;
	SPTTheme* _theme;
	id<SPTUpsellManager> _upsellManager;
	id<SPTRunningPlaybackManager> _runningPlaybackManager;
	id<SPTRunningUserInterfaceFactory> _userInterfaceFactory;
	id<SPTOfflineModeState> _offlineModeState;
	SPTLogCenter* _logCenter;
	id<SPTRunningLocalisationManager> _localisationManager;
	id<SPTRunningTestManager> _testManager;

}

@property (nonatomic,retain) SPTNowPlayingRunningHeadUnitView * view; 
@property (nonatomic,retain) SPTNowPlayingModel * nowPlayingModel;                                                   //@synthesize nowPlayingModel=_nowPlayingModel - In the implementation block
@property (nonatomic,retain) SPTTheme * theme;                                                                       //@synthesize theme=_theme - In the implementation block
@property (nonatomic,retain) id<SPTUpsellManager> upsellManager;                                                     //@synthesize upsellManager=_upsellManager - In the implementation block
@property (nonatomic,retain) id<SPTRunningPlaybackManager> runningPlaybackManager;                                   //@synthesize runningPlaybackManager=_runningPlaybackManager - In the implementation block
@property (nonatomic,retain) id<SPTRunningUserInterfaceFactory> userInterfaceFactory;                                //@synthesize userInterfaceFactory=_userInterfaceFactory - In the implementation block
@property (nonatomic,retain) id<SPTOfflineModeState> offlineModeState;                                               //@synthesize offlineModeState=_offlineModeState - In the implementation block
@property (nonatomic,retain) SPTLogCenter * logCenter;                                                               //@synthesize logCenter=_logCenter - In the implementation block
@property (nonatomic,retain) id<SPTRunningLocalisationManager> localisationManager;                                  //@synthesize localisationManager=_localisationManager - In the implementation block
@property (nonatomic,retain) id<SPTRunningTestManager> testManager;                                                  //@synthesize testManager=_testManager - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (assign,nonatomic,__weak) UIViewController*<SPTNowPlayingContainingViewController> container; 
-(SPTLogCenter *)logCenter;
-(void)setLogCenter:(SPTLogCenter *)arg1 ;
-(id<SPTOfflineModeState>)offlineModeState;
-(void)offlineModeState:(id)arg1 updated:(char)arg2 ;
-(void)setOfflineModeState:(id<SPTOfflineModeState>)arg1 ;
-(id<SPTUpsellManager>)upsellManager;
-(void)setTestManager:(id<SPTRunningTestManager>)arg1 ;
-(id<SPTRunningTestManager>)testManager;
-(void)setUpsellManager:(id<SPTUpsellManager>)arg1 ;
-(unsigned)leadingEdge;
-(float)viewControllerPriority;
-(void)nowPlayingModelDidUpdateMetadata:(id)arg1 ;
-(void)nowPlayingModel:(id)arg1 didMoveToRelativeTrack:(id)arg2 ;
-(SPTNowPlayingModel *)nowPlayingModel;
-(void)setNowPlayingModel:(SPTNowPlayingModel *)arg1 ;
-(id)provideRemoteControlPolicy;
-(void)syncViewWithOfflineMode;
-(void)syncViewWithPlaybackManager;
-(id<SPTRunningPlaybackManager>)runningPlaybackManager;
-(void)temporarilyDisableSkipToNextButton;
-(void)temporarilyDisableSkipToPreviousButton;
-(void)disableButton:(id)arg1 forTimeInterval:(double)arg2 ;
-(void)enableButtonForTimer:(id)arg1 ;
-(void)headUnitViewHadNextButtonTapped:(id)arg1 ;
-(void)headUnitViewHadPreviousButtonTapped:(id)arg1 ;
-(void)headUnitViewHadPlayButtonTapped:(id)arg1 ;
-(void)headUnitView:(id)arg1 switchedToTempo:(unsigned)arg2 fromTempo:(unsigned)arg3 ;
-(void)headUnitView:(id)arg1 detectionModeChanged:(char)arg2 ;
-(void)headUnitViewHadRecalibrateButtonTapped:(id)arg1 ;
-(void)runningPlaybackManagerDidChangeTempo:(id)arg1 ;
-(void)runningPlaybackManagerDidChangeAutomaticallyChangingTempo:(id)arg1 ;
-(void)runningPlaybackManagerDidChangeMinimumTempo:(id)arg1 ;
-(void)runningPlaybackManagerDidChangeMaximumTempo:(id)arg1 ;
-(id)initWithModel:(id)arg1 theme:(id)arg2 upsellManager:(id)arg3 runningPlaybackManager:(id)arg4 userInterfaceFactory:(id)arg5 offlineModeState:(id)arg6 logCenter:(id)arg7 localisationManager:(id)arg8 testManager:(id)arg9 ;
-(void)setRunningPlaybackManager:(id<SPTRunningPlaybackManager>)arg1 ;
-(id<SPTRunningUserInterfaceFactory>)userInterfaceFactory;
-(void)setUserInterfaceFactory:(id<SPTRunningUserInterfaceFactory>)arg1 ;
-(id<SPTRunningLocalisationManager>)localisationManager;
-(void)setLocalisationManager:(id<SPTRunningLocalisationManager>)arg1 ;
-(void)dealloc;
-(CGSize)preferredContentSize;
-(void)viewWillAppear:(char)arg1 ;
-(SPTTheme *)theme;
-(void)setTheme:(SPTTheme *)arg1 ;
@end

