/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:45:38 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/D2238F36-ED84-40F4-9CB2-8C71CACC8B47/Spotify.app/Spotify
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Spotify/SPTStatefulPlayerPlaybackControlsObserver.h>
#import <Spotify/SPTStatefulPlayerQueueObserver.h>
#import <Spotify/SPTStatefulPlayerTrackPositionObserver.h>
#import <Spotify/SPTPlayerStagedContextObserver.h>

@protocol SPTPlayer;
@class SPTPlayerState, SPTPlayerRestrictions, NSHashTable, SPTStatefulPlayerQueue, SPTStatefulPlayerTrackPosition, SPTStatefulPlayerPlaybackControls, NSString;

@interface SPTStatefulPlayer : NSObject <SPTStatefulPlayerPlaybackControlsObserver, SPTStatefulPlayerQueueObserver, SPTStatefulPlayerTrackPositionObserver, SPTPlayerStagedContextObserver> {

	SPTPlayerState* _playerState;
	SPTPlayerRestrictions* _restrictions;
	NSHashTable* _observers;
	SPTStatefulPlayerQueue* _queue;
	SPTStatefulPlayerTrackPosition* _trackPosition;
	SPTStatefulPlayerPlaybackControls* _playbackControls;
	id<SPTPlayer> _player;

}

@property (nonatomic,retain) SPTPlayerState * playerState;                                      //@synthesize playerState=_playerState - In the implementation block
@property (nonatomic,retain) SPTPlayerRestrictions * restrictions;                              //@synthesize restrictions=_restrictions - In the implementation block
@property (nonatomic,retain) NSHashTable * observers;                                           //@synthesize observers=_observers - In the implementation block
@property (nonatomic,retain) SPTStatefulPlayerQueue * queue;                                    //@synthesize queue=_queue - In the implementation block
@property (nonatomic,retain) SPTStatefulPlayerTrackPosition * trackPosition;                    //@synthesize trackPosition=_trackPosition - In the implementation block
@property (nonatomic,retain) SPTStatefulPlayerPlaybackControls * playbackControls;              //@synthesize playbackControls=_playbackControls - In the implementation block
@property (nonatomic,retain) id<SPTPlayer> player;                                              //@synthesize player=_player - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)setShufflingContext:(char)arg1 ;
-(char)disallowSeeking;
-(void)seekTo:(double)arg1 ;
-(void)setRepeatingContext:(char)arg1 ;
-(void)setRepeatingTrack:(char)arg1 ;
-(id)currentTrack;
-(void)skipToNextTrack;
-(void)skipToPreviousTrack;
-(id)queuedTrackAtRelativeIndex:(int)arg1 ;
-(char)disallowSkippingToRelativeIndex:(int)arg1 ;
-(char)disallowPeekingAtRelativeIndex:(int)arg1 ;
-(id)playingTrack;
-(char)isQueueInSync;
-(SPTStatefulPlayerTrackPosition *)trackPosition;
-(SPTStatefulPlayerPlaybackControls *)playbackControls;
-(void)playerQueue:(id)arg1 didMoveToRelativeTrack:(id)arg2 ;
-(void)trackPositionDidChange:(id)arg1 ;
-(void)setTrackPosition:(SPTStatefulPlayerTrackPosition *)arg1 ;
-(void)setPlaybackControls:(SPTStatefulPlayerPlaybackControls *)arg1 ;
-(char)disallowSeekingAlways;
-(void)playbackControlsDidChange:(id)arg1 ;
-(char)isShufflingContext;
-(char)isRepeatingContext;
-(char)isRepeatingTrack;
-(void)player:(id)arg1 didStageContext:(id)arg2 ;
-(id)initWithPlayer:(id)arg1 ;
-(float)playbackSpeed;
-(void)setPlayer:(id<SPTPlayer>)arg1 ;
-(char)isPaused;
-(SPTStatefulPlayerQueue *)queue;
-(void)setQueue:(SPTStatefulPlayerQueue *)arg1 ;
-(id<SPTPlayer>)player;
-(void)dealloc;
-(double)duration;
-(void)addObserver:(id)arg1 ;
-(void)stop;
-(void)removeObserver:(id)arg1 ;
-(double)position;
-(void)setPaused:(char)arg1 ;
-(char)isLoading;
-(void)setObservers:(NSHashTable *)arg1 ;
-(NSHashTable *)observers;
-(void)setRestrictions:(SPTPlayerRestrictions *)arg1 ;
-(SPTPlayerRestrictions *)restrictions;
-(SPTPlayerState *)playerState;
-(void)setPlayerState:(SPTPlayerState *)arg1 ;
@end

