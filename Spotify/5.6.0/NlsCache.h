/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:45:20 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/D2238F36-ED84-40F4-9CB2-8C71CACC8B47/Spotify.app/Spotify
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <Spotify/Spotify-Structs.h>
@class NSString, NlsApiWorker;

@interface NlsCache : NSObject {

	NSString* _instanceId;
	NSString* _appId;
	NlsApiWorker* _worker;
	sqlite3Ref _db;
	NSString* _databasePath;

}

@property (nonatomic,retain) NSString * instanceId;                //@synthesize instanceId=_instanceId - In the implementation block
@property (nonatomic,retain) NSString * appId;                     //@synthesize appId=_appId - In the implementation block
@property (__weak) NlsApiWorker * worker;                          //@synthesize worker=_worker - In the implementation block
@property (assign,nonatomic) sqlite3Ref db;                        //@synthesize db=_db - In the implementation block
@property (nonatomic,retain) NSString * databasePath;              //@synthesize databasePath=_databasePath - In the implementation block
+(id)databasePathForInstanceId:(id)arg1 appId:(id)arg2 withErrorLogger:(id)arg3 ;
+(id)appIdPathForAppId:(id)arg1 withErrorLogger:(id)arg2 ;
+(char)databaseFileExistsForInstanceId:(id)arg1 appId:(id)arg2 withErrorLogger:(id)arg3 ;
+(id)renameDatabaseFileForInstanceId:(id)arg1 appId:(id)arg2 withErrorLogger:(id)arg3 ;
+(id)removeDatabaseFileForInstanceId:(id)arg1 appId:(id)arg2 withErrorLogger:(id)arg3 ;
-(NlsApiWorker *)worker;
-(void)setWorker:(NlsApiWorker *)arg1 ;
-(sqlite3Ref)initializeDatabase;
-(int)configureDatabase:(sqlite3Ref)arg1 ;
-(int)configureTable:(id)arg1 forDatabase:(sqlite3Ref)arg2 ;
-(char)isTableExistAndValid:(id)arg1 forDatabase:(sqlite3Ref)arg2 ;
-(int)dropTable:(id)arg1 forDatabase:(sqlite3Ref)arg2 ;
-(int)createTable:(id)arg1 forDatabase:(sqlite3Ref)arg2 ;
-(id)tableNameFromTableType:(int)arg1 ;
-(id)initWithWorker:(id)arg1 appId:(id)arg2 instanceId:(id)arg3 ;
-(char)insertRecord:(id)arg1 ofType:(int)arg2 toTable:(int)arg3 withArrivalTime:(double)arg4 processorId:(int)arg5 ;
-(void)deleteOldRecords:(int)arg1 curTime:(double)arg2 ;
-(char)deleteRowsOfTable:(int)arg1 ;
-(char)deleteRowOfTable:(int)arg1 atRow:(id)arg2 ;
-(id)getRowsSortedByTimeFromTable:(int)arg1 withLimit:(unsigned)arg2 ;
-(int)getRowCountOfTable:(int)arg1 ;
-(void)processDataFromOtherDatabases;
-(void)collectPendingPings;
-(void)dealloc;
-(sqlite3Ref)db;
-(void)setDb:(sqlite3Ref)arg1 ;
-(void)setInstanceId:(NSString *)arg1 ;
-(NSString *)instanceId;
-(int)closeDatabase;
-(int)openDatabase;
-(void)setDatabasePath:(NSString *)arg1 ;
-(NSString *)appId;
-(void)setAppId:(NSString *)arg1 ;
-(NSString *)databasePath;
@end

