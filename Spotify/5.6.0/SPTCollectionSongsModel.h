/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:45:32 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/D2238F36-ED84-40F4-9CB2-8C71CACC8B47/Spotify.app/Spotify
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Spotify/SPTCollectionSongItemPlaying.h>
#import <Spotify/SPTPlayerObserver.h>
#import <Spotify/SPTOfflineModeStateObserver.h>
#import <Spotify/SPTCollectionSorting.h>
#import <Spotify/SPTCollectionFiltering.h>

@protocol SPTCollectionInternal, SPTCollectionSongsModelDelegate, SPTPlayer, SPTTrackContextPlayer, SPTOfflineModeState, SPTClientSettings, SPTProductState, SPTCollectionCacheplayTestManager;
@class NSObject, SPTCollectionContextMenuComponentFactory, NSString, NSURL, SPTrackContext, NSArray;

@interface SPTCollectionSongsModel : NSObject <SPTCollectionSongItemPlaying, SPTPlayerObserver, SPTOfflineModeStateObserver, SPTCollectionSorting, SPTCollectionFiltering> {

	NSObject*<SPTCollectionInternal> _collection;
	SPTCollectionContextMenuComponentFactory* _contextMenuComponentFactory;
	NSString* _textFilter;
	char _showsOnlyOfflinedContent;
	char _sessionOffline;
	char _showOnlyLocalFiles;
	char _currentlyPlaying;
	char _ascendingSortOrder;
	char _updatePending;
	char _contentFiltered;
	char _loaded;
	char _observationsRemoved;
	id<SPTCollectionSongsModelDelegate> _delegate;
	NSURL* _currentlyPlayingURL;
	id<SPTPlayer> _player;
	id<SPTTrackContextPlayer> _trackContextPlayer;
	SPTrackContext* _collectionSongsContext;
	NSArray* _sectionedSongItems;
	NSArray* _cacheplayIndexMap;
	unsigned _sortColumn;
	id<SPTOfflineModeState> _offlineNotifier;
	id<SPTClientSettings> _clientSettings;
	id<SPTProductState> _productState;
	id<SPTCollectionCacheplayTestManager> _cacheplayTestManager;
	double _lastRefresh;

}

@property (assign,nonatomic,__weak) id<SPTCollectionSongsModelDelegate> delegate;                            //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,retain) NSURL * currentlyPlayingURL;                                                    //@synthesize currentlyPlayingURL=_currentlyPlayingURL - In the implementation block
@property (assign,getter=isOffline,nonatomic) char offline; 
@property (getter=isEmpty,nonatomic,readonly) char empty; 
@property (assign,getter=isSessionOffline,nonatomic) char sessionOffline;                                    //@synthesize sessionOffline=_sessionOffline - In the implementation block
@property (nonatomic,readonly) NSArray * sectionIndexTitles; 
@property (assign,nonatomic) char showOnlyLocalFiles;                                                        //@synthesize showOnlyLocalFiles=_showOnlyLocalFiles - In the implementation block
@property (nonatomic,retain) id<SPTPlayer> player;                                                           //@synthesize player=_player - In the implementation block
@property (nonatomic,retain) id<SPTTrackContextPlayer> trackContextPlayer;                                   //@synthesize trackContextPlayer=_trackContextPlayer - In the implementation block
@property (assign,getter=isCurrentlyPlaying,nonatomic) char currentlyPlaying;                                //@synthesize currentlyPlaying=_currentlyPlaying - In the implementation block
@property (nonatomic,retain) SPTrackContext * collectionSongsContext;                                        //@synthesize collectionSongsContext=_collectionSongsContext - In the implementation block
@property (nonatomic,retain) NSArray * sectionedSongItems;                                                   //@synthesize sectionedSongItems=_sectionedSongItems - In the implementation block
@property (nonatomic,retain) NSArray * cacheplayIndexMap;                                                    //@synthesize cacheplayIndexMap=_cacheplayIndexMap - In the implementation block
@property (assign,nonatomic) unsigned sortColumn;                                                            //@synthesize sortColumn=_sortColumn - In the implementation block
@property (assign,nonatomic) char ascendingSortOrder;                                                        //@synthesize ascendingSortOrder=_ascendingSortOrder - In the implementation block
@property (assign,nonatomic) double lastRefresh;                                                             //@synthesize lastRefresh=_lastRefresh - In the implementation block
@property (assign,nonatomic) char updatePending;                                                             //@synthesize updatePending=_updatePending - In the implementation block
@property (assign,getter=isContentFiltered,nonatomic) char contentFiltered;                                  //@synthesize contentFiltered=_contentFiltered - In the implementation block
@property (nonatomic,retain) id<SPTOfflineModeState> offlineNotifier;                                        //@synthesize offlineNotifier=_offlineNotifier - In the implementation block
@property (assign,nonatomic) char loaded;                                                                    //@synthesize loaded=_loaded - In the implementation block
@property (nonatomic,retain) id<SPTClientSettings> clientSettings;                                           //@synthesize clientSettings=_clientSettings - In the implementation block
@property (nonatomic,retain) id<SPTProductState> productState;                                               //@synthesize productState=_productState - In the implementation block
@property (assign,nonatomic,__weak) id<SPTCollectionCacheplayTestManager> cacheplayTestManager;              //@synthesize cacheplayTestManager=_cacheplayTestManager - In the implementation block
@property (assign,nonatomic) char observationsRemoved;                                                       //@synthesize observationsRemoved=_observationsRemoved - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) NSArray * supportedSortColumns; 
@property (nonatomic,copy) NSString * textFilter; 
@property (assign,nonatomic) char showsOnlyOfflinedContent; 
-(id<SPTProductState>)productState;
-(void)setProductState:(id<SPTProductState>)arg1 ;
-(id<SPTOfflineModeState>)offlineNotifier;
-(void)offlineModeState:(id)arg1 updated:(char)arg2 ;
-(void)player:(id)arg1 stateDidChange:(id)arg2 ;
-(void)removeObservers;
-(id<SPTTrackContextPlayer>)trackContextPlayer;
-(void)setTrackContextPlayer:(id<SPTTrackContextPlayer>)arg1 ;
-(void)setOfflineNotifier:(id<SPTOfflineModeState>)arg1 ;
-(id)initWithCollection:(id)arg1 player:(id)arg2 contextMenuComponentFactory:(id)arg3 offlineNotifier:(id)arg4 trackContextPlayer:(id)arg5 clientSettings:(id)arg6 productState:(id)arg7 cacheplayTestManager:(id)arg8 ;
-(id<SPTCollectionCacheplayTestManager>)cacheplayTestManager;
-(void)setCacheplayTestManager:(id<SPTCollectionCacheplayTestManager>)arg1 ;
-(void)playCollectionSongTrackItem:(id)arg1 ;
-(char)checkPlayabilityOfCollectionSongTrackItem:(id)arg1 ;
-(void)updateCurrentlyPlayingTrack:(id)arg1 ;
-(void)setSortColumn:(unsigned)arg1 ;
-(char)isSessionOffline;
-(void)setCacheplayIndexMap:(NSArray *)arg1 ;
-(NSArray *)cacheplayIndexMap;
-(id)contextMenuComponentForTrackAtIndexPath:(id)arg1 ;
-(unsigned)offlineSyncStateForTrackAtIndexPath:(id)arg1 ;
-(unsigned)offlineAvailability;
-(unsigned)flatIndexForIndexPath:(id)arg1 ;
-(char)isContentFiltered;
-(void)resetFilters;
-(void)setTextFilter:(NSString *)arg1 ;
-(void)setCurrentlyPlayingURL:(NSURL *)arg1 ;
-(void)setContentFiltered:(char)arg1 ;
-(char)ascendingSortOrder;
-(void)setAscendingSortOrder:(char)arg1 ;
-(NSArray *)supportedSortColumns;
-(unsigned)sortColumn;
-(void)setSortOrderWithColumn:(unsigned)arg1 ascending:(char)arg2 ;
-(char)showsOnlyOfflinedContent;
-(void)setShowsOnlyOfflinedContent:(char)arg1 ;
-(void)willLogoutNotification:(id)arg1 ;
-(char)observationsRemoved;
-(void)setObservationsRemoved:(char)arg1 ;
-(char)updatePending;
-(double)lastRefresh;
-(void)setUpdatePending:(char)arg1 ;
-(void)updateTracks;
-(void)updateTracksWithThrottle:(double)arg1 ;
-(SPTrackContext *)collectionSongsContext;
-(char)trackIsOffline:(id)arg1 ;
-(void)setSectionedSongItems:(NSArray *)arg1 ;
-(NSArray *)sectionedSongItems;
-(void)setLastRefresh:(double)arg1 ;
-(void)setSessionOffline:(char)arg1 ;
-(char)isCurrentlyPlaying;
-(void)setCurrentlyPlaying:(char)arg1 ;
-(void)setCollectionSongsContext:(SPTrackContext *)arg1 ;
-(char)showOnlyLocalFiles;
-(NSURL *)currentlyPlayingURL;
-(void)playShuffled:(char)arg1 ;
-(void)setShowOnlyLocalFiles:(char)arg1 ;
-(void)setPlayer:(id<SPTPlayer>)arg1 ;
-(id<SPTPlayer>)player;
-(void)setLoaded:(char)arg1 ;
-(char)loaded;
-(void)setDelegate:(id<SPTCollectionSongsModelDelegate>)arg1 ;
-(void)dealloc;
-(id<SPTCollectionSongsModelDelegate>)delegate;
-(int)numberOfItemsInSection:(int)arg1 ;
-(int)numberOfSections;
-(char)isEmpty;
-(id)context;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(NSArray *)sectionIndexTitles;
-(id<SPTClientSettings>)clientSettings;
-(NSString *)textFilter;
-(unsigned)numberOfTracks;
-(void)setClientSettings:(id<SPTClientSettings>)arg1 ;
-(char)isOffline;
-(void)setOffline:(char)arg1 ;
-(id)itemAtIndexPath:(id)arg1 ;
@end

