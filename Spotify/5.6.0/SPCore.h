/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:45:52 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/D2238F36-ED84-40F4-9CB2-8C71CACC8B47/Spotify.app/Spotify
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Spotify/Spotify-Structs.h>
#import <Spotify/SPTCoreLoginController.h>
#import <Spotify/SPTCoreEventProcessingController.h>

@protocol SPTCoreLoginControllerDelegate, SPTOfflineModeState;
@class SPSession, SPTEntityService, SPTConnectivityManager, SPApHermesController, SPTSocialManager, SPTOfflineManager, SPTCoreCreateOptions, NSThread, NSTimer, NSRunLoop, NSString;

@interface SPCore : NSObject <SPTCoreLoginController, SPTCoreEventProcessingController> {

	Core* _core;
	Prefs* _prefs;
	int _blockCoreProcessingCount;
	double _coreWasBlockedAt;
	scoped_connection* _core_event_connection;
	scoped_connection* _streaming_rules_event;
	SPCoreCallbacks _coreCallbacks;
	SPSession* _session;
	id<SPTCoreLoginControllerDelegate> _loginControllerDelegate;
	SPTEntityService* _entityService;
	SPTConnectivityManager* _connectivityManager;
	id<SPTOfflineModeState> _offlineNotifier;
	SPApHermesController* _hermes;
	SPTSocialManager* _social;
	SPTOfflineManager* _offlineManager;
	SPSession* _internalSession;
	SPTCoreCreateOptions* _createOptions;
	NSThread* _coreThread;
	NSTimer* _coreTimer;
	NSRunLoop* _coreRunLoop;

}

@property (nonatomic,retain) SPSession * session;                                                     //@synthesize session=_session - In the implementation block
@property (nonatomic,retain) SPTEntityService * entityService;                                        //@synthesize entityService=_entityService - In the implementation block
@property (nonatomic,retain) SPTConnectivityManager * connectivityManager;                            //@synthesize connectivityManager=_connectivityManager - In the implementation block
@property (nonatomic,retain) id<SPTOfflineModeState> offlineNotifier;                                 //@synthesize offlineNotifier=_offlineNotifier - In the implementation block
@property (nonatomic,retain) SPApHermesController * hermes;                                           //@synthesize hermes=_hermes - In the implementation block
@property (nonatomic,retain) SPTSocialManager * social;                                               //@synthesize social=_social - In the implementation block
@property (nonatomic,retain) SPTOfflineManager * offlineManager;                                      //@synthesize offlineManager=_offlineManager - In the implementation block
@property (assign,nonatomic) char forcedOffline; 
@property (nonatomic,retain) SPSession * internalSession;                                             //@synthesize internalSession=_internalSession - In the implementation block
@property (nonatomic,retain) SPTCoreCreateOptions * createOptions;                                    //@synthesize createOptions=_createOptions - In the implementation block
@property (nonatomic,retain) NSThread * coreThread;                                                   //@synthesize coreThread=_coreThread - In the implementation block
@property (nonatomic,retain) NSTimer * coreTimer;                                                     //@synthesize coreTimer=_coreTimer - In the implementation block
@property (nonatomic,retain) NSRunLoop * coreRunLoop;                                                 //@synthesize coreRunLoop=_coreRunLoop - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (assign,nonatomic) id<SPTCoreLoginControllerDelegate> loginControllerDelegate;              //@synthesize loginControllerDelegate=_loginControllerDelegate - In the implementation block
+(id)core;
+(void)setupCoreWithCreateOptions:(id)arg1 ;
+(char)isOnCoreThread;
+(void)startCoreThread;
+(id)coreVersion;
+(void)useLogConfigurationFile:(id)arg1 ;
+(void)initializeCoreSpecific:(id)arg1 ;
+(Core*)createCoreWithPrefs:(Prefs*)arg1 createOptions:(id)arg2 ;
+(void)deinitializeCoreSpecific;
+(void)destroyCore;
+(id)sharedCore;
-(void)setForcedOffline:(char)arg1 ;
-(void)setConnectivityManager:(SPTConnectivityManager *)arg1 ;
-(char)forcedOffline;
-(SPTConnectivityManager *)connectivityManager;
-(id<SPTOfflineModeState>)offlineNotifier;
-(id)storedCredentialsAndCanonicalUsername:(id*)arg1 ;
-(void)prepareForShutdown;
-(void)forgetStoredCredentials;
-(void)loginWithCredentials:(id)arg1 options:(id)arg2 ;
-(SPApHermesController *)hermes;
-(SPTEntityService *)entityService;
-(void)blockCoreProcessing;
-(void)unblockCoreProcessing;
-(void)setHermes:(SPApHermesController *)arg1 ;
-(SPTOfflineManager *)offlineManager;
-(void)setOfflineManager:(SPTOfflineManager *)arg1 ;
-(void)setEntityService:(SPTEntityService *)arg1 ;
-(void)setOfflineNotifier:(id<SPTOfflineModeState>)arg1 ;
-(SPTSocialManager *)social;
-(void)setLoginControllerDelegate:(id<SPTCoreLoginControllerDelegate>)arg1 ;
-(void)eraseOfflineUser:(id)arg1 ;
-(void)setRememberMeModeForUsername:(id)arg1 rememberMe:(char)arg2 ;
-(void)processEvent:(id)arg1 ;
-(void)performBlockOnCoreThread:(/*^block*/id)arg1 ;
-(Core*)cpp;
-(void)performBlockOnCoreThreadWhenLoggedIn:(/*^block*/id)arg1 ;
-(void)setupWithCreateOptions:(id)arg1 ;
-(void)coreCppCreate;
-(NSThread *)coreThread;
-(void)coreCppDestroy;
-(void)setCreateOptions:(SPTCoreCreateOptions *)arg1 ;
-(void)coreThreadFunc;
-(void)executeBlockRunner:(id)arg1 ;
-(void)performBlock:(/*^block*/id)arg1 withSelector:(SEL)arg2 synchronous:(char)arg3 ;
-(void)executeBlockRunnerWhenLoggedIn:(id)arg1 ;
-(void)performBlockOnCoreThreadSynchronous:(/*^block*/id)arg1 ;
-(SPTCoreCreateOptions *)createOptions;
-(void)setSocial:(SPTSocialManager *)arg1 ;
-(void)setInternalSession:(SPSession *)arg1 ;
-(SPSession *)internalSession;
-(void)coreTimerFunc:(id)arg1 ;
-(void)setCoreTimer:(NSTimer *)arg1 ;
-(NSRunLoop *)coreRunLoop;
-(NSTimer *)coreTimer;
-(void)setCoreThread:(NSThread *)arg1 ;
-(void)setCoreRunLoop:(NSRunLoop *)arg1 ;
-(char)shouldProcessEvents;
-(int)runCoreDispatch;
-(void)coreTimerNotify;
-(id<SPTCoreLoginControllerDelegate>)loginControllerDelegate;
-(id)errorForEvent:(id)arg1 ;
-(void)teardownServices;
-(void)wasLoggedOut;
-(char)hasStoredCredentials;
-(void)processEventOnCoreThread:(id)arg1 ;
-(void)destroySession;
-(SPSession *)session;
-(void)setSession:(SPSession *)arg1 ;
-(void)flushCaches;
-(void)logout;
-(void)createSession;
-(void)flushAllCaches;
@end

