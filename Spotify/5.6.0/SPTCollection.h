/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:45:32 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/D2238F36-ED84-40F4-9CB2-8C71CACC8B47/Spotify.app/Spotify
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Spotify/SPCollectionControllerDelegate.h>
#import <Spotify/FollowModelObserver.h>
#import <Spotify/SPTCollectionInternal.h>
#import <Spotify/SPTCollectionOfflining.h>

@protocol SPTCollectionArtistList, SPTCollectionAlbumList, SPTProductState;
@class SPSession, SPTOfflineManager, SPTCollectionAllTracksModel, SPTCollectionCosmos, NSPointerArray, SPCollectionController, SPCollectionOfflineController, NSObject, NSDictionary, FollowModel, NSString;

@interface SPTCollection : NSObject <SPCollectionControllerDelegate, FollowModelObserver, SPTCollectionInternal, SPTCollectionOfflining> {

	char _isYourLibraryEnabled;
	char _isLoaded;
	SPTCollectionAllTracksModel* _allTracksModel;
	SPSession* _session;
	SPTOfflineManager* _offlineManager;
	SPTCollectionCosmos* _collectionCosmos;
	NSPointerArray* _observers;
	SPCollectionController* _collectionController;
	SPCollectionOfflineController* _collectionOfflineController;
	NSObject*<SPTCollectionArtistList> _artistsMetadataList;
	NSObject*<SPTCollectionAlbumList> _albumsMetadataList;
	NSDictionary* _albumObjects;
	NSDictionary* _artistObjects;
	FollowModel* _followModel;
	id<SPTProductState> _productState;
	NSString* _currentUserName;

}

@property (nonatomic,retain) SPTCollectionAllTracksModel * allTracksModel;                                    //@synthesize allTracksModel=_allTracksModel - In the implementation block
@property (assign,nonatomic,__weak) SPSession * session;                                                      //@synthesize session=_session - In the implementation block
@property (nonatomic,retain) SPTOfflineManager * offlineManager;                                              //@synthesize offlineManager=_offlineManager - In the implementation block
@property (nonatomic,retain) SPTCollectionCosmos * collectionCosmos;                                          //@synthesize collectionCosmos=_collectionCosmos - In the implementation block
@property (nonatomic,retain) NSPointerArray * observers;                                                      //@synthesize observers=_observers - In the implementation block
@property (assign,nonatomic,__weak) SPCollectionController * collectionController;                            //@synthesize collectionController=_collectionController - In the implementation block
@property (assign,nonatomic,__weak) SPCollectionOfflineController * collectionOfflineController;              //@synthesize collectionOfflineController=_collectionOfflineController - In the implementation block
@property (nonatomic,retain) NSObject*<SPTCollectionArtistList> artistsMetadataList;                          //@synthesize artistsMetadataList=_artistsMetadataList - In the implementation block
@property (nonatomic,retain) NSObject*<SPTCollectionAlbumList> albumsMetadataList;                            //@synthesize albumsMetadataList=_albumsMetadataList - In the implementation block
@property (nonatomic,retain) NSDictionary * albumObjects;                                                     //@synthesize albumObjects=_albumObjects - In the implementation block
@property (nonatomic,retain) NSDictionary * artistObjects;                                                    //@synthesize artistObjects=_artistObjects - In the implementation block
@property (nonatomic,retain) FollowModel * followModel;                                                       //@synthesize followModel=_followModel - In the implementation block
@property (assign,nonatomic) char isYourLibraryEnabled;                                                       //@synthesize isYourLibraryEnabled=_isYourLibraryEnabled - In the implementation block
@property (nonatomic,retain) id<SPTProductState> productState;                                                //@synthesize productState=_productState - In the implementation block
@property (assign,nonatomic) char isLoaded;                                                                   //@synthesize isLoaded=_isLoaded - In the implementation block
@property (nonatomic,retain) NSString * currentUserName;                                                      //@synthesize currentUserName=_currentUserName - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) id<SPTCollectionOfflining> offlineController; 
@property (nonatomic,readonly) NSString * username; 
@property (getter=isBookmarkModelEnabled,readonly) char bookmarkModelEnabled; 
@property (getter=isFollowedArtistsOnlyEnabled,readonly) char followedArtistsOnlyEnabled; 
@property (nonatomic,readonly) char isValid; 
@property (nonatomic,readonly) NSObject*<SPTCollectionArtistList> artists; 
@property (nonatomic,readonly) NSObject*<SPTCollectionAlbumList> albums; 
@property (nonatomic,readonly) NSObject*<SPTMetadataObjectList> tracks; 
-(id<SPTProductState>)productState;
-(void)setProductState:(id<SPTProductState>)arg1 ;
-(char)canAddTrackWithURL:(id)arg1 ;
-(void)addURL:(id)arg1 bySource:(id)arg2 showUIConfirmation:(char)arg3 ;
-(SPTOfflineManager *)offlineManager;
-(char)isBookmarkModelEnabled;
-(void)setOfflineManager:(SPTOfflineManager *)arg1 ;
-(void)removeURL:(id)arg1 bySource:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)addURL:(id)arg1 bySource:(id)arg2 completion:(/*^block*/id)arg3 ;
-(char)isAlbumComplete:(id)arg1 ;
-(void)removeURL:(id)arg1 bySource:(id)arg2 showUIConfirmation:(char)arg3 ;
-(FollowModel *)followModel;
-(void)setFollowModel:(FollowModel *)arg1 ;
-(void)followModel:(id)arg1 followDataDidChange:(id)arg2 ;
-(id)initWithSession:(id)arg1 collectionController:(id)arg2 collectionOfflineController:(id)arg3 offlineManager:(id)arg4 followFeature:(id)arg5 collectionCosmos:(id)arg6 isYourLibraryEnabled:(char)arg7 productState:(id)arg8 ;
-(char)isURLSupportedByCollection:(id)arg1 ;
-(SPCollectionController *)collectionController;
-(void)setCollectionController:(SPCollectionController *)arg1 ;
-(void)setCollectionOfflineController:(SPCollectionOfflineController *)arg1 ;
-(id)contextForAlbumURL:(id)arg1 ;
-(id)contextForArtistURL:(id)arg1 ;
-(SPCollectionOfflineController *)collectionOfflineController;
-(id)collectionArtistForArtistURL:(id)arg1 ;
-(id<SPTCollectionOfflining>)offlineController;
-(char)containsOfflineURL:(id)arg1 ;
-(void)addOfflineURL:(id)arg1 withTrackOrder:(id)arg2 ;
-(void)removeOfflineURL:(id)arg1 ;
-(unsigned)offlineSyncStateForTrack:(id)arg1 ;
-(unsigned)offlineSyncStateForURL:(id)arg1 ;
-(char)isFollowedArtist:(id)arg1 ;
-(int)countOfTracksInCollectionForArtistLink:(id)arg1 ;
-(char)isFollowedArtistsOnlyEnabled;
-(char)entityHasOfflineContent:(id)arg1 ;
-(NSString *)currentUserName;
-(SPTCollectionCosmos *)collectionCosmos;
-(char)isYourLibraryEnabled;
-(void)addURLs:(id)arg1 bySource:(id)arg2 completion:(/*^block*/id)arg3 ;
-(NSObject*<SPTCollectionArtistList>)artistsMetadataList;
-(void)setArtistsMetadataList:(NSObject*<SPTCollectionArtistList>)arg1 ;
-(NSObject*<SPTCollectionAlbumList>)albumsMetadataList;
-(void)setAlbumsMetadataList:(NSObject*<SPTCollectionAlbumList>)arg1 ;
-(SPTCollectionAllTracksModel *)allTracksModel;
-(void)setAllTracksModel:(SPTCollectionAllTracksModel *)arg1 ;
-(id)allTracksForArtistLink:(id)arg1 ;
-(id)allTracksForAlbumLink:(id)arg1 ;
-(id)allTracksInCollection;
-(NSDictionary *)artistObjects;
-(NSDictionary *)albumObjects;
-(void)saveStateAndNotifyObservers;
-(void)setArtistObjects:(NSDictionary *)arg1 ;
-(void)setAlbumObjects:(NSDictionary *)arg1 ;
-(void)addOfflineURL:(id)arg1 ;
-(void)addWholeCollectionOffline;
-(void)addWholeCollectionOfflineWithTrackOrder:(id)arg1 ;
-(void)removeWholeCollectionOffline;
-(void)addOfflineObserver:(id)arg1 ;
-(void)removeOfflineObserver:(id)arg1 ;
-(char)containsWholeCollectionOffline;
-(void)followArtistWithURL:(id)arg1 ;
-(void)unfollowArtistWithURL:(id)arg1 ;
-(void)artistListDidUpdateWithArtists:(id)arg1 ;
-(void)albumListDidUpdateWithAlbums:(id)arg1 ;
-(id)collectionAlbumForAlbumURL:(id)arg1 ;
-(id)contextForAllTracksInCollection;
-(int)countOfAlbumsInCollectionForArtistLink:(id)arg1 ;
-(int)countOfTracksInCollectionForAlbumLink:(id)arg1 ;
-(void)setCollectionCosmos:(SPTCollectionCosmos *)arg1 ;
-(void)setIsYourLibraryEnabled:(char)arg1 ;
-(void)setCurrentUserName:(NSString *)arg1 ;
-(SPSession *)session;
-(NSObject*<SPTCollectionAlbumList>)albums;
-(void)saveState;
-(void)setIsLoaded:(char)arg1 ;
-(void)addObserver:(id)arg1 ;
-(char)isValid;
-(char)isEmpty;
-(void)removeObserver:(id)arg1 ;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(char)isLoaded;
-(void)setObservers:(NSPointerArray *)arg1 ;
-(NSPointerArray *)observers;
-(void)setSession:(SPSession *)arg1 ;
-(void)unload;
-(NSString *)username;
-(NSObject*<SPTMetadataObjectList>)tracks;
-(char)containsURL:(id)arg1 ;
-(NSObject*<SPTCollectionArtistList>)artists;
@end

