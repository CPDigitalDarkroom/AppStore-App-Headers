/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:45:53 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/D2238F36-ED84-40F4-9CB2-8C71CACC8B47/Spotify.app/Spotify
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Spotify/Spotify-Structs.h>
#import <Spotify/SPTPlayerTrackListContext.h>

@class NSURL, SPPlaylist, NSMutableArray, NSArray, NSString;

@interface SPTrackContext : NSObject <SPTPlayerTrackListContext> {

	shared_ptr<spotify::tlc::TrackListContext>* _cppObject;
	scoped_connection* _context_notifier_connection;
	shared_ptr<spotify::tlc::TrackListContextFilter>* _filterBridge;
	NSURL* _mosaicURL;
	/*^block*/id _filter;
	shared_ptr<spotify::tlc::TrackListContext>* _context;

}

@property (nonatomic,readonly) int unreadRowsCount; 
@property (nonatomic,retain,readonly) SPPlaylist * playlist; 
@property (nonatomic,readonly) NSMutableArray * tracks; 
@property (nonatomic,readonly) NSArray * rows; 
@property (nonatomic,readonly) unsigned currentRow; 
@property (assign,nonatomic) unsigned displayMode; 
@property (nonatomic,readonly) char canReorder; 
@property (nonatomic,readonly) char canAppend; 
@property (nonatomic,readonly) char canDelete; 
@property (nonatomic,readonly) char canModify; 
@property (assign,nonatomic) char canShuffle; 
@property (assign,nonatomic) char canRepeat; 
@property (assign,nonatomic) char canSkipForward; 
@property (assign,nonatomic) char canSkipBackward; 
@property (nonatomic,readonly) char isInbox; 
@property (nonatomic,readonly) char isCollection; 
@property (nonatomic,readonly) NSURL * mosaicURL;                                          //@synthesize mosaicURL=_mosaicURL - In the implementation block
@property (nonatomic,readonly) char isTemporary; 
@property (nonatomic,readonly) int playState; 
@property (assign,nonatomic) char shuffle; 
@property (assign,nonatomic) char repeat; 
@property (assign,nonatomic) char hideUnavailableTracks; 
@property (nonatomic,retain) NSString * textFilter; 
@property (nonatomic,copy) id filter;                                                      //@synthesize filter=_filter - In the implementation block
@property (assign,nonatomic) int sortColumn; 
@property (assign,getter=isReverseSortOrder,nonatomic) char reverseSortOrder; 
@property (nonatomic,readonly) NSURL * trackSourceLink; 
@property (nonatomic,readonly) NSString * trackSourceContext; 
@property (getter=isLoaded,nonatomic,readonly) char loaded; 
@property (nonatomic,readonly) NSArray * trackURLs; 
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (readonly) shared_ptr<spotify::tlc::TrackListContext>* context;                  //@synthesize context=_context - In the implementation block
+(id)trackContextWithTracklistContext:(const shared_ptr<spotify::tlc::TrackListContext>*)arg1 ;
+(void)load;
+(id)trackContextWithLink:(id)arg1 session:(id)arg2 ;
+(id)KVOChangeFlagToKeyPathMap;
+(id)KVOKeyPathsForChangeFlags:(unsigned)arg1 ;
+(id)KVOAllowedKeyPaths;
-(NSURL *)mosaicURL;
-(void)setBaseCppObject:(const shared_ptr<spotify::tlc::TrackListContext>*)arg1 ;
-(void)dealloc;
-(char)isEqual:(id)arg1 ;
-(unsigned)hash;
-(shared_ptr<spotify::tlc::TrackListContext>*)context;
-(char)isInbox;
-(void)setTrackSource:(char*)arg1 context:(id)arg2 sourceLink:(id)arg3 ;
-(NSArray *)trackURLs;
-(NSURL *)trackSourceLink;
-(unsigned)countOfTracks;
-(void)setSortColumn:(int)arg1 ;
-(void)setHideUnavailableTracks:(char)arg1 ;
-(void)setTextFilter:(NSString *)arg1 ;
-(void)setSortColumn:(int)arg1 reverseSortOrder:(char)arg2 ;
-(int)sortColumn;
-(unsigned)countOfRows;
-(id)objectInRowsAtIndex:(unsigned)arg1 ;
-(id)objectInTracksAtIndex:(unsigned)arg1 ;
-(int)unreadRowsCount;
-(NSURL *)mosaicURL;
-(void)getDateAdded:(id*)arg1 andLength:(unsigned*)arg2 forRowAtIndex:(unsigned)arg3 ;
-(void)moveTracksAtIndexes:(id)arg1 toStartingIndex:(unsigned)arg2 ;
-(void)setShuffle:(char)arg1 ;
-(void)insertObject:(id)arg1 inTracksAtIndex:(unsigned)arg2 ;
-(void)removeObjectFromTracksAtIndex:(unsigned)arg1 ;
-(char)hasPlayableContentWhenOnline;
-(char)hasPlayableContentWhenOffline;
-(void)setFilterByUser:(id)arg1 ;
-(char)isReverseSortOrder;
-(unsigned)currentRow;
-(char)canAppend;
-(char)canModify;
-(char)canShuffle;
-(void)setCanShuffle:(char)arg1 ;
-(char)canRepeat;
-(void)setCanRepeat:(char)arg1 ;
-(char)canSkipBackward;
-(void)setCanSkipBackward:(char)arg1 ;
-(char)canSkipForward;
-(void)setCanSkipForward:(char)arg1 ;
-(char)isCollection;
-(char)hideUnavailableTracks;
-(NSString *)trackSourceContext;
-(id)dateAddedForRowAtIndex:(unsigned)arg1 ;
-(void)contextChangeNotificationFlags:(unsigned)arg1 ;
-(char)canReorder;
-(char)shuffle;
-(int)playState;
-(id)filter;
-(void)setReverseSortOrder:(char)arg1 ;
-(id)methodSignatureForSelector:(SEL)arg1 ;
-(shared_ptr<spotify::tlc::TrackListContext>*)context;
-(void)setFilter:(id)arg1 ;
-(void)beginUpdates;
-(void)endUpdates;
-(void)forwardInvocation:(id)arg1 ;
-(void)addObserver:(id)arg1 forKeyPath:(id)arg2 options:(unsigned)arg3 context:(void*)arg4 ;
-(void)update;
-(void)removeObserver:(id)arg1 forKeyPath:(id)arg2 ;
-(char)isLoaded;
-(void)setDisplayMode:(unsigned)arg1 ;
-(unsigned)displayMode;
-(char)canDelete;
-(char)isTemporary;
-(NSString *)textFilter;
-(SPPlaylist *)playlist;
-(void)setRepeat:(char)arg1 ;
-(char)repeat;
@end

