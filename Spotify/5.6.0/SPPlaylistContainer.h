/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:45:52 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/D2238F36-ED84-40F4-9CB2-8C71CACC8B47/Spotify.app/Spotify
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Spotify/Spotify-Structs.h>
#import <Spotify/SPOfflineStateProtocol.h>
#import <Spotify/SPPlaylistContainerItem.h>

@class NSString, SPPlaylistOfflineSyncStatus, NSMutableArray, NSArray, NSURL;

@interface SPPlaylistContainer : NSObject <SPOfflineStateProtocol, SPPlaylistContainerItem> {

	RefPtr<spotify::playlist::PlaylistContainer>* _cppObject;

}

@property (nonatomic,readonly) NSString * detailDescriptionText; 
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) char isAvailableOffline; 
@property (assign,nonatomic) char makeAvailableOffline; 
@property (nonatomic,readonly) int offlineState; 
@property (nonatomic,readonly) float offlineProgress; 
@property (nonatomic,readonly) SPPlaylistOfflineSyncStatus * offlineSyncStatus; 
@property (getter=isLoaded,nonatomic,readonly) char loaded; 
@property (nonatomic,readonly) NSMutableArray * children; 
@property (readonly) NSArray * actualPlaylists; 
@property (readonly) NSArray * folders; 
@property (readonly) char publicStarred; 
@property (getter=isMigratedStarred,nonatomic,readonly) char migratedStarred; 
@property (nonatomic,copy) NSString * name; 
@property (nonatomic,readonly) NSURL * link; 
@property (nonatomic,readonly) NSString * ownerCanonicalUsername; 
@property (nonatomic,readonly) unsigned nodeType; 
+(id)folderWithURI:(id)arg1 ;
+(id)containerWithCpp:(PlaylistContainer*)arg1 ;
+(void)load;
-(void)shallowCountPlaylists:(unsigned*)arg1 folders:(unsigned*)arg2 ;
-(NSString *)detailDescriptionText;
-(int)offlineState;
-(NSArray *)actualPlaylists;
-(unsigned)countOfTracks;
-(id)newPlaylistAtIndex:(unsigned)arg1 named:(id)arg2 ;
-(NSString *)ownerCanonicalUsername;
-(char)isAvailableOffline;
-(SPPlaylistOfflineSyncStatus *)offlineSyncStatus;
-(id)findFolderByURL:(id)arg1 ;
-(char)isMigratedStarred;
-(float)offlineProgress;
-(char)makeAvailableOffline;
-(void)setMakeAvailableOffline:(char)arg1 ;
-(void)removeCallbacks;
-(void)addCallbacks;
-(id)trackEnumerator;
-(unsigned)countOfChildren;
-(unsigned)countOfPlaylists;
-(int)entryTypeAtIndex:(unsigned)arg1 ;
-(id)objectInPlaylistsAtIndex:(unsigned)arg1 ;
-(id)folderNameAtIndex:(unsigned)arg1 ;
-(unsigned long long)folderIdAtIndex:(unsigned)arg1 ;
-(id)entryStringAtIndex:(unsigned)arg1 ;
-(id)objectInChildrenAtIndex:(unsigned)arg1 ;
-(void)insertObject:(id)arg1 inChildrenAtIndex:(unsigned)arg2 ;
-(void)removeObjectFromChildrenAtIndex:(unsigned)arg1 ;
-(char)publicStarred;
-(void)moveChildAtIndex:(unsigned)arg1 toIndex:(unsigned)arg2 ;
-(id)findPlaylistByURL:(id)arg1 ;
-(void)insertObject:(id)arg1 inPlaylistsAtIndex:(unsigned)arg2 ;
-(void)removeObjectFromPlaylistsAtIndex:(unsigned)arg1 ;
-(unsigned)countOfTracksCached;
-(void)countTracks:(unsigned*)arg1 playlists:(unsigned*)arg2 ;
-(void)recursivelyRemoveContents;
-(id)callbacks;
-(void)dealloc;
-(NSString *)description;
-(NSString *)debugDescription;
-(void)setName:(NSString *)arg1 ;
-(NSString *)name;
-(PlaylistContainer*)container;
-(void)addObserver:(id)arg1 forKeyPath:(id)arg2 options:(unsigned)arg3 context:(void*)arg4 ;
-(void)removeObserver:(id)arg1 forKeyPath:(id)arg2 ;
-(char)isLoaded;
-(unsigned)nodeType;
-(NSURL *)link;
-(NSArray *)folders;
-(NSMutableArray *)children;
-(id)tracks;
@end

