/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:45:36 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/D2238F36-ED84-40F4-9CB2-8C71CACC8B47/Spotify.app/Spotify
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Spotify/SPTHubRemoteContentProviderDelegate.h>
#import <Spotify/SPTHubLocalContentProviderDelegate.h>

@protocol SPTHubContentLoaderDelegate, SPTHubRemoteContentProvider, SPTHubDictionaryPathSet, SPTHubLocalContentProvider, SPTHubReloadPolicy;
@class SPTHubContentBuilder, NSDate, NSString;

@interface SPTHubContentLoader : NSObject <SPTHubRemoteContentProviderDelegate, SPTHubLocalContentProviderDelegate> {

	char _loading;
	id<SPTHubContentLoaderDelegate> _delegate;
	id<SPTHubRemoteContentProvider> _remoteContentProvider;
	id<SPTHubDictionaryPathSet> _remoteContentDictionaryPathSet;
	id<SPTHubLocalContentProvider> _localContentProvider;
	id<SPTHubReloadPolicy> _reloadPolicy;
	SPTHubContentBuilder* _contentBuilder;
	NSDate* _lastReloadDate;

}

@property (assign,nonatomic,__weak) id<SPTHubContentLoaderDelegate> delegate;                           //@synthesize delegate=_delegate - In the implementation block
@property (assign,getter=isLoading,nonatomic) char loading;                                             //@synthesize loading=_loading - In the implementation block
@property (nonatomic,readonly) id<SPTHubRemoteContentProvider> remoteContentProvider;                   //@synthesize remoteContentProvider=_remoteContentProvider - In the implementation block
@property (nonatomic,readonly) id<SPTHubDictionaryPathSet> remoteContentDictionaryPathSet;              //@synthesize remoteContentDictionaryPathSet=_remoteContentDictionaryPathSet - In the implementation block
@property (nonatomic,readonly) id<SPTHubLocalContentProvider> localContentProvider;                     //@synthesize localContentProvider=_localContentProvider - In the implementation block
@property (nonatomic,readonly) id<SPTHubReloadPolicy> reloadPolicy;                                     //@synthesize reloadPolicy=_reloadPolicy - In the implementation block
@property (nonatomic,readonly) SPTHubContentBuilder * contentBuilder;                                   //@synthesize contentBuilder=_contentBuilder - In the implementation block
@property (nonatomic,retain) NSDate * lastReloadDate;                                                   //@synthesize lastReloadDate=_lastReloadDate - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id<SPTHubLocalContentProvider>)localContentProvider;
-(id<SPTHubReloadPolicy>)reloadPolicy;
-(char)loadContentForViewURI:(id)arg1 ;
-(void)prepareForViewWithURI:(id)arg1 currentContentSet:(id)arg2 ;
-(char)loadContentFromEndpointPath:(id)arg1 forExternalData:(char)arg2 ;
-(id)updatedContentSetForNewSelectedTabIndex:(unsigned)arg1 ;
-(void)cancelAllContentOperations;
-(void)hubRemoteContentProvider:(id)arg1 didLoadRemoteContentDictionary:(id)arg2 forViewURI:(id)arg3 ;
-(void)hubRemoteContentProvider:(id)arg1 didLoadRemoteBlockDictionaries:(id)arg2 forViewURI:(id)arg3 ;
-(void)hubRemoteContentProvider:(id)arg1 didEncounterError:(id)arg2 ;
-(id<SPTHubDictionaryPathSet>)remoteContentDictionaryPathSet;
-(id)initWithRemoteContentProvider:(id)arg1 remoteContentDictionaryPathSet:(id)arg2 localContentProvider:(id)arg3 reloadPolicy:(id)arg4 ;
-(void)reloadIfNeededForViewURI:(id)arg1 currentContentSet:(id)arg2 ;
-(id<SPTHubRemoteContentProvider>)remoteContentProvider;
-(char)addLocalContentForViewURI:(id)arg1 ;
-(SPTHubContentBuilder *)contentBuilder;
-(void)didLoadRemoteContentDictionary:(id)arg1 blockDictionaries:(id)arg2 error:(id)arg3 forViewURI:(id)arg4 ;
-(void)contentLoadingComplete;
-(void)setLastReloadDate:(NSDate *)arg1 ;
-(NSDate *)lastReloadDate;
-(id)provideHubContentBuilderForLocalContentProvider:(id)arg1 ;
-(void)hubLocalContentProviderDidFinish:(id)arg1 ;
-(void)hubLocalContentProvider:(id)arg1 didEncounterError:(id)arg2 ;
-(void)setDelegate:(id<SPTHubContentLoaderDelegate>)arg1 ;
-(id<SPTHubContentLoaderDelegate>)delegate;
-(char)isLoading;
-(void)setLoading:(char)arg1 ;
@end

