/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:45:34 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/D2238F36-ED84-40F4-9CB2-8C71CACC8B47/Spotify.app/Spotify
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Spotify/SPTGaiaDeviceStateManagerObserver.h>
#import <Spotify/SPTGaiaAirplayManagerObserver.h>
#import <Spotify/SPTNetworkConnectivityControllerObserver.h>
#import <Spotify/SPTPlayerObserver.h>
#import <Spotify/SPTAbbaFeatureFlagsObserver.h>
#import <Spotify/SPTGaiaDevicePickerObserver.h>
#import <Spotify/SPTGaiaManager.h>

@protocol SPTPlayer, SPTAbbaFeatureFlags, SPTLogCenterProtocol;
@class NSString, GaiaSettings, SPTPopoverController, SPTGaiaDeviceManager, SPTGaiaAirplayManager, SPTCastManager, SPTTheme, SPNavigationController, SPTGaiaDevicePickerViewController, SPTNetworkConnectivityController, NSHashTable, NSArray, SPTPlayerState;

@interface SPTGaiaManagerImplementation : NSObject <SPTGaiaDeviceStateManagerObserver, SPTGaiaAirplayManagerObserver, SPTNetworkConnectivityControllerObserver, SPTPlayerObserver, SPTAbbaFeatureFlagsObserver, SPTGaiaDevicePickerObserver, SPTGaiaManager> {

	char _displayingGaiaVolumeControlInMainView;
	char _available;
	char _chromecastContextlessBarEnabled;
	GaiaSettings* _gaiaSettings;
	SPTPopoverController* _destinationPickerPopoverController;
	SPTGaiaDeviceManager* _deviceManager;
	SPTGaiaAirplayManager* _airplayManager;
	SPTCastManager* _castManager;
	SPTTheme* _theme;
	SPNavigationController* _pickerViewController;
	SPTGaiaDevicePickerViewController* _settingsPickerViewController;
	SPTNetworkConnectivityController* _networkConnectivityController;
	id<SPTPlayer> _player;
	id<SPTAbbaFeatureFlags> _abbaFeatureFlags;
	id<SPTLogCenterProtocol> _logCenter;
	int _remoteConnectionState;
	int _activeConnectionType;
	NSString* _activeDeviceName;
	NSHashTable* _observers;
	NSArray* _availableConnectionTypes;
	SPTPlayerState* _playerState;

}

@property (nonatomic,retain) GaiaSettings * gaiaSettings;                                                                              //@synthesize gaiaSettings=_gaiaSettings - In the implementation block
@property (nonatomic,retain) SPTPopoverController * destinationPickerPopoverController;                                                //@synthesize destinationPickerPopoverController=_destinationPickerPopoverController - In the implementation block
@property (nonatomic,retain) SPTGaiaDeviceManager * deviceManager;                                                                     //@synthesize deviceManager=_deviceManager - In the implementation block
@property (nonatomic,retain) SPTGaiaAirplayManager * airplayManager;                                                                   //@synthesize airplayManager=_airplayManager - In the implementation block
@property (nonatomic,retain) SPTCastManager * castManager;                                                                             //@synthesize castManager=_castManager - In the implementation block
@property (nonatomic,retain) SPTTheme * theme;                                                                                         //@synthesize theme=_theme - In the implementation block
@property (nonatomic,retain) SPNavigationController * pickerViewController;                                                            //@synthesize pickerViewController=_pickerViewController - In the implementation block
@property (nonatomic,retain) SPTGaiaDevicePickerViewController * settingsPickerViewController;                                         //@synthesize settingsPickerViewController=_settingsPickerViewController - In the implementation block
@property (nonatomic,readonly) SPTNetworkConnectivityController * networkConnectivityController;                                       //@synthesize networkConnectivityController=_networkConnectivityController - In the implementation block
@property (nonatomic,readonly) id<SPTPlayer> player;                                                                                   //@synthesize player=_player - In the implementation block
@property (nonatomic,readonly) id<SPTAbbaFeatureFlags> abbaFeatureFlags;                                                               //@synthesize abbaFeatureFlags=_abbaFeatureFlags - In the implementation block
@property (nonatomic,readonly) id<SPTLogCenterProtocol> logCenter;                                                                     //@synthesize logCenter=_logCenter - In the implementation block
@property (assign,nonatomic) int remoteConnectionState;                                                                                //@synthesize remoteConnectionState=_remoteConnectionState - In the implementation block
@property (assign,getter=isAvailable,nonatomic) char available;                                                                        //@synthesize available=_available - In the implementation block
@property (assign,nonatomic) int activeConnectionType;                                                                                 //@synthesize activeConnectionType=_activeConnectionType - In the implementation block
@property (nonatomic,retain) NSString * activeDeviceName;                                                                              //@synthesize activeDeviceName=_activeDeviceName - In the implementation block
@property (assign,getter=isChromecastContextlessBarEnabled,nonatomic) char chromecastContextlessBarEnabled;                            //@synthesize chromecastContextlessBarEnabled=_chromecastContextlessBarEnabled - In the implementation block
@property (nonatomic,retain) NSHashTable * observers;                                                                                  //@synthesize observers=_observers - In the implementation block
@property (nonatomic,retain) NSArray * availableConnectionTypes;                                                                       //@synthesize availableConnectionTypes=_availableConnectionTypes - In the implementation block
@property (nonatomic,retain) SPTPlayerState * playerState;                                                                             //@synthesize playerState=_playerState - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (getter=isDisplayingGaiaVolumeControlInMainView,nonatomic,readonly) char displayingGaiaVolumeControlInMainView;              //@synthesize displayingGaiaVolumeControlInMainView=_displayingGaiaVolumeControlInMainView - In the implementation block
-(id<SPTLogCenterProtocol>)logCenter;
-(SPTNetworkConnectivityController *)networkConnectivityController;
-(void)networkConnectivityController:(id)arg1 didChangeForcedOffline:(char)arg2 ;
-(void)networkConnectivityController:(id)arg1 didChangeAllowSyncOver3G:(char)arg2 ;
-(void)featureFlagsDidChange:(id)arg1 ;
-(id<SPTAbbaFeatureFlags>)abbaFeatureFlags;
-(void)deviceStateManager:(id)arg1 playingRemotelyDidChange:(char)arg2 ;
-(void)deviceStateManager:(id)arg1 availableDevicesDidChange:(id)arg2 ;
-(void)deviceStateManager:(id)arg1 activeDeviceDidChange:(id)arg2 ;
-(void)deviceStateManager:(id)arg1 deviceBeingActivatedDidChange:(id)arg2 error:(id)arg3 ;
-(void)player:(id)arg1 stateDidChange:(id)arg2 ;
-(SPTCastManager *)castManager;
-(void)setCastManager:(SPTCastManager *)arg1 ;
-(void)setAirplayManager:(SPTGaiaAirplayManager *)arg1 ;
-(SPTGaiaAirplayManager *)airplayManager;
-(void)setDestinationPickerPopoverController:(SPTPopoverController *)arg1 ;
-(char)shouldShowGaiaPicker;
-(SPTPopoverController *)destinationPickerPopoverController;
-(id)initWithDeviceManager:(id)arg1 airplayManager:(id)arg2 castManager:(id)arg3 theme:(id)arg4 pickerViewController:(id)arg5 settingsPickerViewController:(id)arg6 destinationPickerPopOverController:(id)arg7 gaiaSettings:(id)arg8 networkConnectivityController:(id)arg9 player:(id)arg10 abbaFeatureFlags:(id)arg11 logCenter:(id)arg12 ;
-(void)gaiaAirplayManagerDidChangeAvailability:(id)arg1 ;
-(void)setActiveDeviceName:(NSString *)arg1 ;
-(void)gaiaAirplayManagerDidChangeActive:(id)arg1 ;
-(NSString *)activeDeviceName;
-(void)calculateActive;
-(void)calculateAvailable;
-(void)calculateActiveConnectionType;
-(void)calculateActiveDeviceName;
-(void)calculateChromecastContextlessBarEnabled;
-(void)setRemoteConnectionState:(int)arg1 ;
-(void)setActiveConnectionType:(int)arg1 ;
-(int)activeConnectionType;
-(void)setChromecastContextlessBarEnabled:(char)arg1 ;
-(void)setDisplayingGaiaVolumeControlInMainView:(char)arg1 ;
-(GaiaSettings *)gaiaSettings;
-(void)logDevicePickerShownFrom:(unsigned)arg1 ;
-(id)sourceStringFromContext:(unsigned)arg1 ;
-(void)devicePickerWillAppear:(id)arg1 ;
-(void)devicePickerWillDisappear:(id)arg1 ;
-(char)isConnectionTypeAvailable:(int)arg1 ;
-(void)presentDevicePickerOnViewController:(id)arg1 fromContext:(unsigned)arg2 ;
-(void)presentDevicePickerForTA;
-(void)presentDevicePickerPopOverFromView:(id)arg1 fromContext:(unsigned)arg2 ;
-(int)remoteConnectionState;
-(char)isChromecastContextlessBarEnabled;
-(char)isDisplayingGaiaVolumeControlInMainView;
-(void)setGaiaSettings:(GaiaSettings *)arg1 ;
-(void)setPickerViewController:(SPNavigationController *)arg1 ;
-(SPTGaiaDevicePickerViewController *)settingsPickerViewController;
-(void)setSettingsPickerViewController:(SPTGaiaDevicePickerViewController *)arg1 ;
-(NSArray *)availableConnectionTypes;
-(void)setAvailableConnectionTypes:(NSArray *)arg1 ;
-(char)isAvailable;
-(id<SPTPlayer>)player;
-(void)dealloc;
-(void)addObserver:(id)arg1 ;
-(void)removeObserver:(id)arg1 ;
-(void)setObservers:(NSHashTable *)arg1 ;
-(NSHashTable *)observers;
-(SPTGaiaDeviceManager *)deviceManager;
-(void)setDeviceManager:(SPTGaiaDeviceManager *)arg1 ;
-(SPNavigationController *)pickerViewController;
-(SPTTheme *)theme;
-(void)setTheme:(SPTTheme *)arg1 ;
-(void)setAvailable:(char)arg1 ;
-(SPTPlayerState *)playerState;
-(void)setPlayerState:(SPTPlayerState *)arg1 ;
@end

