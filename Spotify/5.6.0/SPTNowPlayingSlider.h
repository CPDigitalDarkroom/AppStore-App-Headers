/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:45:39 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/D2238F36-ED84-40F4-9CB2-8C71CACC8B47/Spotify.app/Spotify
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Spotify/Spotify-Structs.h>
#import <Spotify/SPSliderWithLabel.h>

@protocol SPTNowPlayingSliderDataSource;
@class CADisplayLink, NSArray;

@interface SPTNowPlayingSlider : SPSliderWithLabel {

	char _trackingState;
	id<SPTNowPlayingSliderDataSource> _dataSource;
	int _appearance;
	float _animationSpeed;
	CADisplayLink* _displayLink;
	float _uncompensatedTrackingValue;
	NSArray* _trackingSpeeds;
	NSArray* _trackingSpeedChangeThresholds;
	float _trackingSpeed;
	CGPoint _startTrackingPoint;

}

@property (assign,nonatomic,__weak) id<SPTNowPlayingSliderDataSource> dataSource;              //@synthesize dataSource=_dataSource - In the implementation block
@property (nonatomic,readonly) double currentPosition; 
@property (nonatomic,readonly) double currentDuration; 
@property (assign,nonatomic) int appearance;                                                   //@synthesize appearance=_appearance - In the implementation block
@property (assign,nonatomic) float animationSpeed;                                             //@synthesize animationSpeed=_animationSpeed - In the implementation block
@property (nonatomic,retain) CADisplayLink * displayLink;                                      //@synthesize displayLink=_displayLink - In the implementation block
@property (assign,nonatomic) float uncompensatedTrackingValue;                                 //@synthesize uncompensatedTrackingValue=_uncompensatedTrackingValue - In the implementation block
@property (assign,nonatomic) CGPoint startTrackingPoint;                                       //@synthesize startTrackingPoint=_startTrackingPoint - In the implementation block
@property (nonatomic,retain) NSArray * trackingSpeeds;                                         //@synthesize trackingSpeeds=_trackingSpeeds - In the implementation block
@property (nonatomic,retain) NSArray * trackingSpeedChangeThresholds;                          //@synthesize trackingSpeedChangeThresholds=_trackingSpeedChangeThresholds - In the implementation block
@property (assign,nonatomic) float trackingSpeed;                                              //@synthesize trackingSpeed=_trackingSpeed - In the implementation block
@property (assign,nonatomic) char trackingState;                                               //@synthesize trackingState=_trackingState - In the implementation block
+(id)spt_imageWithDoubleFillEllipseSize:(CGSize)arg1 color:(id)arg2 secondSize:(CGSize)arg3 secondColor:(id)arg4 ;
-(void)applyThemeLayout;
-(void)onDisplayLink:(id)arg1 ;
-(void)setTrackingSpeeds:(NSArray *)arg1 ;
-(void)setTrackingSpeedChangeThresholds:(NSArray *)arg1 ;
-(NSArray *)trackingSpeeds;
-(void)setTrackingSpeed:(float)arg1 ;
-(char)trackingState;
-(id)trackImageWithSize:(CGSize)arg1 color:(id)arg2 ;
-(void)modifySliderAppearance;
-(float)positionToValue:(double)arg1 ;
-(float)pointsForValue:(float)arg1 ;
-(void)animateFrom:(float)arg1 withSpeed:(float)arg2 ;
-(void)resetValueTo:(float)arg1 ;
-(void)startAnimatingWithSpeed:(float)arg1 ;
-(void)setTrackingState:(char)arg1 ;
-(void)setStartTrackingPoint:(CGPoint)arg1 ;
-(void)setUncompensatedTrackingValue:(float)arg1 ;
-(NSArray *)trackingSpeedChangeThresholds;
-(CGPoint)startTrackingPoint;
-(float)trackingSpeedForDistance:(float)arg1 ;
-(float)uncompensatedTrackingValue;
-(float)trackingSpeed;
-(id)timeIntervalToAccessibilityString:(double)arg1 ;
-(id)initWithFrame:(CGRect)arg1 ;
-(void)setDataSource:(id<SPTNowPlayingSliderDataSource>)arg1 ;
-(void)dealloc;
-(void)didMoveToWindow;
-(void)reloadData;
-(id<SPTNowPlayingSliderDataSource>)dataSource;
-(void)touchesBegan:(id)arg1 withEvent:(id)arg2 ;
-(void)touchesEnded:(id)arg1 withEvent:(id)arg2 ;
-(int)appearance;
-(void)willMoveToWindow:(id)arg1 ;
-(id)accessibilityLabel;
-(void)setDisplayLink:(CADisplayLink *)arg1 ;
-(CADisplayLink *)displayLink;
-(void)cancelTrackingWithEvent:(id)arg1 ;
-(char)beginTrackingWithTouch:(id)arg1 withEvent:(id)arg2 ;
-(char)continueTrackingWithTouch:(id)arg1 withEvent:(id)arg2 ;
-(void)endTrackingWithTouch:(id)arg1 withEvent:(id)arg2 ;
-(void)stopAnimating;
-(CGRect)thumbRectForBounds:(CGRect)arg1 trackRect:(CGRect)arg2 value:(float)arg3 ;
-(id)accessibilityValue;
-(void)setAnimationSpeed:(float)arg1 ;
-(float)animationSpeed;
-(double)currentDuration;
-(double)currentPosition;
-(void)setAppearance:(int)arg1 ;
@end

