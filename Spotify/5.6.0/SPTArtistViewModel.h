/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:45:29 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/D2238F36-ED84-40F4-9CB2-8C71CACC8B47/Spotify.app/Spotify
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Spotify/SPTSingleRequestViewModel.h>
#import <Spotify/SPTCeramicRequest.h>
#import <Spotify/SPTCeramicViewControllerViewProvider.h>
#import <Spotify/SPTCeramicViewControllerDelegate.h>

@protocol SPTCeramicRequestDelegate;
@class NSURL, SPTArtistOverviewModel, SPTArtistSpace, NSString, SPTEntityService;

@interface SPTArtistViewModel : SPTSingleRequestViewModel <SPTCeramicRequest, SPTCeramicViewControllerViewProvider, SPTCeramicViewControllerDelegate> {

	char loaded;
	char _concertPageEnabled;
	char _isContextPlayerFromBackend;
	NSURL* _URI;
	id<SPTCeramicRequestDelegate> ceramicDelegate;
	unsigned _spaceTargetSection;
	NSURL* _artistURL;
	SPTArtistOverviewModel* _overViewModel;
	SPTArtistSpace* _space;
	NSString* _artistID;
	SPTEntityService* _entityService;

}

@property (nonatomic,readonly) unsigned spaceTargetSection;                                      //@synthesize spaceTargetSection=_spaceTargetSection - In the implementation block
@property (nonatomic,retain) NSURL * artistURL;                                                  //@synthesize artistURL=_artistURL - In the implementation block
@property (getter=isConcertPageEnabled,nonatomic,readonly) char concertPageEnabled;              //@synthesize concertPageEnabled=_concertPageEnabled - In the implementation block
@property (nonatomic,readonly) char isContextPlayerFromBackend;                                  //@synthesize isContextPlayerFromBackend=_isContextPlayerFromBackend - In the implementation block
@property (nonatomic,retain) SPTArtistOverviewModel * overViewModel;                             //@synthesize overViewModel=_overViewModel - In the implementation block
@property (nonatomic,retain) NSURL * URI;                                                        //@synthesize URI=_URI - In the implementation block
@property (assign,getter=isLoaded,nonatomic) char loaded; 
@property (nonatomic,retain) SPTArtistSpace * space;                                             //@synthesize space=_space - In the implementation block
@property (nonatomic,readonly) NSString * artistID;                                              //@synthesize artistID=_artistID - In the implementation block
@property (nonatomic,retain) SPTEntityService * entityService;                                   //@synthesize entityService=_entityService - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (assign,nonatomic,__weak) id<SPTCeramicRequestDelegate> ceramicDelegate; 
@property (nonatomic,readonly) char shouldReloadWhenOnlineStateChanges; 
+(id)requestURLFromArtistURL:(id)arg1 ;
+(void)preloadDataForArtist:(id)arg1 resolver:(id)arg2 ;
-(SPTEntityService *)entityService;
-(void)dataLoader:(id)arg1 didReceiveSuccessfulResponse:(id)arg2 ;
-(void)dataLoader:(id)arg1 didReceiveErrorResponse:(id)arg2 ;
-(NSURL *)artistURL;
-(id)dataWithDictionary:(id)arg1 ;
-(id<SPTCeramicRequestDelegate>)ceramicDelegate;
-(void)setCeramicDelegate:(id<SPTCeramicRequestDelegate>)arg1 ;
-(char)shouldReloadWhenOnlineStateChanges;
-(void)parseSuccessfulResponseDictionary:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)decoratePlayContext:(id)arg1 withCompletionCallback:(/*^block*/id)arg2 ;
-(char)isConcertPageEnabled;
-(void)setOverViewModel:(SPTArtistOverviewModel *)arg1 ;
-(unsigned)spaceTargetSection;
-(id)spaceForOverviewModel:(id)arg1 spaceTargetSection:(unsigned)arg2 ;
-(char)isContextPlayerFromBackend;
-(NSString *)artistID;
-(SPTArtistOverviewModel *)overViewModel;
-(id)initWithArtist:(id)arg1 resolver:(id)arg2 offlineModeState:(id)arg3 dataLoader:(id)arg4 serviceName:(id)arg5 endpointPath:(id)arg6 ceramicSpaceTarget:(unsigned)arg7 viewURI:(id)arg8 isConcertPageEnabled:(char)arg9 isContextFromBackend:(char)arg10 entityService:(id)arg11 ;
-(id)titleForTabSection:(unsigned)arg1 ;
-(void)setArtistURL:(NSURL *)arg1 ;
-(void)setEntityService:(SPTEntityService *)arg1 ;
-(void)setLoaded:(char)arg1 ;
-(char)isLoaded;
-(void)load;
-(void)setSpace:(SPTArtistSpace *)arg1 ;
-(SPTArtistSpace *)space;
-(NSURL *)URI;
-(void)setURI:(NSURL *)arg1 ;
@end

