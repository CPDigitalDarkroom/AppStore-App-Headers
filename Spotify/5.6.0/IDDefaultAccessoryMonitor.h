/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:45:22 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/D2238F36-ED84-40F4-9CB2-8C71CACC8B47/Spotify.app/Spotify
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Spotify/IDBclManagerDelegate.h>
#import <Spotify/IDProtocolSelectorDelegate.h>
#import <Spotify/IDVehicleInformationRetrieverDelegate.h>
#import <Spotify/IDMessagingServiceSubscriber.h>
#import <Spotify/IDAccessoryMonitor.h>

@class IDMessagingService, IDVehicleInfo, IDVersionInfo, IDProtocolSelector, IDA4AProtocol, IDBclManager, NSConditionLock, IDVehicleInformationRetriever, IDRhmiLegacyFeatureSwitcher, IDRhmiAppSwitcher, NSString, UIApplication, IDExternalAccessorySelector, IDBackgroundTask, IDRhmiFeatureInfoSyncService, IDAppManifest;

@interface IDDefaultAccessoryMonitor : NSObject <IDBclManagerDelegate, IDProtocolSelectorDelegate, IDVehicleInformationRetrieverDelegate, IDMessagingServiceSubscriber, IDAccessoryMonitor> {

	char _allRequiredProtocolsForMultisessionSupport;
	char _hasPermissionToConnect;
	IDProtocolSelector* _protocolSelector;
	IDA4AProtocol* _selectedProtocol;
	IDA4AProtocol* _claimedProtocol;
	IDBclManager* _bclManager;
	NSConditionLock* _stateCondition;
	IDVehicleInformationRetriever* _vehicleInfoRetriever;
	IDRhmiLegacyFeatureSwitcher* _legacySwitcher;
	IDRhmiAppSwitcher* _appSwitcher;
	NSString* _currentSystemVersion;
	UIApplication* _uiApplication;
	IDExternalAccessorySelector* _externalAccessorySelector;
	IDBackgroundTask* _backgroundTask;
	IDMessagingService* _messagingService;
	IDRhmiFeatureInfoSyncService* _syncService;
	IDAppManifest* _manifest;

}

@property (retain) IDProtocolSelector * protocolSelector;                                //@synthesize protocolSelector=_protocolSelector - In the implementation block
@property (retain) IDA4AProtocol * selectedProtocol;                                     //@synthesize selectedProtocol=_selectedProtocol - In the implementation block
@property (retain) IDA4AProtocol * claimedProtocol;                                      //@synthesize claimedProtocol=_claimedProtocol - In the implementation block
@property (retain) IDBclManager * bclManager;                                            //@synthesize bclManager=_bclManager - In the implementation block
@property (retain) NSConditionLock * stateCondition;                                     //@synthesize stateCondition=_stateCondition - In the implementation block
@property (retain) IDVehicleInformationRetriever * vehicleInfoRetriever;                 //@synthesize vehicleInfoRetriever=_vehicleInfoRetriever - In the implementation block
@property (retain) IDRhmiLegacyFeatureSwitcher * legacySwitcher;                         //@synthesize legacySwitcher=_legacySwitcher - In the implementation block
@property (retain) IDRhmiAppSwitcher * appSwitcher;                                      //@synthesize appSwitcher=_appSwitcher - In the implementation block
@property (retain) NSString * currentSystemVersion;                                      //@synthesize currentSystemVersion=_currentSystemVersion - In the implementation block
@property (__weak) UIApplication * uiApplication;                                        //@synthesize uiApplication=_uiApplication - In the implementation block
@property (__weak) IDExternalAccessorySelector * externalAccessorySelector;              //@synthesize externalAccessorySelector=_externalAccessorySelector - In the implementation block
@property (retain) IDBackgroundTask * backgroundTask;                                    //@synthesize backgroundTask=_backgroundTask - In the implementation block
@property (nonatomic,retain) IDMessagingService * messagingService;                      //@synthesize messagingService=_messagingService - In the implementation block
@property (nonatomic,retain) IDRhmiFeatureInfoSyncService * syncService;                 //@synthesize syncService=_syncService - In the implementation block
@property (retain) IDAppManifest * manifest;                                             //@synthesize manifest=_manifest - In the implementation block
@property (assign) char allRequiredProtocolsForMultisessionSupport;                      //@synthesize allRequiredProtocolsForMultisessionSupport=_allRequiredProtocolsForMultisessionSupport - In the implementation block
@property (assign) char hasPermissionToConnect;                                          //@synthesize hasPermissionToConnect=_hasPermissionToConnect - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) IDVehicleInfo * vehicleInfo; 
@property (nonatomic,readonly) IDVersionInfo * cdsVersion; 
@property (nonatomic,readonly) IDVersionInfo * etchVersion; 
@property (readonly) char supportsA4AConnectionInBackground; 
@property (readonly) char supportsA4AMultisession; 
-(IDVersionInfo *)cdsVersion;
-(IDVersionInfo *)etchVersion;
-(IDMessagingService *)messagingService;
-(void)startMonitoringWithManifest:(id)arg1 ;
-(id)communicationURL;
-(id)proxyInfo;
-(char)supportsA4AConnectionInBackground;
-(char)supportsA4AMultisession;
-(void)launchApplication:(id)arg1 ;
-(void)registerStickyApplication:(id)arg1 ;
-(void)registerNonStickyApplication:(id)arg1 ;
-(void)deregisterApplication:(id)arg1 ;
-(NSConditionLock *)stateCondition;
-(void)bclManagerDidConnect:(id)arg1 ;
-(IDA4AProtocol *)selectedProtocol;
-(void)bclManager:(id)arg1 didFailToConnectWithError:(id)arg2 ;
-(void)bclManagerDidDisconnnect:(id)arg1 ;
-(void)setStateCondition:(NSConditionLock *)arg1 ;
-(id)initWithCurrentSystemVersion:(id)arg1 legacyCommunicationProtocolSupport:(char)arg2 allRequiredProtocolsForMultisessionSupport:(char)arg3 uiApplication:(id)arg4 externalAccessorySelector:(id)arg5 protocolSelector:(id)arg6 bclManager:(id)arg7 ;
-(char)systemHasRequiredMinimumVersionForA4A:(id)arg1 ;
-(IDVehicleInformationRetriever *)vehicleInfoRetriever;
-(IDBclManager *)bclManager;
-(NSString *)currentSystemVersion;
-(char)systemHasRequiredMinimumVersionForBackgrounding:(id)arg1 ;
-(char)isAllowedToConnectWhileUIApplicationNotActive;
-(void)handleAccessoryDidAppear:(id)arg1 ;
-(void)handleAccessoryDidDisappear:(id)arg1 ;
-(void)handleDidBecomeActive:(id)arg1 ;
-(void)handleDidEnterBackground:(id)arg1 ;
-(IDProtocolSelector *)protocolSelector;
-(void)startProtocolSelector;
-(id)stringFromIDAccessoryMonitorState:(unsigned)arg1 ;
-(void)setSelectedProtocol:(IDA4AProtocol *)arg1 ;
-(void)setClaimedProtocol:(IDA4AProtocol *)arg1 ;
-(void)stopBclManager;
-(void)stopProtocolSelector;
-(void)setVehicleInfoRetriever:(IDVehicleInformationRetriever *)arg1 ;
-(IDRhmiFeatureInfoSyncService *)syncService;
-(void)setSyncService:(IDRhmiFeatureInfoSyncService *)arg1 ;
-(IDRhmiLegacyFeatureSwitcher *)legacySwitcher;
-(void)setLegacySwitcher:(IDRhmiLegacyFeatureSwitcher *)arg1 ;
-(IDRhmiAppSwitcher *)appSwitcher;
-(void)setAppSwitcher:(IDRhmiAppSwitcher *)arg1 ;
-(void)notifyAccessoryDidDisconnect;
-(void)setHasPermissionToConnect:(char)arg1 ;
-(void)notifyAccessoryDidConnect;
-(char)shouldConnectLegacyFeatureSwitcher;
-(char)shouldConnectAppSwitcher;
-(UIApplication *)uiApplication;
-(char)hasPermissionToConnect;
-(char)systemHasRequiredMinimumVersionForApplaunch:(id)arg1 ;
-(char)allRequiredProtocolsForMultisessionSupport;
-(void)protocolSelector:(id)arg1 didSelectProtocol:(id)arg2 ;
-(void)protocolSelector:(id)arg1 willSelectProtocol:(id)arg2 ;
-(void)protocolSelectorDidFailToSelectProtocol:(id)arg1 ;
-(void)setProtocolSelector:(IDProtocolSelector *)arg1 ;
-(IDA4AProtocol *)claimedProtocol;
-(void)setBclManager:(IDBclManager *)arg1 ;
-(void)setCurrentSystemVersion:(NSString *)arg1 ;
-(void)setUiApplication:(UIApplication *)arg1 ;
-(void)setExternalAccessorySelector:(IDExternalAccessorySelector *)arg1 ;
-(void)setMessagingService:(IDMessagingService *)arg1 ;
-(void)setAllRequiredProtocolsForMultisessionSupport:(char)arg1 ;
-(IDExternalAccessorySelector *)externalAccessorySelector;
-(IDBackgroundTask *)backgroundTask;
-(IDVehicleInfo *)vehicleInfo;
-(void)vehicleinformationRetriever:(id)arg1 didFailWithError:(id)arg2 ;
-(void)vehicleinformationRetrieverDidRetrieveVehicleInformation:(id)arg1 ;
-(void)handleNotification:(id)arg1 ;
-(void)startMonitoring;
-(void)handleMessage:(id)arg1 ;
-(id)init;
-(NSString *)description;
-(void)handleRequest:(id)arg1 ;
-(void)handleResponse:(id)arg1 ;
-(void)setManifest:(IDAppManifest *)arg1 ;
-(IDAppManifest *)manifest;
-(void)setBackgroundTask:(IDBackgroundTask *)arg1 ;
-(void)stopMonitoring;
@end

