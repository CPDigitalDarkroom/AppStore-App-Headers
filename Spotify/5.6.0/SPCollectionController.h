/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:45:52 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/D2238F36-ED84-40F4-9CB2-8C71CACC8B47/Spotify.app/Spotify
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol SPCollectionControllerDelegate;
#import <Spotify/Spotify-Structs.h>
@class SPSession, SPCore, SPTPlayedStateManager, NSArray, NSMutableDictionary, NSObject, SPTrackContext;

@interface SPCollectionController : NSObject {

	SPSession* _session;
	SPCore* _core;
	SPTPlayedStateManager* _playedStateManager;
	BOOL _isUnloaded;
	unique_ptr<spotify::collection_cosmos::CollectionCosmosHandler, std::__1::default_delete<spotify::collection_cosmos::CollectionCosmosHandler> >* _collectionCosmosHandler;
	NSArray* _artists;
	NSArray* _albums;
	NSMutableDictionary* _albumMedatadataObjectListsForArtistURL;
	SPCollectionModelObserver* _modelObserver;
	SPCollectionModelCallbacks _modelCallbacks;
	spotify_resolver* _collection_resolver;
	shared_ptr<spotify::api::CResolverWrapper>* _collection_resolver_cpp;
	int _collection_resolver_token;
	NSObject*<SPCollectionControllerDelegate> _delegate;
	SPTrackContext* _allTracks;
	NSMutableDictionary* _albumURLContextCache;
	NSMutableDictionary* _artistURLContextCache;

}

@property (nonatomic,readonly) shared_ptr<spotify::collection::CollectionModel>* collectionModel; 
@property (nonatomic,readonly) CollectionShowModel* collectionShowModel; 
@property (nonatomic,readonly) CollectionOfflineHelperRef collectionOfflineHelper; 
@property (assign,nonatomic,__weak) NSObject*<SPCollectionControllerDelegate> delegate;                        //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,retain) SPTrackContext * allTracks;                                                       //@synthesize allTracks=_allTracks - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * albumURLContextCache;                                       //@synthesize albumURLContextCache=_albumURLContextCache - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * artistURLContextCache;                                      //@synthesize artistURLContextCache=_artistURLContextCache - In the implementation block
-(char)canAddTrackWithURL:(id)arg1 ;
-(char)isAlbumComplete:(id)arg1 ;
-(void)unregisterCollectionResolverWithRouter:(id)arg1 ;
-(id)initWithCore:(id)arg1 session:(id)arg2 playedStateManager:(id)arg3 ;
-(id)contextForAlbumURL:(id)arg1 ;
-(id)contextForArtistURL:(id)arg1 ;
-(void)registerCollectionResolverWithRouter:(id)arg1 ;
-(char)isFollowedArtist:(id)arg1 ;
-(SPTrackContext *)allTracks;
-(void)setAllTracks:(SPTrackContext *)arg1 ;
-(id)contextForSongs;
-(int)countOfTracksInCollectionForArtistURL:(id)arg1 ;
-(int)countOfAlbumsInCollectionForArtistURL:(id)arg1 ;
-(int)countOfTracksInCollectionForAlbumURL:(id)arg1 ;
-(void)followArtistWithURL:(id)arg1 ;
-(void)unfollowArtistWithURL:(id)arg1 ;
-(shared_ptr<spotify::collection::CollectionModel>*)collectionModel;
-(NSMutableDictionary *)artistURLContextCache;
-(void)setArtistURLContextCache:(NSMutableDictionary *)arg1 ;
-(NSMutableDictionary *)albumURLContextCache;
-(void)setAlbumURLContextCache:(NSMutableDictionary *)arg1 ;
-(void)requestArtists;
-(void)requestAlbums;
-(void)requestAlbumsForArtistURL:(id)arg1 ;
-(char)isUnloaded;
-(id)albumsForArtistURL:(id)arg1 ;
-(void)addURLs:(id)arg1 source:(id)arg2 ;
-(void)removeURLs:(id)arg1 source:(id)arg2 ;
-(void)artistListChanged;
-(void)albumListChangedForArtistLink:(id)arg1 ;
-(void)albumListChanged;
-(void)artistListCallbackWithArtists:(AsArray<spotify::collection::CollectionListItem<base::RefPtr<const spotify::metadata::ArtistInfo> > >*)arg1 ;
-(void)albumListCallbackWithAlbums:(id)arg1 ;
-(void)albumListCallbackForArtistURL:(id)arg1 withAlbums:(id)arg2 ;
-(void)albumAddedCallbackForAlbum:(id)arg1 ;
-(CollectionShowModel*)collectionShowModel;
-(CollectionOfflineHelperRef)collectionOfflineHelper;
-(id)albums;
-(void)saveState;
-(void)setDelegate:(NSObject*<SPCollectionControllerDelegate>)arg1 ;
-(NSObject*<SPCollectionControllerDelegate>)delegate;
-(void)unload;
-(id)username;
-(char)containsURL:(id)arg1 ;
-(id)artists;
@end

