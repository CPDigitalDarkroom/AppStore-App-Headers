/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:45:29 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/D2238F36-ED84-40F4-9CB2-8C71CACC8B47/Spotify.app/Spotify
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Spotify/Spotify-Structs.h>
#import <Spotify/SPTableViewController.h>
#import <Spotify/SPTSingleRequestViewModelDelegate.h>
#import <Spotify/SPTArtistVolatileViewModelDelegate.h>
#import <UIKit/UITableViewDataSource.h>
#import <UIKit/UITableViewDelegate.h>
#import <UIKit/UIScrollViewDelegate.h>
#import <Spotify/SPContentInsetViewController.h>
#import <Spotify/SPTPlayerObserver.h>
#import <Spotify/SPTImageLoaderDelegate.h>
#import <Spotify/SPTNavigationControllerNavigationBarState.h>
#import <Spotify/SPTArtistContextMenuPresenter.h>
#import <Spotify/SPTArtistNowPlayingTrackProvider.h>
#import <Spotify/SPTEntityTableHeaderViewNavigationBarProvider.h>
#import <Spotify/SPTThemableViewLayoutDelegate.h>
#import <UIKit/UIPopoverControllerDelegate.h>
#import <Spotify/SPTTouchViewEngineDelegate.h>
#import <Spotify/SPTTableViewContinuousSwipeDelegate.h>
#import <Spotify/SPTArtistGalleryViewControllerDelegate.h>
#import <Spotify/SPTVoiceCommandFeatureObserver.h>
#import <Spotify/SPTVoiceCommandInterfaceHost.h>

@protocol SPTArtistViewModelData, SPTPlayer, ArtistFeature, SPContextMenuFeature, SPRadioManager, SPTImageLoaderFactory, SPTImageLoader, SPTProductState, SPTAudioTouch, SPTConcertFeature, SPTShuffleButtonTestController, SPTAdsManager, SPTPageInstrumentation, SPTSpotlightIndexRegistry, SPTVoiceCommandFeature;
@class NSURL, SPTArtistViewModel, SPTArtistVolatileViewModel, SPTPlayerState, SPTArtistCombinedTableViewDataSource, UIImageView, SPTPopoverController, SPTProgressView, SPTInfoView, SPTEntityTableHeaderView, SPTArtistOverviewScrollView, SPTCollectionView, SPSession, SPTOfflineManager, SPTViewLogger, SPTClientEventLogger, SPTArtistGLUETheme, SPTArtistLogger, SPTNavigationManager, NSString;

@interface SPTArtistOverviewViewController : SPTableViewController <SPTSingleRequestViewModelDelegate, SPTArtistVolatileViewModelDelegate, UITableViewDataSource, UITableViewDelegate, UIScrollViewDelegate, SPContentInsetViewController, SPTPlayerObserver, SPTImageLoaderDelegate, SPTNavigationControllerNavigationBarState, SPTArtistContextMenuPresenter, SPTArtistNowPlayingTrackProvider, SPTEntityTableHeaderViewNavigationBarProvider, SPTThemableViewLayoutDelegate, UIPopoverControllerDelegate, SPTTouchViewEngineDelegate, SPTTableViewContinuousSwipeDelegate, SPTArtistGalleryViewControllerDelegate, SPTVoiceCommandFeatureObserver, SPTVoiceCommandInterfaceHost> {

	char _hasSetupContentOffset;
	char _isArtistGalleryEnabled;
	char _isPlayerContextFromBackend;
	char _newGlueCardsEnabled;
	NSURL* _viewURL;
	SPTArtistViewModel* _viewModel;
	SPTArtistVolatileViewModel* _volatileViewModel;
	id<SPTArtistViewModelData> _viewData;
	id<SPTPlayer> _player;
	SPTPlayerState* _currentState;
	id<ArtistFeature> _feature;
	id<SPContextMenuFeature> _contextMenu;
	id<SPRadioManager> _radioManager;
	SPTArtistCombinedTableViewDataSource* _dataSource;
	UIImageView* _featuredArtistView;
	SPTPopoverController* _contextMenuPopoverController;
	SPTProgressView* _progressView;
	SPTInfoView* _infoView;
	SPTEntityTableHeaderView* _headerView;
	SPTArtistOverviewScrollView* _scrollView;
	SPTCollectionView* _relatedArtistsCollectionView;
	id<SPTImageLoaderFactory> _imageLoaderFactory;
	id<SPTImageLoader> _imageLoader;
	SPSession* _session;
	SPTOfflineManager* _offlineManager;
	id<SPTProductState> _productState;
	SPTViewLogger* _viewLogger;
	SPTClientEventLogger* _clientEventLogger;
	id _screenshotObserver;
	int _aboutPreviewIndex;
	id<SPTAudioTouch> _audioTouch;
	id<SPTConcertFeature> _concertFeature;
	id<SPTShuffleButtonTestController> _shuffleButtonTestController;
	SPTArtistGLUETheme* _theme;
	id<SPTAdsManager> _adsManager;
	SPTArtistLogger* _artistLogger;
	id<SPTPageInstrumentation> _pageInstrumentation;
	SPTNavigationManager* _navigationManager;
	id<SPTSpotlightIndexRegistry> _spotlightIndexRegistry;
	id<SPTVoiceCommandFeature> _voiceCommandFeature;

}

@property (nonatomic,retain) NSURL * viewURL;                                                             //@synthesize viewURL=_viewURL - In the implementation block
@property (nonatomic,retain) SPTArtistViewModel * viewModel;                                              //@synthesize viewModel=_viewModel - In the implementation block
@property (nonatomic,retain) SPTArtistVolatileViewModel * volatileViewModel;                              //@synthesize volatileViewModel=_volatileViewModel - In the implementation block
@property (nonatomic,retain) id<SPTArtistViewModelData> viewData;                                         //@synthesize viewData=_viewData - In the implementation block
@property (nonatomic,retain) id<SPTPlayer> player;                                                        //@synthesize player=_player - In the implementation block
@property (nonatomic,retain) SPTPlayerState * currentState;                                               //@synthesize currentState=_currentState - In the implementation block
@property (assign,nonatomic,__weak) id<ArtistFeature> feature;                                            //@synthesize feature=_feature - In the implementation block
@property (assign,nonatomic,__weak) id<SPContextMenuFeature> contextMenu;                                 //@synthesize contextMenu=_contextMenu - In the implementation block
@property (assign,nonatomic,__weak) id<SPRadioManager> radioManager;                                      //@synthesize radioManager=_radioManager - In the implementation block
@property (nonatomic,retain) SPTArtistCombinedTableViewDataSource * dataSource;                           //@synthesize dataSource=_dataSource - In the implementation block
@property (nonatomic,retain) UIImageView * featuredArtistView;                                            //@synthesize featuredArtistView=_featuredArtistView - In the implementation block
@property (nonatomic,retain) SPTPopoverController * contextMenuPopoverController;                         //@synthesize contextMenuPopoverController=_contextMenuPopoverController - In the implementation block
@property (assign,nonatomic) char hasSetupContentOffset;                                                  //@synthesize hasSetupContentOffset=_hasSetupContentOffset - In the implementation block
@property (nonatomic,retain) SPTProgressView * progressView;                                              //@synthesize progressView=_progressView - In the implementation block
@property (nonatomic,retain) SPTInfoView * infoView;                                                      //@synthesize infoView=_infoView - In the implementation block
@property (nonatomic,retain) SPTEntityTableHeaderView * headerView;                                       //@synthesize headerView=_headerView - In the implementation block
@property (nonatomic,retain) SPTArtistOverviewScrollView * scrollView;                                    //@synthesize scrollView=_scrollView - In the implementation block
@property (nonatomic,retain) SPTCollectionView * relatedArtistsCollectionView;                            //@synthesize relatedArtistsCollectionView=_relatedArtistsCollectionView - In the implementation block
@property (nonatomic,retain) id<SPTImageLoaderFactory> imageLoaderFactory;                                //@synthesize imageLoaderFactory=_imageLoaderFactory - In the implementation block
@property (nonatomic,retain) id<SPTImageLoader> imageLoader;                                              //@synthesize imageLoader=_imageLoader - In the implementation block
@property (assign,nonatomic,__weak) SPSession * session;                                                  //@synthesize session=_session - In the implementation block
@property (nonatomic,retain) SPTOfflineManager * offlineManager;                                          //@synthesize offlineManager=_offlineManager - In the implementation block
@property (nonatomic,retain) id<SPTProductState> productState;                                            //@synthesize productState=_productState - In the implementation block
@property (nonatomic,retain) SPTViewLogger * viewLogger;                                                  //@synthesize viewLogger=_viewLogger - In the implementation block
@property (nonatomic,retain) SPTClientEventLogger * clientEventLogger;                                    //@synthesize clientEventLogger=_clientEventLogger - In the implementation block
@property (nonatomic,retain) id screenshotObserver;                                                       //@synthesize screenshotObserver=_screenshotObserver - In the implementation block
@property (nonatomic,readonly) int aboutPreviewIndex;                                                     //@synthesize aboutPreviewIndex=_aboutPreviewIndex - In the implementation block
@property (nonatomic,retain) id<SPTAudioTouch> audioTouch;                                                //@synthesize audioTouch=_audioTouch - In the implementation block
@property (assign,nonatomic,__weak) id<SPTConcertFeature> concertFeature;                                 //@synthesize concertFeature=_concertFeature - In the implementation block
@property (nonatomic,retain) id<SPTShuffleButtonTestController> shuffleButtonTestController;              //@synthesize shuffleButtonTestController=_shuffleButtonTestController - In the implementation block
@property (nonatomic,retain) SPTArtistGLUETheme * theme;                                                  //@synthesize theme=_theme - In the implementation block
@property (assign,nonatomic) char isArtistGalleryEnabled;                                                 //@synthesize isArtistGalleryEnabled=_isArtistGalleryEnabled - In the implementation block
@property (nonatomic,readonly) char isPlayerContextFromBackend;                                           //@synthesize isPlayerContextFromBackend=_isPlayerContextFromBackend - In the implementation block
@property (assign,nonatomic) char newGlueCardsEnabled;                                                    //@synthesize newGlueCardsEnabled=_newGlueCardsEnabled - In the implementation block
@property (assign,nonatomic,__weak) id<SPTAdsManager> adsManager;                                         //@synthesize adsManager=_adsManager - In the implementation block
@property (nonatomic,retain) SPTArtistLogger * artistLogger;                                              //@synthesize artistLogger=_artistLogger - In the implementation block
@property (nonatomic,retain) id<SPTPageInstrumentation> pageInstrumentation;                              //@synthesize pageInstrumentation=_pageInstrumentation - In the implementation block
@property (nonatomic,retain) SPTNavigationManager * navigationManager;                                    //@synthesize navigationManager=_navigationManager - In the implementation block
@property (assign,nonatomic,__weak) id<SPTSpotlightIndexRegistry> spotlightIndexRegistry;                 //@synthesize spotlightIndexRegistry=_spotlightIndexRegistry - In the implementation block
@property (nonatomic,__weak,readonly) id<SPTVoiceCommandFeature> voiceCommandFeature;                     //@synthesize voiceCommandFeature=_voiceCommandFeature - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (assign,nonatomic) char automaticallyAdjustsScrollViewInsets; 
-(id<SPTProductState>)productState;
-(SPTClientEventLogger *)clientEventLogger;
-(void)sp_updateContentInsets;
-(unsigned)preferredNavigationBarState;
-(SPTViewLogger *)viewLogger;
-(void)setProductState:(id<SPTProductState>)arg1 ;
-(void)applyThemeLayout;
-(id<SPTImageLoader>)imageLoader;
-(void)imageLoader:(id)arg1 didLoadImage:(id)arg2 forURL:(id)arg3 loadTime:(double)arg4 context:(id)arg5 ;
-(void)setImageLoader:(id<SPTImageLoader>)arg1 ;
-(int)stackedNavigationPageSize;
-(SPTNavigationManager *)navigationManager;
-(void)setNavigationManager:(SPTNavigationManager *)arg1 ;
-(void)themableViewDidUpdateLayout:(id)arg1 ;
-(void)setClientEventLogger:(SPTClientEventLogger *)arg1 ;
-(void)sp_updateBottomContentInset:(float)arg1 ;
-(void)player:(id)arg1 stateDidChange:(id)arg2 ;
-(void)setContextMenu:(id<SPContextMenuFeature>)arg1 ;
-(void)setAudioTouch:(id<SPTAudioTouch>)arg1 ;
-(id<SPContextMenuFeature>)contextMenu;
-(id<SPTAudioTouch>)audioTouch;
-(void)setViewLogger:(SPTViewLogger *)arg1 ;
-(void)viewModel:(id)arg1 setLoading:(char)arg2 ;
-(id<SPTAdsManager>)adsManager;
-(void)setAdsManager:(id<SPTAdsManager>)arg1 ;
-(id<SPTImageLoaderFactory>)imageLoaderFactory;
-(void)setImageLoaderFactory:(id<SPTImageLoaderFactory>)arg1 ;
-(void)setPageInstrumentation:(id<SPTPageInstrumentation>)arg1 ;
-(SPTOfflineManager *)offlineManager;
-(id<SPTPageInstrumentation>)pageInstrumentation;
-(id<SPTVoiceCommandFeature>)voiceCommandFeature;
-(void)setupHeaderView;
-(void)setOfflineManager:(SPTOfflineManager *)arg1 ;
-(void)setupTableView;
-(char)hasSetupContentOffset;
-(void)setHasSetupContentOffset:(char)arg1 ;
-(id<SPTShuffleButtonTestController>)shuffleButtonTestController;
-(void)updateUserActivityState:(id)arg1 withThumbnailImage:(id)arg2 ;
-(id<SPTSpotlightIndexRegistry>)spotlightIndexRegistry;
-(void)viewModel:(id)arg1 didLoadData:(id)arg2 loadTime:(double)arg3 ;
-(void)viewModel:(id)arg1 didFailLoad:(id)arg2 ;
-(char)continuousSwipeEnabledForTableView:(id)arg1 ;
-(void)voiceCommandFeature:(id)arg1 enabledStateDidChange:(char)arg2 ;
-(void)setSpotlightIndexRegistry:(id<SPTSpotlightIndexRegistry>)arg1 ;
-(SPTArtistLogger *)artistLogger;
-(void)dismissGalleryViewController:(id)arg1 ;
-(void)setArtistLogger:(SPTArtistLogger *)arg1 ;
-(void)setViewData:(id<SPTArtistViewModelData>)arg1 ;
-(id<SPTArtistViewModelData>)viewData;
-(id)screenshotObserver;
-(char)isAboutPreviewInView;
-(void)setScreenshotObserver:(id)arg1 ;
-(SPTArtistVolatileViewModel *)volatileViewModel;
-(void)shuffleButtonTapped:(id)arg1 ;
-(void)followButtonTapped:(id)arg1 ;
-(char)isArtistGalleryEnabled;
-(void)headerImageTapped;
-(void)playContextShuffled:(char)arg1 ;
-(void)playContextShuffled:(char)arg1 fromTrack:(id)arg2 ;
-(char)isPlayerContextFromBackend;
-(int)aboutPreviewIndex;
-(void)updateRightBarButtonItems;
-(void)showContextMenuForView;
-(void)buildSPTArtistCombinedTableViewDataSource;
-(void)preloadAlbumCoverArt;
-(void)updateTrackPlayStates;
-(void)updateHeaderViewMetadataText;
-(UIImageView *)featuredArtistView;
-(void)updateFollowButtonState;
-(char)isCurrentlyPlayingTrack:(id)arg1 ;
-(id)dataSourceWithTitle:(id)arg1 forCustomMessage:(id)arg2 ;
-(id)dataSourceWithTitle:(id)arg1 forRelatedArtists:(id)arg2 ;
-(id)dataSourceWithTitle:(id)arg1 forLatestRelease:(id)arg2 ;
-(id)dataSourceWithTitle:(id)arg1 forTracks:(id)arg2 ;
-(id)dataSourceWithTitle:(id)arg1 viewAllTitle:(id)arg2 forAlbums:(id)arg3 count:(unsigned)arg4 type:(unsigned)arg5 ;
-(id)dataSourceWithTitle:(id)arg1 forConcerts:(id)arg2 ;
-(id)dataSourceWithTitle:(id)arg1 viewAllTitle:(id)arg2 forPlaylists:(id)arg3 ;
-(id)dataSourceForPreview;
-(id)dataSourceWithTitle:(id)arg1 forMerchandise:(id)arg2 ;
-(void)preloadRelatedArtistsPortraits;
-(NSURL *)viewURL;
-(id)dataSourceWithTitle:(id)arg1 viewAllTitle:(id)arg2 forAlbums:(id)arg3 count:(unsigned)arg4 type:(unsigned)arg5 asCollectionView:(char)arg6 ;
-(char)newGlueCardsEnabled;
-(id<SPTConcertFeature>)concertFeature;
-(void)preloadEntityImages:(id)arg1 size:(CGSize)arg2 ;
-(SPTPopoverController *)contextMenuPopoverController;
-(void)setContextMenuPopoverController:(SPTPopoverController *)arg1 ;
-(id)actionsForViewWithContextMenu:(id)arg1 ;
-(id<SPRadioManager>)radioManager;
-(void)artistVolatileViewModel:(id)arg1 didUpdateData:(id)arg2 ;
-(void)artistVolatileViewModel:(id)arg1 failedWithError:(id)arg2 ;
-(void)showContextMenuForItem:(id)arg1 inView:(id)arg2 ;
-(id)provideNavigationBarForHeaderView:(id)arg1 ;
-(void)viewEngine:(id)arg1 prepareView:(id)arg2 completion:(/*^block*/id)arg3 ;
-(id)initWithURL:(id)arg1 viewModel:(id)arg2 volatileViewModel:(id)arg3 player:(id)arg4 contextMenu:(id)arg5 session:(id)arg6 offlineManager:(id)arg7 feature:(id)arg8 radioManager:(id)arg9 imageLoaderFactory:(id)arg10 productState:(id)arg11 viewLogger:(id)arg12 clientEventLogger:(id)arg13 audioTouch:(id)arg14 concertFeature:(id)arg15 isPlayerContextFromBackend:(char)arg16 isArtistGalleryEnabled:(char)arg17 adsManager:(id)arg18 artistLogger:(id)arg19 pageInstrumentation:(id)arg20 navigationManager:(id)arg21 shuffleButtonTestController:(id)arg22 spotlightIndexRegistry:(id)arg23 theme:(id)arg24 voiceCommandFeature:(id)arg25 newGlueCardsEnabled:(char)arg26 ;
-(id)dataSourceWithTitle:(id)arg1 forAlbum:(id)arg2 ;
-(void)unfollowButtonTapped:(id)arg1 ;
-(void)radioButtonTapped:(id)arg1 ;
-(void)setViewURL:(NSURL *)arg1 ;
-(void)setVolatileViewModel:(SPTArtistVolatileViewModel *)arg1 ;
-(void)setRadioManager:(id<SPRadioManager>)arg1 ;
-(void)setFeaturedArtistView:(UIImageView *)arg1 ;
-(SPTCollectionView *)relatedArtistsCollectionView;
-(void)setRelatedArtistsCollectionView:(SPTCollectionView *)arg1 ;
-(void)setConcertFeature:(id<SPTConcertFeature>)arg1 ;
-(void)setShuffleButtonTestController:(id<SPTShuffleButtonTestController>)arg1 ;
-(void)setIsArtistGalleryEnabled:(char)arg1 ;
-(void)setNewGlueCardsEnabled:(char)arg1 ;
-(SPTInfoView *)infoView;
-(void)setInfoView:(SPTInfoView *)arg1 ;
-(SPTArtistViewModel *)viewModel;
-(SPSession *)session;
-(void)setPlayer:(id<SPTPlayer>)arg1 ;
-(void)setViewModel:(SPTArtistViewModel *)arg1 ;
-(id<SPTPlayer>)player;
-(void)setDataSource:(SPTArtistCombinedTableViewDataSource *)arg1 ;
-(void)dealloc;
-(float)tableView:(id)arg1 heightForHeaderInSection:(int)arg2 ;
-(id)tableView:(id)arg1 viewForHeaderInSection:(int)arg2 ;
-(void)scrollViewDidScroll:(id)arg1 ;
-(int)tableView:(id)arg1 numberOfRowsInSection:(int)arg2 ;
-(int)numberOfSectionsInTableView:(id)arg1 ;
-(SPTArtistCombinedTableViewDataSource *)dataSource;
-(void)openURL:(id)arg1 ;
-(void)updateUserActivityState:(id)arg1 ;
-(SPTPlayerState *)currentState;
-(void)setScrollView:(SPTArtistOverviewScrollView *)arg1 ;
-(SPTArtistOverviewScrollView *)scrollView;
-(void)viewWillLayoutSubviews;
-(void)viewWillAppear:(char)arg1 ;
-(void)viewDidLoad;
-(void)viewDidAppear:(char)arg1 ;
-(void)viewWillDisappear:(char)arg1 ;
-(void)didRotateFromInterfaceOrientation:(int)arg1 ;
-(char)automaticallyAdjustsScrollViewInsets;
-(SPTEntityTableHeaderView *)headerView;
-(void)setHeaderView:(SPTEntityTableHeaderView *)arg1 ;
-(void)updateHeaderView;
-(void)popoverControllerDidDismissPopover:(id)arg1 ;
-(void)setProgressView:(SPTProgressView *)arg1 ;
-(SPTProgressView *)progressView;
-(void)setCurrentState:(SPTPlayerState *)arg1 ;
-(void)setSession:(SPSession *)arg1 ;
-(void)pauseAll;
-(SPTArtistGLUETheme *)theme;
-(id<ArtistFeature>)feature;
-(void)setTheme:(SPTArtistGLUETheme *)arg1 ;
-(id)URI;
-(void)setFeature:(id<ArtistFeature>)arg1 ;
@end

