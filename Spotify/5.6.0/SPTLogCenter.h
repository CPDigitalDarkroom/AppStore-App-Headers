/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:45:54 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/D2238F36-ED84-40F4-9CB2-8C71CACC8B47/Spotify.app/Spotify
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Spotify/SPTLogCenterProtocol.h>

@protocol SPTLogger;
@class NSString, NSMutableArray;

@interface SPTLogCenter : NSObject <SPTLogCenterProtocol> {

	NSString* _anonymousToken;
	NSMutableArray* _messages;
	id<SPTLogger> _logger;

}

@property (nonatomic,retain) NSString * anonymousToken;              //@synthesize anonymousToken=_anonymousToken - In the implementation block
@property (nonatomic,retain) NSMutableArray * messages;              //@synthesize messages=_messages - In the implementation block
@property (nonatomic,retain) id<SPTLogger> logger;                   //@synthesize logger=_logger - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)defaultCenter;
-(void)logClientEventWithSource:(id)arg1 context:(id)arg2 eventName:(id)arg3 eventVersion:(id)arg4 testVersion:(id)arg5 data:(id)arg6 ;
-(void)logRunkeeperUserArrivesToNPV;
-(void)logRunkeeperUserArrivesToCategoriesView;
-(void)logNowPlayingSwipeToNPV;
-(void)logNowPlayingSwipeToClose;
-(void)logMetaViewControllerVCForLink:(id)arg1 ;
-(void)logAppStartupWithStepName:(id)arg1 ;
-(void)beginAnonymousTracking;
-(void)logBrowseLink:(id)arg1 source:(id)arg2 ;
-(void)logAdRequestEvent:(id)arg1 featureId:(id)arg2 ;
-(void)logiTunesLibraryItem:(id)arg1 ;
-(void)logiTunesLibraryRecognition:(id)arg1 echoprintID:(id)arg2 spotifyTrackURL:(id)arg3 ;
-(void)spt_logContextMenuPresentationForTrack:(id)arg1 fromEntity:(id)arg2 ;
-(void)spt_logContextMenuPresentationForEntity:(id)arg1 ;
-(void)logContextMenuActionPerformed:(id)arg1 context:(id)arg2 ;
-(void)logEqualizerValues:(id)arg1 ;
-(void)logEqualizerPreset:(id)arg1 ;
-(void)logEqualizerOn:(char)arg1 ;
-(void)logPickerDidAppearWithDeviceCount:(unsigned)arg1 ;
-(void)logPickerDidDisappearWithDeviceCount:(unsigned)arg1 ;
-(void)logButtonDidAppearWithDeviceManager:(id)arg1 lastImpression:(id)arg2 lastAnimation:(id)arg3 ;
-(void)logBannerOnboardingWithDevice:(id)arg1 ;
-(void)logBannerOnboardingShowPickerWithDevice:(id)arg1 andDuration:(double)arg2 ;
-(void)logBannerOnboardingDismissedWithDevice:(id)arg1 andDuration:(double)arg2 ;
-(void)logPopupActiveDeviceChange:(id)arg1 eventType:(id)arg2 duration:(double)arg3 ;
-(void)logDidPickDevice:(id)arg1 withContext:(id)arg2 ;
-(void)logDidPickDeviceFailed;
-(id)buttonEventContextForDeviceManager:(id)arg1 ;
-(void)logOnboardingWithSource:(id)arg1 eventName:(id)arg2 device:(id)arg3 andDuration:(double)arg4 ;
-(void)logOnboardingPopupEventName:(id)arg1 device:(id)arg2 andDuration:(double)arg3 ;
-(id)onboardingDataForDevice:(id)arg1 withDuration:(double)arg2 ;
-(void)logOnboardingPopupShownWithDevice:(id)arg1 ;
-(void)logOnboardingPopupListenWithDevice:(id)arg1 andDuration:(double)arg2 ;
-(void)logOnboardingPopupDismissWithDevice:(id)arg1 andDuration:(double)arg2 ;
-(void)logAlertPresentationEvent;
-(void)logAcceptTapEvent;
-(void)logNotNowTapEvent;
-(void)setup:(id)arg1 ;
-(char)isAnonymousTrackingEnabled;
-(void)endAnonymousTracking;
-(void)logUserNativeMicPermissionDialogResponse:(char)arg1 permissionFlowType:(id)arg2 adId:(id)arg3 creativeId:(id)arg4 ;
-(id)dataDictionaryWithAdId:(id)arg1 creativeId:(id)arg2 ;
-(void)logUserShownSpotifyMicPermissionDialogFlowType:(id)arg1 adId:(id)arg2 creativeId:(id)arg3 ;
-(void)logUserSpotifyMicPermissionDialogResponse:(char)arg1 permissionFlowType:(id)arg2 adId:(id)arg3 creativeId:(id)arg4 ;
-(void)logUserShownNativeMicPermissionDialogFromPermissionFlowType:(id)arg1 adId:(id)arg2 creativeId:(id)arg3 ;
-(void)logNowPlayingVideoMaximizeButtonTouchedUpInside;
-(void)logNowPlayingContextLinkButtonTouchedUpInside;
-(void)logNowPlayingPlayButtonTouchedUpInside;
-(void)logNowPlayingNextButtonTouchedUpInsideWithBehavior:(int)arg1 ;
-(void)logNowPlayingPreviousButtonTouchedUpInsideWithBehavior:(int)arg1 ;
-(void)logNowPlayingCloseButtonTouchedUpInside;
-(void)logNowPlayingBarPlayButtonTouchedUpInside;
-(void)logNowPlayingBarPreviousTrackSwiped;
-(void)logNowPlayingBarNextTrackSwiped;
-(void)logNowPlayingRepeatButtonTouchedUpInside;
-(void)logNowPlayingShuffleButtonTouchedUpInside;
-(void)logNowPlayingQueueButtonTouchedUpInside;
-(void)logNowPlayingConnectButtonTouchedUpInside;
-(void)logNowPlayingAirPlayButtonTouchedUpInside;
-(void)logNowPlayingBarPreviousButtonTouchedUpInside;
-(void)logNowPlayingBarNextButtonTouchedUpInside;
-(void)logNowPlayingBarDurationSliderValueChanged;
-(void)logNowPlayingSkip15Back;
-(void)logNowPlayingSkip15Forward;
-(void)logNowPlayingCoverArtDraggedToLeftWithBehavior:(int)arg1 ;
-(void)logNowPlayingCoverArtDraggedToRightWithBehavior:(int)arg1 ;
-(void)logNowPlayingDurationSliderValueChanged;
-(void)logNowPlayingDurationSliderTouchedUpInside;
-(void)logNowPlayingCollectionButtonTouchedUpInside;
-(void)logNowPlayingContextMenuButtonTouchedUpInside;
-(void)logNowPlayingVideoMinimizeButtonTouchedUpInside;
-(void)logNowPlayingVideoSkip15Back;
-(void)logNowPlayingVideoSkip15Forward;
-(void)logNowPlayingVideoDurationSliderValueChanged;
-(void)logNowPlayingVideoDurationSliderTouchedUpInside;
-(void)logNowPlayingVideoTouchedUpInside:(char)arg1 ;
-(void)logNowPlayingVideoNextButtonTouchedUpInsideWithBehavior:(int)arg1 ;
-(void)logNowPlayingVideoPreviousButtonTouchedUpInsideWithBehavior:(int)arg1 ;
-(void)logNowPlayingVideoPlayButtonTouchedUpInside;
-(void)logUserChangesRunningManualTempo:(unsigned)arg1 fromTempo:(unsigned)arg2 fromViewURL:(id)arg3 ;
-(void)logUserTapsRunningSwitchToManualFromViewURL:(id)arg1 ;
-(void)logUserTapsSwitchToAutomatic;
-(void)logNowPlayingTrackArtistLinkTouchedUpInside;
-(void)logNowPlayingRadioThumbUpButtonTouchedUpInside;
-(void)logNowPlayingRadioThumbDownButtonTouchedUpInside;
-(void)logNowPlayingVideoRotatedLandscape;
-(void)logNowPlayingVideoRotatedPortrait;
-(void)logEpisodeSortingInViewURL:(id)arg1 sorting:(unsigned)arg2 ;
-(void)logEpisodeFilterResetInViewURL:(id)arg1 ;
-(void)logEpisodeFilterSetInViewURL:(id)arg1 filter:(id)arg2 previousFilter:(id)arg3 ;
-(void)logLoadShowViewURL:(id)arg1 ;
-(void)logEditModeInViewURL:(id)arg1 entered:(char)arg2 listPosition:(float)arg3 ;
-(void)logOpenContextMenuShowInViewURL:(id)arg1 ;
-(void)logOpenContextMenuEpisodeInViewURL:(id)arg1 episodeURI:(id)arg2 indexPath:(id)arg3 ;
-(void)logShowFollowInViewURL:(id)arg1 didFollow:(char)arg2 fromContextMenu:(char)arg3 autoFollow:(char)arg4 ;
-(void)logEditModeItemActionInViewURL:(id)arg1 episodeURI:(id)arg2 indexPath:(id)arg3 remove:(char)arg4 ;
-(void)logEditModeItemActionInViewURL:(id)arg1 episodeURI:(id)arg2 indexPath:(id)arg3 offline:(char)arg4 ;
-(void)logEditModeBatchRemoveOfflineInViewURL:(id)arg1 all:(char)arg2 ;
-(void)logTabControlInViewUrl:(id)arg1 changedIndex:(int)arg2 ;
-(void)logUserTapsRunningOnboardingVideo;
-(void)logUserTapsRunningPresetWithURL:(id)arg1 ;
-(void)logUserEntersRunningSetupStep:(int)arg1 fromViewURL:(id)arg2 ;
-(void)logUserTapsRunningStartRunningFromViewURL:(id)arg1 ;
-(void)logUserTapsStartRunForPreset:(id)arg1 ;
-(void)logRunkeeperUserSwitchesToRunkeeperJustBeforeDetection;
-(void)logSpotifyUserSwitchesToRunkeeperJustBeforeDetection;
-(void)logSpotifyUserTapsOnTheTrackRunLink;
-(void)logSpotifyUserTapsDownload;
-(void)logOptInConfirmAlertButtonPressed:(int)arg1 ;
-(void)logOptInBannerActionButtonHit;
-(void)logOptInBannerDismissed;
-(void)logOptInBannerPresented;
-(void)logOptInErrorAlertButtonPressed:(int)arg1 ;
-(void)logOptInBackendError:(int)arg1 requestString:(id)arg2 ;
-(void)logOptInSuccessWithRequestString:(id)arg1 ;
-(char)sendMessageWithId:(id)arg1 ;
-(char)updateMessageWithId:(id)arg1 message:(id)arg2 ;
-(void)logAbnormalExitWithUUID:(id)arg1 timestamp:(long long)arg2 ;
-(void)logAppStartupWithStepName:(id)arg1 isFirst:(char)arg2 timeSinceStart:(double)arg3 ;
-(NSString *)anonymousToken;
-(void)setAnonymousToken:(NSString *)arg1 ;
-(id<SPTLogger>)logger;
-(void)setLogger:(id<SPTLogger>)arg1 ;
-(id)init;
-(void)sendEvent:(id)arg1 ;
-(void)sendMessage:(id)arg1 ;
-(id)addMessage:(id)arg1 ;
-(NSMutableArray *)messages;
-(void)setMessages:(NSMutableArray *)arg1 ;
@end

