/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:45:41 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/D2238F36-ED84-40F4-9CB2-8C71CACC8B47/Spotify.app/Spotify
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Spotify/SPTService.h>
#import <Spotify/SPTPlayerFeature.h>

@protocol SPTClientSessionService, ContainerFeature, SPTCoreService, SPTDebugFeature, CosmosFeature, SPTSettingsFeature, SPTPlayerLocalObservers, SPTPlayer, SPTPlaybackErrorDialogs;
@class SPTGaiaDeviceManager, SPTCastManager, SPTPlayedStateManager, SPTPlayerSubscription, SPTAudioSessionControllerImpl, SPTPlaybackErrorPicker, SPTPlaybackStateRestorer, SPTPlaybackStateTimer, SPTPlaybackStateStoreController, SPTApplicationStatePlaybackLogger, SPTPlayerExternalLinkControllerPlaybackDelegate, NSString, SPTAllocationContext;

@interface SPTPlayerFeatureImplementation : NSObject <SPTService, SPTPlayerFeature> {

	id<SPTClientSessionService> _clientSessionService;
	id<ContainerFeature> _container;
	id<SPTCoreService> _core;
	id<SPTDebugFeature> _debugFeature;
	id<CosmosFeature> _cosmos;
	id<SPTSettingsFeature> _settingsFeature;
	char _initialized;
	SPTPlayerSubscription* _playerSubscription;
	id<SPTPlayerLocalObservers> _localObservers;
	SPTAudioSessionControllerImpl* _audioSessionController;
	SPTPlaybackErrorPicker* _playbackErrorPicker;
	SPTPlaybackStateRestorer* _stateRestorer;
	SPTPlaybackStateTimer* _stateTimer;
	SPTPlaybackStateStoreController* _stateStoreController;
	SPTApplicationStatePlaybackLogger* _logger;
	id<SPTPlayer> _observationPlayer;
	SPTPlayerExternalLinkControllerPlaybackDelegate* _externalLinkControllerPlaybackDelegate;
	SPTGaiaDeviceManager* _gaia_factory_products;
	SPTPlayedStateManager* _played_state_manager;
	id<SPTPlaybackErrorDialogs> _playbackErrorDialogs;
	SPTGaiaDeviceManager* _gaiaDeviceManager;
	SPTCastManager* _castDeviceManager;

}

@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,retain) SPTAllocationContext * allocationContext; 
@property (nonatomic,readonly) SPTGaiaDeviceManager * gaiaDeviceManager;                //@synthesize gaiaDeviceManager=_gaiaDeviceManager - In the implementation block
@property (nonatomic,readonly) SPTCastManager * castDeviceManager;                      //@synthesize castDeviceManager=_castDeviceManager - In the implementation block
@property (nonatomic,readonly) SPTPlayedStateManager * playedStateManager; 
+(id)serviceDependencies;
+(char)knownToBeOffline;
+(id)serviceIdentifier;
-(void)configureWithServices:(id)arg1 ;
-(int)offlineState;
-(id)providePlayerWithViewURI:(id)arg1 featureIdentifier:(id)arg2 referrerIdentifier:(id)arg3 ;
-(void)addPlayerObserver:(id)arg1 ;
-(void)removePlayerObserver:(id)arg1 ;
-(id)provideAudioSessionController;
-(id)provideTrackContextPlayerWithViewURI:(id)arg1 featureIdentifier:(id)arg2 referrerIdentifier:(id)arg3 ;
-(id)providePlayerQueue;
-(SPTGaiaDeviceManager *)gaiaDeviceManager;
-(SPTPlayedStateManager *)playedStateManager;
-(SPTCastManager *)castDeviceManager;
-(void)logPlayerLoadEvent:(id)arg1 ;
-(id)cosmosRouter;
-(void)loadLazily;
-(void)loadContextPlayer;
-(void)loadPlayerSubscriptionWithResolver:(id)arg1 ;
-(void)loadObservationPlayer;
-(void)loadAudioSessionController;
-(void)loadPlaybackErrorPicker;
-(void)loadStateRestorer;
-(void)loadStateTimer;
-(void)loadStateStoreController;
-(void)loadStateLogger;
-(void)loadGaia;
-(void)loadExternalLinkControllerPlaybackDelegate;
-(void)loadTAUtilities;
-(id)playerSubscription;
-(id)providePlayerWithViewURI:(id)arg1 playerSubscription:(id)arg2 resolver:(id)arg3 featureIdentifier:(id)arg4 referrerIdentifier:(id)arg5 ;
-(id)provideTrackContextPlayerWithViewURI:(id)arg1 featureIdentifier:(id)arg2 referrerIdentifier:(id)arg3 decorateTrack:(/*^block*/id)arg4 ;
-(id)providePlaybackErrorDialogs;
-(id)providePlayerWithViewURI:(id)arg1 featureIdentifier:(id)arg2 referrerIdentifier:(id)arg3 queue:(id)arg4 ;
-(void)fetchPlayerState:(/*^block*/id)arg1 on:(id)arg2 ;
-(id)provideResolver;
-(id)providePlaybackRepresentation;
-(void)load;
-(void)unload;
-(id)resolver;
@end

