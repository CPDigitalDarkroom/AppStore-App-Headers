/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:45:31 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/D2238F36-ED84-40F4-9CB2-8C71CACC8B47/Spotify.app/Spotify
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Spotify/FollowModelObserver.h>
#import <Spotify/SPTCollectionSongItemPlaying.h>
#import <Spotify/SPTPlayerObserver.h>
#import <Spotify/SPTOfflineObserver.h>
#import <Spotify/SPTCollectionOfflineObserver.h>
#import <Spotify/SPTOfflineModeStateObserver.h>

@protocol SPTCollectionArtistModelDelegate, SPTPlayer, SPTTrackContextPlayer, SPTCollectionInternal, SPTOfflineModeState, FollowFeature, SPTCollectionCacheplayTestManager;
@class SPTCollectionContextMenuComponentFactory, SPTCollectionCurrentlyPlayingIndex, NSURL, SPTArtist, SPTCollectionArtist, FollowModel, SPTrackContext, SPTEntityCancelationToken, SPTEntityService, SPTOfflineManager, NSArray, NSString;

@interface SPTCollectionArtistModel : NSObject <FollowModelObserver, SPTCollectionSongItemPlaying, SPTPlayerObserver, SPTOfflineObserver, SPTCollectionOfflineObserver, SPTOfflineModeStateObserver> {

	SPTCollectionContextMenuComponentFactory* _contextMenuComponentFactory;
	SPTCollectionCurrentlyPlayingIndex* _currentlyPlayingIndex;
	char _loaded;
	id<SPTCollectionArtistModelDelegate> _delegate;
	NSURL* _portraitImageURL;
	NSURL* _headerImageURL;
	SPTArtist* _artist;
	SPTCollectionArtist* _collectionArtist;
	FollowModel* _followModel;
	id<SPTPlayer> _player;
	id<SPTTrackContextPlayer> _trackContextPlayer;
	NSURL* _URL;
	SPTrackContext* _collectionArtistContext;
	id<SPTCollectionInternal> _collection;
	SPTEntityCancelationToken* _metadataTask;
	SPTrackContext* _shuffleContext;
	SPTEntityService* _entityService;
	SPTOfflineManager* _offlineManager;
	id<SPTOfflineModeState> _offlineNotifier;
	id<FollowFeature> _followFeature;
	id<SPTCollectionCacheplayTestManager> _cacheplayTestManager;
	NSArray* _songItems;
	NSArray* _cacheplayIndexMap;

}

@property (assign,nonatomic) char loaded;                                                                    //@synthesize loaded=_loaded - In the implementation block
@property (assign,nonatomic,__weak) id<SPTCollectionArtistModelDelegate> delegate;                           //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,readonly) NSString * username; 
@property (nonatomic,retain) NSURL * portraitImageURL;                                                       //@synthesize portraitImageURL=_portraitImageURL - In the implementation block
@property (nonatomic,retain) NSURL * headerImageURL;                                                         //@synthesize headerImageURL=_headerImageURL - In the implementation block
@property (nonatomic,retain) SPTArtist * artist;                                                             //@synthesize artist=_artist - In the implementation block
@property (nonatomic,retain) SPTCollectionArtist * collectionArtist;                                         //@synthesize collectionArtist=_collectionArtist - In the implementation block
@property (nonatomic,readonly) unsigned currentlyPlayingTrackIndex; 
@property (nonatomic,readonly) unsigned numberOfFollowers; 
@property (nonatomic,retain) FollowModel * followModel;                                                      //@synthesize followModel=_followModel - In the implementation block
@property (nonatomic,readonly) NSURL * collectionArtistLink; 
@property (assign,getter=isOffline,nonatomic) char offline; 
@property (getter=isFollowedByCurrentUser,nonatomic,readonly) char followedByCurrentUser; 
@property (getter=isSessionOffline,nonatomic,readonly) char sessionOffline; 
@property (getter=isEmpty,nonatomic,readonly) char empty; 
@property (nonatomic,retain) id<SPTPlayer> player;                                                           //@synthesize player=_player - In the implementation block
@property (nonatomic,retain) id<SPTTrackContextPlayer> trackContextPlayer;                                   //@synthesize trackContextPlayer=_trackContextPlayer - In the implementation block
@property (nonatomic,retain) NSURL * URL;                                                                    //@synthesize URL=_URL - In the implementation block
@property (nonatomic,retain) SPTrackContext * collectionArtistContext;                                       //@synthesize collectionArtistContext=_collectionArtistContext - In the implementation block
@property (nonatomic,retain) id<SPTCollectionInternal> collection;                                           //@synthesize collection=_collection - In the implementation block
@property (nonatomic,retain) SPTEntityCancelationToken * metadataTask;                                       //@synthesize metadataTask=_metadataTask - In the implementation block
@property (nonatomic,retain) SPTrackContext * shuffleContext;                                                //@synthesize shuffleContext=_shuffleContext - In the implementation block
@property (nonatomic,retain) SPTEntityService * entityService;                                               //@synthesize entityService=_entityService - In the implementation block
@property (nonatomic,retain) SPTOfflineManager * offlineManager;                                             //@synthesize offlineManager=_offlineManager - In the implementation block
@property (nonatomic,retain) id<SPTOfflineModeState> offlineNotifier;                                        //@synthesize offlineNotifier=_offlineNotifier - In the implementation block
@property (nonatomic,__weak,readonly) id<FollowFeature> followFeature;                                       //@synthesize followFeature=_followFeature - In the implementation block
@property (assign,nonatomic,__weak) id<SPTCollectionCacheplayTestManager> cacheplayTestManager;              //@synthesize cacheplayTestManager=_cacheplayTestManager - In the implementation block
@property (nonatomic,retain) NSArray * songItems;                                                            //@synthesize songItems=_songItems - In the implementation block
@property (nonatomic,retain) NSArray * cacheplayIndexMap;                                                    //@synthesize cacheplayIndexMap=_cacheplayIndexMap - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id<SPTOfflineModeState>)offlineNotifier;
-(void)offlineModeState:(id)arg1 updated:(char)arg2 ;
-(SPTEntityService *)entityService;
-(void)player:(id)arg1 stateDidChange:(id)arg2 ;
-(id<FollowFeature>)followFeature;
-(void)toggleFollowState;
-(id<SPTTrackContextPlayer>)trackContextPlayer;
-(void)setTrackContextPlayer:(id<SPTTrackContextPlayer>)arg1 ;
-(SPTOfflineManager *)offlineManager;
-(void)offlineStateChangedForEntity:(id)arg1 ;
-(void)setOfflineManager:(SPTOfflineManager *)arg1 ;
-(FollowModel *)followModel;
-(void)setEntityService:(SPTEntityService *)arg1 ;
-(void)setFollowModel:(FollowModel *)arg1 ;
-(void)followModel:(id)arg1 followDataDidChange:(id)arg2 ;
-(void)setOfflineNotifier:(id<SPTOfflineModeState>)arg1 ;
-(id)initWithCollection:(id)arg1 player:(id)arg2 trackContextPlayer:(id)arg3 contextMenuComponentFactory:(id)arg4 URL:(id)arg5 entityService:(id)arg6 offlineManager:(id)arg7 offlineNotifier:(id)arg8 followFeature:(id)arg9 cacheplayTestManager:(id)arg10 ;
-(id<SPTCollectionCacheplayTestManager>)cacheplayTestManager;
-(void)setCacheplayTestManager:(id<SPTCollectionCacheplayTestManager>)arg1 ;
-(NSURL *)portraitImageURL;
-(void)playCollectionSongTrackItem:(id)arg1 ;
-(char)checkPlayabilityOfCollectionSongTrackItem:(id)arg1 ;
-(void)removeKVO;
-(SPTCollectionArtist *)collectionArtist;
-(SPTEntityCancelationToken *)metadataTask;
-(void)updateWithCollectionArtist:(id)arg1 withPictures:(id)arg2 ;
-(void)setMetadataTask:(SPTEntityCancelationToken *)arg1 ;
-(SPTrackContext *)collectionArtistContext;
-(NSURL *)collectionArtistLink;
-(void)updateSongItems;
-(void)updateListModelContext;
-(void)updateCurrentlyPlayingTrack:(id)arg1 ;
-(unsigned)currentlyPlayingTrackIndex;
-(id)trackAtIndexPath:(id)arg1 ;
-(SPTrackContext *)shuffleContext;
-(id)metadataForTrackContextPlayer;
-(void)setCollectionArtist:(SPTCollectionArtist *)arg1 ;
-(void)setCollectionArtistContext:(SPTrackContext *)arg1 ;
-(void)setShuffleContext:(SPTrackContext *)arg1 ;
-(id)findAndRemoveLargestPictureInPictureGroups:(id)arg1 ;
-(void)setPortraitImageURL:(NSURL *)arg1 ;
-(void)setupFollowModel;
-(void)addKVO;
-(char)isSessionOffline;
-(void)setSongItems:(NSArray *)arg1 ;
-(NSArray *)songItems;
-(void)setCacheplayIndexMap:(NSArray *)arg1 ;
-(NSArray *)cacheplayIndexMap;
-(void)offlineStateChanged;
-(id)contextMenuComponentForTrackAtIndexPath:(id)arg1 ;
-(id)artistContextMenuComponent;
-(unsigned)offlineSyncStateForTrackAtIndexPath:(id)arg1 ;
-(unsigned)offlineSyncState;
-(char)isFollowedByCurrentUser;
-(char)hasNoSavedTracks;
-(unsigned)offlineAvailability;
-(void)shufflePlayArtistEnforceShuffle:(char)arg1 ;
-(SPTArtist *)artist;
-(void)setArtist:(SPTArtist *)arg1 ;
-(id<SPTCollectionInternal>)collection;
-(void)setCollection:(id<SPTCollectionInternal>)arg1 ;
-(void)setPlayer:(id<SPTPlayer>)arg1 ;
-(id<SPTPlayer>)player;
-(void)setLoaded:(char)arg1 ;
-(char)loaded;
-(void)setDelegate:(id<SPTCollectionArtistModelDelegate>)arg1 ;
-(void)dealloc;
-(unsigned)count;
-(id<SPTCollectionArtistModelDelegate>)delegate;
-(int)numberOfItemsInSection:(int)arg1 ;
-(int)numberOfSections;
-(char)isEmpty;
-(id)context;
-(NSURL *)URL;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(void)setURL:(NSURL *)arg1 ;
-(void)load;
-(unsigned)numberOfFollowers;
-(NSURL *)headerImageURL;
-(void)setHeaderImageURL:(NSURL *)arg1 ;
-(NSString *)username;
-(id)tracks;
-(char)isOffline;
-(void)setOffline:(char)arg1 ;
-(id)itemAtIndexPath:(id)arg1 ;
@end

