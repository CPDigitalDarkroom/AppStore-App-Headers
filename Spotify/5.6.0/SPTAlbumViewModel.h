/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:45:29 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/D2238F36-ED84-40F4-9CB2-8C71CACC8B47/Spotify.app/Spotify
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Spotify/SPTSingleRequestViewModel.h>
#import <Spotify/SPTPlayerObserver.h>
#import <Spotify/SPTTrackContextObserver.h>
#import <Spotify/SPTCeramicRequest.h>

@protocol SPTCeramicRequestDelegate, SPTAlbumViewModelPlaybackDelegate, SPTPlayer, SPTClientSettings, SPTCollection;
@class NSURL, SPTAlbumData, NSString, NSNumber, SPTAlbumSpace, SPTPlayerContext, SPTOfflineManager, SPTAlbumPlaybackStateRestorer, SPTTrackContextFactory, SPTTrackContext;

@interface SPTAlbumViewModel : SPTSingleRequestViewModel <SPTPlayerObserver, SPTTrackContextObserver, SPTCeramicRequest> {

	char _shouldReloadWhenOnlineStateChanges;
	char _spokenWordFeatureEnabled;
	NSURL* _URI;
	id<SPTCeramicRequestDelegate> _ceramicDelegate;
	NSURL* _URL;
	id<SPTAlbumViewModelPlaybackDelegate> _playbackDelegate;
	SPTAlbumData* _albumData;
	int _playingRow;
	NSString* _customMessage;
	NSNumber* _tracksBlockIndex;
	SPTAlbumSpace* _space;
	id<SPTPlayer> _player;
	SPTPlayerContext* _playerContext;
	SPTOfflineManager* _offlineManager;
	SPTAlbumPlaybackStateRestorer* _playbackStateRestorer;
	SPTTrackContextFactory* _trackContextFactory;
	SPTTrackContext* _trackContext;
	int _collectionTracksCount;
	id<SPTClientSettings> _clientSettings;
	id<SPTCollection> _collection;

}

@property (nonatomic,readonly) NSURL * URL;                                                                //@synthesize URL=_URL - In the implementation block
@property (assign,nonatomic,__weak) id<SPTAlbumViewModelPlaybackDelegate> playbackDelegate;                //@synthesize playbackDelegate=_playbackDelegate - In the implementation block
@property (nonatomic,retain) SPTAlbumData * albumData;                                                     //@synthesize albumData=_albumData - In the implementation block
@property (assign,nonatomic) int playingRow;                                                               //@synthesize playingRow=_playingRow - In the implementation block
@property (nonatomic,readonly) int numberOfTracks; 
@property (nonatomic,readonly) int numberOfRelatedAlbums; 
@property (nonatomic,readonly) char hasRelatedAlbums; 
@property (nonatomic,readonly) char isAlbumByVariousArtists; 
@property (nonatomic,readonly) char shouldDisplayIncludesHeader; 
@property (nonatomic,readonly) NSString * customMessage;                                                   //@synthesize customMessage=_customMessage - In the implementation block
@property (nonatomic,copy,readonly) NSString * titleForRelatedAlbums; 
@property (nonatomic,copy,readonly) NSString * titleForAlbumMetadata; 
@property (nonatomic,copy,readonly) NSString * titleForAlbumMetadataUpperCase; 
@property (nonatomic,copy,readonly) NSString * descriptionForSpotlightIndex; 
@property (nonatomic,copy,readonly) NSString * copyrightText; 
@property (nonatomic,readonly) char shouldDisplayAsSpokenWordAlbum; 
@property (nonatomic,retain) NSNumber * tracksBlockIndex;                                                  //@synthesize tracksBlockIndex=_tracksBlockIndex - In the implementation block
@property (nonatomic,retain) SPTAlbumSpace * space;                                                        //@synthesize space=_space - In the implementation block
@property (nonatomic,retain) id<SPTPlayer> player;                                                         //@synthesize player=_player - In the implementation block
@property (nonatomic,retain) SPTPlayerContext * playerContext;                                             //@synthesize playerContext=_playerContext - In the implementation block
@property (nonatomic,retain) SPTOfflineManager * offlineManager;                                           //@synthesize offlineManager=_offlineManager - In the implementation block
@property (assign,nonatomic,__weak) SPTAlbumPlaybackStateRestorer * playbackStateRestorer;                 //@synthesize playbackStateRestorer=_playbackStateRestorer - In the implementation block
@property (assign,getter=isSpokenWordFeatureEnabled,nonatomic) char spokenWordFeatureEnabled;              //@synthesize spokenWordFeatureEnabled=_spokenWordFeatureEnabled - In the implementation block
@property (assign,nonatomic,__weak) SPTTrackContextFactory * trackContextFactory;                          //@synthesize trackContextFactory=_trackContextFactory - In the implementation block
@property (nonatomic,retain) SPTTrackContext * trackContext;                                               //@synthesize trackContext=_trackContext - In the implementation block
@property (assign,nonatomic) int collectionTracksCount;                                                    //@synthesize collectionTracksCount=_collectionTracksCount - In the implementation block
@property (nonatomic,readonly) id<SPTClientSettings> clientSettings;                                       //@synthesize clientSettings=_clientSettings - In the implementation block
@property (assign,nonatomic,__weak) id<SPTCollection> collection;                                          //@synthesize collection=_collection - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (assign,nonatomic,__weak) id<SPTCeramicRequestDelegate> ceramicDelegate;                         //@synthesize ceramicDelegate=_ceramicDelegate - In the implementation block
@property (getter=isLoaded,nonatomic,readonly) char loaded; 
@property (nonatomic,readonly) NSURL * URI;                                                                //@synthesize URI=_URI - In the implementation block
@property (nonatomic,readonly) char shouldReloadWhenOnlineStateChanges;                                    //@synthesize shouldReloadWhenOnlineStateChanges=_shouldReloadWhenOnlineStateChanges - In the implementation block
+(id)requestURLForAlbumURL:(id)arg1 ;
-(void)player:(id)arg1 stateDidChange:(id)arg2 ;
-(void)setPlaybackStateRestorer:(SPTAlbumPlaybackStateRestorer *)arg1 ;
-(SPTAlbumPlaybackStateRestorer *)playbackStateRestorer;
-(SPTOfflineManager *)offlineManager;
-(char)isSpokenWordFeatureEnabled;
-(id)initWithPlayer:(id)arg1 offlineState:(id)arg2 offlineManager:(id)arg3 playbackStateRestorer:(id)arg4 spokenWordFeatureEnabled:(char)arg5 dataLoader:(id)arg6 serviceName:(id)arg7 endpointPath:(id)arg8 albumURL:(id)arg9 trackContextFactory:(id)arg10 clientSettings:(id)arg11 collection:(id)arg12 ;
-(SPTAlbumData *)albumData;
-(NSString *)titleForAlbumMetadataUpperCase;
-(NSNumber *)tracksBlockIndex;
-(char)trackIsRatedExplicitAtIndexPath:(id)arg1 ;
-(int)offlineSyncStatusForTrackAtIndex:(unsigned)arg1 ;
-(char)playTrackAtIndex:(unsigned)arg1 ;
-(id)trackDataAtIndex:(unsigned)arg1 ;
-(id)contextMenuActionsForCurrentViewWithFactory:(id)arg1 logContext:(id)arg2 ;
-(void)playAlbum:(char)arg1 ;
-(SPTPlayerContext *)playerContext;
-(int)playingRow;
-(int)numberOfRelatedAlbums;
-(char)contextMenuNeedsCompleteAlbumAction;
-(char)isAlbumByVariousArtists;
-(int)collectionTracksCount;
-(void)setTrackContext:(SPTTrackContext *)arg1 ;
-(SPTTrackContext *)trackContext;
-(void)setCollectionTracksCount:(int)arg1 ;
-(id)dataWithDictionary:(id)arg1 ;
-(void)setAlbumData:(SPTAlbumData *)arg1 ;
-(void)setTracksBlockIndex:(NSNumber *)arg1 ;
-(char)hasRelatedAlbums;
-(void)setPlayableStateForAllTracks;
-(void)setActiveStatesForAllTracks;
-(id<SPTCeramicRequestDelegate>)ceramicDelegate;
-(id)createPlayContextWithData:(id)arg1 ;
-(void)setPlayerContext:(SPTPlayerContext *)arg1 ;
-(SPTTrackContextFactory *)trackContextFactory;
-(NSString *)titleForAlbumMetadata;
-(void)setPlayingRow:(int)arg1 ;
-(char)trackIsCurrentlyPlayingAtIndexPath:(id)arg1 ;
-(char)trackIsPlayableAtIndexPath:(id)arg1 ;
-(void)trackContext:(id)arg1 contentChanged:(id)arg2 ;
-(void)setCeramicDelegate:(id<SPTCeramicRequestDelegate>)arg1 ;
-(char)shouldReloadWhenOnlineStateChanges;
-(void)resumeAlbumPlayback;
-(char)canResumeAlbumPlayback;
-(void)playAlbum:(char)arg1 playerState:(/*^block*/id)arg2 ;
-(char)shouldDisplayAsSpokenWordAlbum;
-(id)relatedAlbumDataAtIndex:(unsigned)arg1 ;
-(float)heightForRelatedAlbumsTableViewCellWithLayout:(id)arg1 ;
-(char)shouldDisplayIncludesHeader;
-(void)parseSuccessfulResponseDictionary:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(NSString *)titleForRelatedAlbums;
-(NSString *)descriptionForSpotlightIndex;
-(NSString *)customMessage;
-(void)setOfflineManager:(SPTOfflineManager *)arg1 ;
-(void)setSpokenWordFeatureEnabled:(char)arg1 ;
-(void)setTrackContextFactory:(SPTTrackContextFactory *)arg1 ;
-(id<SPTAlbumViewModelPlaybackDelegate>)playbackDelegate;
-(void)setPlaybackDelegate:(id<SPTAlbumViewModelPlaybackDelegate>)arg1 ;
-(NSString *)copyrightText;
-(id<SPTCollection>)collection;
-(void)setCollection:(id<SPTCollection>)arg1 ;
-(void)setPlayer:(id<SPTPlayer>)arg1 ;
-(id<SPTPlayer>)player;
-(NSURL *)URL;
-(char)isLoaded;
-(void)load;
-(id<SPTClientSettings>)clientSettings;
-(void)setSpace:(SPTAlbumSpace *)arg1 ;
-(SPTAlbumSpace *)space;
-(NSURL *)URI;
-(unsigned)albumType;
-(int)numberOfTracks;
@end

