/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:45:52 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/D2238F36-ED84-40F4-9CB2-8C71CACC8B47/Spotify.app/Spotify
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Spotify/SPTDataLoaderRequestResponseHandlerDelegate.h>
#import <Spotify/SPTDataLoaderAuthoriserDelegate.h>

@protocol SPTDataLoaderRequestResponseHandlerDelegate, OS_dispatch_queue;
@class NSArray, NSMapTable, NSObject, NSString;

@interface SPTDataLoaderFactory : NSObject <SPTDataLoaderRequestResponseHandlerDelegate, SPTDataLoaderAuthoriserDelegate> {

	char _offline;
	id<SPTDataLoaderRequestResponseHandlerDelegate> _requestResponseHandlerDelegate;
	NSArray* _authorisers;
	NSMapTable* _requestToRequestResponseHandler;
	NSObject*<OS_dispatch_queue> _requestTimeoutQueue;

}

@property (assign,getter=isOffline,nonatomic) char offline;                                 //@synthesize offline=_offline - In the implementation block
@property (nonatomic,copy,readonly) NSArray * authorisers;                                  //@synthesize authorisers=_authorisers - In the implementation block
@property (nonatomic,retain) NSMapTable * requestToRequestResponseHandler;                  //@synthesize requestToRequestResponseHandler=_requestToRequestResponseHandler - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> requestTimeoutQueue;              //@synthesize requestTimeoutQueue=_requestTimeoutQueue - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)dataLoaderFactoryWithRequestResponseHandlerDelegate:(id)arg1 authorisers:(id)arg2 ;
-(void)dataLoaderAuthoriser:(id)arg1 authorisedRequest:(id)arg2 ;
-(void)dataLoaderAuthoriser:(id)arg1 didFailToAuthoriseRequest:(id)arg2 withError:(id)arg3 ;
-(void)authoriseRequest:(id)arg1 ;
-(id)createDataLoader;
-(void)receivedDataChunk:(id)arg1 forResponse:(id)arg2 ;
-(void)cancelledRequest:(id)arg1 ;
-(void)failedResponse:(id)arg1 ;
-(void)successfulResponse:(id)arg1 ;
-(void)receivedInitialResponse:(id)arg1 ;
-(id)initWithRequestResponseHandlerDelegate:(id)arg1 authorisers:(id)arg2 ;
-(NSMapTable *)requestToRequestResponseHandler;
-(NSArray *)authorisers;
-(char)shouldAuthoriseRequest:(id)arg1 ;
-(NSObject*<OS_dispatch_queue>)requestTimeoutQueue;
-(id)requestResponseHandlerDelegate;
-(id)requestResponseHandler:(id)arg1 performRequest:(id)arg2 ;
-(void)setRequestToRequestResponseHandler:(NSMapTable *)arg1 ;
-(void)setRequestTimeoutQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(char)isOffline;
-(void)setOffline:(char)arg1 ;
@end

