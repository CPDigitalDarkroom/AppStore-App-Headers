/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:45:49 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/D2238F36-ED84-40F4-9CB2-8C71CACC8B47/Spotify.app/Spotify
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Spotify/FBSDKURLOpening.h>
#import <Spotify/FBSDKWebDialogDelegate.h>

@class NSSet, FBSDKLoginManagerLogger, FBSDKKeychainStore, NSString;

@interface FBSDKLoginManager : NSObject <FBSDKURLOpening, FBSDKWebDialogDelegate> {

	/*^block*/id _handler;
	NSSet* _requestedPermissions;
	FBSDKLoginManagerLogger* _logger;
	char _performingLogIn;
	FBSDKKeychainStore* _keychainStore;
	unsigned _defaultAudience;
	unsigned _loginBehavior;

}

@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (assign,nonatomic) unsigned defaultAudience;              //@synthesize defaultAudience=_defaultAudience - In the implementation block
@property (assign,nonatomic) unsigned loginBehavior;                //@synthesize loginBehavior=_loginBehavior - In the implementation block
+(id)stringForChallenge;
+(void)renewSystemCredentials:(/*^block*/id)arg1 ;
+(void)initialize;
-(void)setDefaultAudience:(unsigned)arg1 ;
-(void)logOut;
-(void)logInWithReadPermissions:(id)arg1 handler:(/*^block*/id)arg2 ;
-(void)webDialogDidCancel:(id)arg1 ;
-(void)webDialog:(id)arg1 didCompleteWithResults:(id)arg2 ;
-(void)webDialog:(id)arg1 didFailWithError:(id)arg2 ;
-(unsigned)loginBehavior;
-(void)logInWithBehavior:(unsigned)arg1 ;
-(void)assertPermissions:(id)arg1 ;
-(void)logInWithPermissions:(id)arg1 handler:(/*^block*/id)arg2 ;
-(id)loadExpectedChallenge;
-(void)storeExpectedChallenge:(id)arg1 ;
-(void)determineRecentlyGrantedPermissions:(id*)arg1 recentlyDeclinedPermissions:(id*)arg2 forGrantedPermission:(id)arg3 declinedPermissions:(id)arg4 ;
-(void)validateReauthentication:(id)arg1 withResult:(id)arg2 ;
-(void)invokeHandler:(id)arg1 error:(id)arg2 ;
-(unsigned)defaultAudience;
-(id)logInParametersWithPermissions:(id)arg1 ;
-(void)performNativeLogInWithParameters:(id)arg1 handler:(/*^block*/id)arg2 ;
-(void)performBrowserLogInWithParameters:(id)arg1 handler:(/*^block*/id)arg2 ;
-(void)beginSystemLogIn;
-(void)performWebLogInWithParameters:(id)arg1 handler:(/*^block*/id)arg2 ;
-(void)logInWithPublishPermissions:(id)arg1 handler:(/*^block*/id)arg2 ;
-(void)completeAuthentication:(id)arg1 expectChallenge:(char)arg2 ;
-(void)setRequestedPermissions:(id)arg1 ;
-(void)setLoginBehavior:(unsigned)arg1 ;
-(void)tryOpenURL:(id)arg1 handler:(/*^block*/id)arg2 ;
-(void)handleImplicitCancelOfLogIn;
-(void)performSystemLogIn;
-(void)fallbackToNativeBehavior;
-(void)continueSystemLogInWithTokenString:(id)arg1 error:(id)arg2 state:(id)arg3 ;
-(id)init;
-(char)application:(id)arg1 openURL:(id)arg2 sourceApplication:(id)arg3 annotation:(id)arg4 ;
-(void)applicationDidBecomeActive:(id)arg1 ;
-(void)setHandler:(/*^block*/id)arg1 ;
@end

