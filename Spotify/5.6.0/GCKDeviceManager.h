/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:45:24 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/D2238F36-ED84-40F4-9CB2-8C71CACC8B47/Spotify.app/Spotify
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Spotify/Spotify-Structs.h>
#import <Spotify/GCKGuestModePairingViewControllerDelegate.h>
#import <Spotify/GCKCastSecureSocketDelegate.h>
#import <Spotify/GCKDeviceAuthChannelDelegate.h>
#import <Spotify/GCKReceiverControlChannelDelegate.h>
#import <Spotify/GCKHeartbeatChannelDelegate.h>
#import <Spotify/GCKDeviceSetupChannelDelegate.h>
#import <Spotify/GCKMultizoneControlChannelDelegate.h>
#import <Spotify/GCKProximityInfoChannelDelegate.h>

@protocol GNSAudioModemOperation, GCKDeviceManagerDelegate, GCKDeviceManagerMultizoneDelegate, GCKDeviceManagerDelegateInternal;
@class NSString, NSMutableDictionary, NSMutableArray, GCKCastSecureSocket, GCKJoinOptions, GCKLaunchOptions, NSError, NSTimer, GCKClientCertificate, GCKReconnectStrategy, GCKGuestModePairingViewController, GNSAudioModem, GCKDevice, GCKApplicationMetadata, GCKConnectionControlChannel, GCKDeviceAuthChannel, GCKHeartbeatChannel, GCKReceiverControlChannel, GCKProximityInfoChannel, GCKDeviceSetupChannel, GCKMultizoneControlChannel;

@interface GCKDeviceManager : NSObject <GCKGuestModePairingViewControllerDelegate, GCKCastSecureSocketDelegate, GCKDeviceAuthChannelDelegate, GCKReceiverControlChannelDelegate, GCKHeartbeatChannelDelegate, GCKDeviceSetupChannelDelegate, GCKMultizoneControlChannelDelegate, GCKProximityInfoChannelDelegate> {

	NSString* _sourceID;
	NSMutableDictionary* _channels;
	NSMutableArray* _internalChannels;
	GCKCastSecureSocket* _socket;
	int _nextRequestID;
	double _inactivityTimeout;
	NSString* _connectedAppTransportID;
	NSString* _applicationIDToConnect;
	NSString* _applicationIDToJoin;
	NSString* _sessionIDToJoin;
	GCKJoinOptions* _joinOptions;
	NSString* _pausedAppID;
	NSString* _pausedSessionID;
	int _joinAppRequestID;
	int _stopAppRequestID;
	int _statusRequestID;
	char _isRegisteredForAppStateNotifications;
	char _shouldLaunchIfJoinFails;
	char _ignoreAppStateNotifications;
	GCKLaunchOptions* _launchOptionsIfJoinFails;
	NSError* _disconnectionError;
	NSTimer* _reconnectTimer;
	char _suspensionNotified;
	char _wasConnected;
	char _connectionSuspended;
	char _reconnectAfterDisconnected;
	long long _connectionSessionID;
	long long _applicationConnectionSessionID;
	GCKClientCertificate* _clientCertificate;
	GCKReconnectStrategy* _reconnectStrategy;
	GCKGuestModePairingViewController* _guestModeDialog;
	GNSAudioModem* _audioModem;
	id<GNSAudioModemOperation> _audioTokenListenOperation;
	char _isReconnecting;
	char _deviceMuted;
	int _connectionState;
	int _applicationConnectionState;
	GCKDevice* _device;
	id<GCKDeviceManagerDelegate> _delegate;
	float _deviceVolume;
	int _activeInputStatus;
	int _standbyStatus;
	NSString* _applicationSessionID;
	GCKApplicationMetadata* _applicationMetadata;
	NSString* _applicationStatusText;
	id<GCKDeviceManagerMultizoneDelegate> _multizoneDelegate;
	id<GCKDeviceManagerDelegateInternal> _internalDelegate;
	GCKConnectionControlChannel* _connectionControlChannel;
	GCKDeviceAuthChannel* _deviceAuthChannel;
	GCKHeartbeatChannel* _heartbeatChannel;
	GCKReceiverControlChannel* _receiverControlChannel;
	GCKProximityInfoChannel* _proximityInfoChannel;
	GCKDeviceSetupChannel* _deviceSetupChannel;
	GCKMultizoneControlChannel* _multizoneControlChannel;
	long long _hashedDeviceID;

}

@property (assign,nonatomic) int connectionState;                                                         //@synthesize connectionState=_connectionState - In the implementation block
@property (assign,nonatomic) int applicationConnectionState;                                              //@synthesize applicationConnectionState=_applicationConnectionState - In the implementation block
@property (nonatomic,readonly) char isConnected; 
@property (nonatomic,readonly) char isConnectedToApp; 
@property (assign,nonatomic) char isReconnecting;                                                         //@synthesize isReconnecting=_isReconnecting - In the implementation block
@property (assign,nonatomic) double reconnectTimeout; 
@property (nonatomic,readonly) GCKDevice * device;                                                        //@synthesize device=_device - In the implementation block
@property (assign,nonatomic,__weak) id<GCKDeviceManagerDelegate> delegate;                                //@synthesize delegate=_delegate - In the implementation block
@property (assign,nonatomic) float deviceVolume;                                                          //@synthesize deviceVolume=_deviceVolume - In the implementation block
@property (assign,nonatomic) char deviceMuted;                                                            //@synthesize deviceMuted=_deviceMuted - In the implementation block
@property (assign,nonatomic) int activeInputStatus;                                                       //@synthesize activeInputStatus=_activeInputStatus - In the implementation block
@property (assign,nonatomic) int standbyStatus;                                                           //@synthesize standbyStatus=_standbyStatus - In the implementation block
@property (nonatomic,copy) NSString * applicationSessionID;                                               //@synthesize applicationSessionID=_applicationSessionID - In the implementation block
@property (nonatomic,copy) GCKApplicationMetadata * applicationMetadata;                                  //@synthesize applicationMetadata=_applicationMetadata - In the implementation block
@property (nonatomic,copy) NSString * applicationStatusText;                                              //@synthesize applicationStatusText=_applicationStatusText - In the implementation block
@property (assign,nonatomic,__weak) id<GCKDeviceManagerMultizoneDelegate> multizoneDelegate;              //@synthesize multizoneDelegate=_multizoneDelegate - In the implementation block
@property (assign,nonatomic,__weak) id<GCKDeviceManagerDelegateInternal> internalDelegate;                //@synthesize internalDelegate=_internalDelegate - In the implementation block
@property (assign,nonatomic) long long hashedDeviceID;                                                    //@synthesize hashedDeviceID=_hashedDeviceID - In the implementation block
@property (nonatomic,retain) GCKConnectionControlChannel * connectionControlChannel;                      //@synthesize connectionControlChannel=_connectionControlChannel - In the implementation block
@property (nonatomic,retain) GCKDeviceAuthChannel * deviceAuthChannel;                                    //@synthesize deviceAuthChannel=_deviceAuthChannel - In the implementation block
@property (nonatomic,retain) GCKHeartbeatChannel * heartbeatChannel;                                      //@synthesize heartbeatChannel=_heartbeatChannel - In the implementation block
@property (nonatomic,retain) GCKReceiverControlChannel * receiverControlChannel;                          //@synthesize receiverControlChannel=_receiverControlChannel - In the implementation block
@property (nonatomic,retain) GCKProximityInfoChannel * proximityInfoChannel;                              //@synthesize proximityInfoChannel=_proximityInfoChannel - In the implementation block
@property (nonatomic,retain) GCKDeviceSetupChannel * deviceSetupChannel;                                  //@synthesize deviceSetupChannel=_deviceSetupChannel - In the implementation block
@property (nonatomic,retain) GCKMultizoneControlChannel * multizoneControlChannel;                        //@synthesize multizoneControlChannel=_multizoneControlChannel - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(int)launchApplication:(id)arg1 ;
-(int)sendTextMessage:(id)arg1 withNamespace:(id)arg2 ;
-(int)sendTextMessage:(id)arg1 withNamespace:(id)arg2 toDestinationID:(id)arg3 ;
-(int)sendBinaryMessage:(id)arg1 withNamespace:(id)arg2 ;
-(int)sendBinaryMessage:(id)arg1 withNamespace:(id)arg2 toDestinationID:(id)arg3 ;
-(int)generateRequestID;
-(void)castSocket:(id)arg1 didConnectWithPeerSecTrust:(SecTrustRef)arg2 ;
-(void)castSocket:(id)arg1 didReceiveMessage:(id)arg2 ;
-(void)castSocket:(id)arg1 didFailToConnectWithError:(id)arg2 ;
-(void)castSocket:(id)arg1 didDisconnectWithError:(id)arg2 ;
-(void)deviceAuthChannel:(id)arg1 didFailToAuthenticateWithError:(id)arg2 ;
-(void)deviceAuthChannelDidAuthenticate:(id)arg1 ;
-(id)initWithDevice:(id)arg1 clientPackageName:(id)arg2 ignoreAppStateNotifications:(char)arg3 reconnectStrategy:(id)arg4 ;
-(long long)hashedDeviceID;
-(int)requestDeviceConfiguration;
-(GCKApplicationMetadata *)applicationMetadata;
-(NSString *)applicationStatusText;
-(int)requestAvailabilityForAppIDs:(id)arg1 ;
-(char)addInternalChannel:(id)arg1 ;
-(void)disconnectChannel:(id)arg1 ;
-(int)applicationConnectionState;
-(void)connectInternalUnchecked;
-(void)disconnectWithLeave:(char)arg1 ;
-(void)clearReconnectState;
-(void)disconnectWithError:(id)arg1 isExplicit:(char)arg2 ;
-(void)connectChannel:(id)arg1 ;
-(char)addChannel:(id)arg1 ;
-(char)isReconnecting;
-(void)setIsReconnecting:(char)arg1 ;
-(void)setApplicationConnectionState:(int)arg1 ;
-(void)disconnectInternalUncheckedWithExplicitFlag:(char)arg1 ;
-(void)notifyConnectionSuspendedWithReason:(int)arg1 ;
-(void)connectGuestModeWithPin:(id)arg1 pinType:(int)arg2 ;
-(void)connectVisibleDeviceWithPin:(id)arg1 pinType:(int)arg2 ;
-(void)notifyDidFailToConnectWithError:(id)arg1 ;
-(void)handleConnectionError:(id)arg1 ;
-(GCKConnectionControlChannel *)connectionControlChannel;
-(char)updateApplicationMetadata:(id)arg1 ;
-(void)notifyDidReceiveApplicationMetadata;
-(char)clearJoinState;
-(char)connectToApplication:(id)arg1 connectionType:(int)arg2 ;
-(void)notifyDidConnectToApplication:(id)arg1 withSessionID:(id)arg2 launchedApplication:(char)arg3 ;
-(void)notifyDidFailToConnectToApplicationWithError:(id)arg1 ;
-(void)notifyDidDisconnectFromApplicationWithError:(id)arg1 ;
-(void)setApplicationMetadata:(GCKApplicationMetadata *)arg1 ;
-(void)setApplicationStatusText:(NSString *)arg1 ;
-(void)setDeviceVolume:(float)arg1 ;
-(void)setDeviceMuted:(char)arg1 ;
-(void)setActiveInputStatus:(int)arg1 ;
-(double)reconnectTimeout;
-(int)launchApplication:(id)arg1 withLaunchOptions:(id)arg2 ;
-(GCKReceiverControlChannel *)receiverControlChannel;
-(int)joinApplicationInternalUnchecked:(id)arg1 sessionID:(id)arg2 ;
-(int)joinApplication:(id)arg1 sessionID:(id)arg2 ;
-(int)joinApplication:(id)arg1 sessionID:(id)arg2 joinOptions:(id)arg3 ;
-(void)disconnectFromApplicationAndNotifyWithError:(id)arg1 ;
-(char)clearStopState;
-(int)sendMessageWithNamespace:(id)arg1 toDestinationID:(id)arg2 stringPayload:(id)arg3 binaryPayload:(id)arg4 ;
-(void)notifyConnectionResumedWithJoinedState:(char)arg1 ;
-(void)notifyDidConnect;
-(void)finishConnectFlow;
-(GCKHeartbeatChannel *)heartbeatChannel;
-(void)notifyDidDisconnectWithError:(id)arg1 ;
-(void)connectAndNotifyDidConnectToApplication:(id)arg1 launchedApplication:(char)arg2 ;
-(void)notifyDidStopApplication;
-(float)deviceVolume;
-(char)deviceMuted;
-(void)setStandbyStatus:(int)arg1 ;
-(void)notifyDidFailToStopApplicationWithError:(id)arg1 ;
-(void)notifyRequest:(int)arg1 failedWithError:(id)arg2 ;
-(void)connectToReceiverChannel;
-(GCKProximityInfoChannel *)proximityInfoChannel;
-(void)notifyDidReceiveMultizoneStatus:(id)arg1 ;
-(void)notifyDidAddMultizoneDevice:(id)arg1 ;
-(void)notifyDidRemoveMultizoneDevice:(id)arg1 ;
-(void)notifyDidUpdateMultizoneDevice:(id)arg1 ;
-(void)clearDeviceState;
-(id<GCKDeviceManagerMultizoneDelegate>)multizoneDelegate;
-(void)continueListenStarted;
-(void)heartbeatChannelDidTimeout:(id)arg1 ;
-(void)deviceSetupChannel:(id)arg1 didReceiveDeviceConfiguration:(id)arg2 ;
-(void)deviceSetupChannel:(id)arg1 didFailToReceiveDeviceConfigurationWithID:(int)arg2 error:(id)arg3 ;
-(id)initWithDevice:(id)arg1 clientPackageName:(id)arg2 ;
-(id)initWithDevice:(id)arg1 clientPackageName:(id)arg2 ignoreAppStateNotifications:(char)arg3 ;
-(char)isConnectedToApp;
-(char)removeChannel:(id)arg1 ;
-(void)connectWithInactivityTimeout:(double)arg1 ;
-(void)setReconnectTimeout:(double)arg1 ;
-(int)launchApplication:(id)arg1 relaunchIfRunning:(char)arg2 ;
-(int)joinApplication:(id)arg1 ;
-(char)leaveApplication;
-(int)setDeviceVolume:(float)arg1 forMultizoneDevice:(id)arg2 ;
-(int)setDeviceMuted:(char)arg1 forMultizoneDevice:(id)arg2 ;
-(void)receiverControlChannel:(id)arg1 volumeDidChangeToLevel:(float)arg2 isMuted:(char)arg3 ;
-(void)receiverControlChannel:(id)arg1 didReceiveActiveInputStatus:(int)arg2 ;
-(NSString *)applicationSessionID;
-(void)setApplicationSessionID:(NSString *)arg1 ;
-(void)setMultizoneDelegate:(id<GCKDeviceManagerMultizoneDelegate>)arg1 ;
-(void)setHashedDeviceID:(long long)arg1 ;
-(void)setConnectionControlChannel:(GCKConnectionControlChannel *)arg1 ;
-(GCKDeviceAuthChannel *)deviceAuthChannel;
-(void)setDeviceAuthChannel:(GCKDeviceAuthChannel *)arg1 ;
-(void)setHeartbeatChannel:(GCKHeartbeatChannel *)arg1 ;
-(void)setReceiverControlChannel:(GCKReceiverControlChannel *)arg1 ;
-(void)setProximityInfoChannel:(GCKProximityInfoChannel *)arg1 ;
-(GCKDeviceSetupChannel *)deviceSetupChannel;
-(void)setDeviceSetupChannel:(GCKDeviceSetupChannel *)arg1 ;
-(GCKMultizoneControlChannel *)multizoneControlChannel;
-(void)setMultizoneControlChannel:(GCKMultizoneControlChannel *)arg1 ;
-(void)registerForAppStateNotifications;
-(void)unregisterForAppStateNotifications;
-(void)onCancelled;
-(void)onListenStarted;
-(void)onListenStopped;
-(void)onPINAvailable:(id)arg1 ;
-(void)multizoneControlChannel:(id)arg1 didReceiveMultizoneStatus:(id)arg2 ;
-(void)multizoneControlChannel:(id)arg1 requestDidFailWithID:(int)arg2 reason:(id)arg3 ;
-(void)multizoneControlChannel:(id)arg1 didAddDevice:(id)arg2 ;
-(void)multizoneControlChannel:(id)arg1 didUpdateDevice:(id)arg2 ;
-(void)multizoneControlChannel:(id)arg1 didRemoveDeviceWithID:(id)arg2 ;
-(int)requestMultizoneStatus;
-(void)proximityInfoChannel:(id)arg1 didReceiveDeviceInfoWithDeviceID:(id)arg2 friendlyName:(id)arg3 forBSSID:(id)arg4 ;
-(void)receiverControlChannel:(id)arg1 didLaunchCastApplication:(id)arg2 ;
-(void)receiverControlChannelDidStopCastApplication:(id)arg1 ;
-(void)receiverControlChannel:(id)arg1 didReceiveReceiverStatus:(id)arg2 applicationStatus:(id)arg3 requestID:(int)arg4 ;
-(void)receiverControlChannel:(id)arg1 didReceiveAppAvailability:(id)arg2 ;
-(int)requestDeviceStatus;
-(void)receiverControlChannel:(id)arg1 didFailToLaunchCastApplicationWithError:(id)arg2 ;
-(void)receiverControlChannel:(id)arg1 requestDidFailWithID:(int)arg2 error:(id)arg3 ;
-(void)receiverControlChannel:(id)arg1 didReplaceRequestWithID:(int)arg2 ;
-(int)stopApplication;
-(int)stopApplicationWithSessionID:(id)arg1 ;
-(int)activeInputStatus;
-(int)standbyStatus;
-(void)appWillEnterForeground;
-(void)appDidEnterBackground;
-(char)isInBackground;
-(int)setMuted:(char)arg1 ;
-(int)connectionState;
-(char)isConnecting;
-(int)setVolume:(float)arg1 ;
-(void)setDelegate:(id<GCKDeviceManagerDelegate>)arg1 ;
-(void)dealloc;
-(id)init;
-(id<GCKDeviceManagerDelegate>)delegate;
-(void)connect;
-(void)disconnect;
-(GCKDevice *)device;
-(char)isConnected;
-(void)reconnectTimerDidFire:(id)arg1 ;
-(id<GCKDeviceManagerDelegateInternal>)internalDelegate;
-(void)setInternalDelegate:(id<GCKDeviceManagerDelegateInternal>)arg1 ;
-(void)setConnectionState:(int)arg1 ;
-(char)isInForeground;
-(char)scheduleReconnect;
@end

