/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:45:38 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/D2238F36-ED84-40F4-9CB2-8C71CACC8B47/Spotify.app/Spotify
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Spotify/SPTService.h>
#import <Spotify/SPTNewReleasesFeature.h>

@protocol SPTClientSessionService, SPTCoreService, CollectionFeature, SPTNetworkFeature, SPTGLUEFeature, SPTSettingsFeature, SPTAudioTouchFeature, SPTAbbaFeature, SPTAbbaFeatureFlags;
@class SPTNewReleasesPopupController, SPTNewReleasesLocalDataManager, SPTNewReleasesPreSavedSongsLocalDataManager, SPTNewReleasesJustReleasedEntityListLoader, NSString, SPTAllocationContext;

@interface SPTNewReleasesFeatureImplementation : NSObject <SPTService, SPTNewReleasesFeature> {

	id<SPTClientSessionService> _clientSessionService;
	id<SPTCoreService> _coreService;
	id<CollectionFeature> _collectionFeature;
	id<SPTNetworkFeature> _networkFeature;
	id<SPTGLUEFeature> _glueFeature;
	id<SPTSettingsFeature> _settingsFeature;
	id<SPTAudioTouchFeature> _audioTouchFeature;
	id<SPTAbbaFeature> _abbaFeature;
	id<SPTAbbaFeatureFlags> _featureFlags;
	SPTNewReleasesPopupController* _popupController;
	SPTNewReleasesLocalDataManager* _localDataManager;
	SPTNewReleasesPreSavedSongsLocalDataManager* _preSavedLocalDataManager;
	SPTNewReleasesJustReleasedEntityListLoader* _justReleasedEntityListLoader;

}

@property (assign,nonatomic,__weak) id<SPTClientSessionService> clientSessionService;                                //@synthesize clientSessionService=_clientSessionService - In the implementation block
@property (assign,nonatomic,__weak) id<SPTCoreService> coreService;                                                  //@synthesize coreService=_coreService - In the implementation block
@property (assign,nonatomic,__weak) id<CollectionFeature> collectionFeature;                                         //@synthesize collectionFeature=_collectionFeature - In the implementation block
@property (assign,nonatomic,__weak) id<SPTNetworkFeature> networkFeature;                                            //@synthesize networkFeature=_networkFeature - In the implementation block
@property (assign,nonatomic,__weak) id<SPTGLUEFeature> glueFeature;                                                  //@synthesize glueFeature=_glueFeature - In the implementation block
@property (assign,nonatomic,__weak) id<SPTSettingsFeature> settingsFeature;                                          //@synthesize settingsFeature=_settingsFeature - In the implementation block
@property (assign,nonatomic,__weak) id<SPTAudioTouchFeature> audioTouchFeature;                                      //@synthesize audioTouchFeature=_audioTouchFeature - In the implementation block
@property (assign,nonatomic,__weak) id<SPTAbbaFeature> abbaFeature;                                                  //@synthesize abbaFeature=_abbaFeature - In the implementation block
@property (nonatomic,retain) id<SPTAbbaFeatureFlags> featureFlags;                                                   //@synthesize featureFlags=_featureFlags - In the implementation block
@property (nonatomic,retain) SPTNewReleasesPopupController * popupController;                                        //@synthesize popupController=_popupController - In the implementation block
@property (nonatomic,retain) SPTNewReleasesLocalDataManager * localDataManager;                                      //@synthesize localDataManager=_localDataManager - In the implementation block
@property (nonatomic,retain) SPTNewReleasesPreSavedSongsLocalDataManager * preSavedLocalDataManager;                 //@synthesize preSavedLocalDataManager=_preSavedLocalDataManager - In the implementation block
@property (nonatomic,retain) SPTNewReleasesJustReleasedEntityListLoader * justReleasedEntityListLoader;              //@synthesize justReleasedEntityListLoader=_justReleasedEntityListLoader - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,retain) SPTAllocationContext * allocationContext; 
+(id)serviceDependencies;
+(id)serviceIdentifier;
-(void)setCoreService:(id<SPTCoreService>)arg1 ;
-(id<SPTCoreService>)coreService;
-(void)configureWithServices:(id)arg1 ;
-(void)setClientSessionService:(id<SPTClientSessionService>)arg1 ;
-(void)setNetworkFeature:(id<SPTNetworkFeature>)arg1 ;
-(id<SPTAbbaFeatureFlags>)featureFlags;
-(void)setFeatureFlags:(id<SPTAbbaFeatureFlags>)arg1 ;
-(id<SPTNetworkFeature>)networkFeature;
-(id<SPTClientSessionService>)clientSessionService;
-(void)setAbbaFeature:(id<SPTAbbaFeature>)arg1 ;
-(void)setSettingsFeature:(id<SPTSettingsFeature>)arg1 ;
-(id<SPTAbbaFeature>)abbaFeature;
-(id<SPTSettingsFeature>)settingsFeature;
-(void)setCollectionFeature:(id<CollectionFeature>)arg1 ;
-(void)setGlueFeature:(id<SPTGLUEFeature>)arg1 ;
-(id<SPTGLUEFeature>)glueFeature;
-(char)isUpcomingTracksEnabled;
-(id)provideJustReleasedEntityListLoader;
-(void)registerSettingsSection;
-(SPTNewReleasesLocalDataManager *)localDataManager;
-(void)setLocalDataManager:(SPTNewReleasesLocalDataManager *)arg1 ;
-(void)setPopupController:(SPTNewReleasesPopupController *)arg1 ;
-(SPTNewReleasesPopupController *)popupController;
-(void)setAudioTouchFeature:(id<SPTAudioTouchFeature>)arg1 ;
-(id<SPTAudioTouchFeature>)audioTouchFeature;
-(void)setPreSavedLocalDataManager:(SPTNewReleasesPreSavedSongsLocalDataManager *)arg1 ;
-(void)registerUpcomingTracksSettingsPage;
-(void)registerJustReleasedPage;
-(char)isPopupEnabled;
-(void)dispatchPopupController;
-(id)provideJustReleasedPage:(id)arg1 ;
-(id)providePreSaveManager;
-(SPTNewReleasesPreSavedSongsLocalDataManager *)preSavedLocalDataManager;
-(SPTNewReleasesJustReleasedEntityListLoader *)justReleasedEntityListLoader;
-(void)setJustReleasedEntityListLoader:(SPTNewReleasesJustReleasedEntityListLoader *)arg1 ;
-(id)upcomingTracksSettingsPageClearSettingsAction;
-(id)upcomingTracksSettingsPageMoveReleaseDateAction;
-(id)upcomingTracksSettingsPageAlbumActionsGroup;
-(id)upcomingTracksSettingsPagePlaylistActionsGroup;
-(id)upcomingTracksSettingsPagePreSavedCache;
-(id)providePlaylistAdditionalSectionForTrackContext:(id)arg1 collection:(id)arg2 ;
-(void)load;
-(void)unload;
-(id<CollectionFeature>)collectionFeature;
@end

