/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:45:28 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/D2238F36-ED84-40F4-9CB2-8C71CACC8B47/Spotify.app/Spotify
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Spotify/SPTNowPlayingDurationViewDataSource.h>

@protocol SPTAdEntityViewModelDelegate, SPTAdEntityViewModelInternalDelegate, SPTVideoResourceLoaderFactory, SPTVideoResourceLoader, OS_dispatch_queue;
@class SPTAdEntityData, AVPlayerLayer, NSMutableDictionary, NSTimer, AVPlayer, SPTAdsActivityLogger, NSNotificationCenter, NSMapTable, NSObject;

@interface SPTAdEntityViewModel : NSObject <SPTNowPlayingDurationViewDataSource> {

	char _canSkip;
	char _activePlayerRateContextObserver;
	char _activePlayerStatusContextObserver;
	char _activePlayerItemStatusContextObserver;
	char _activePlaybackBufferContextObserver;
	char _activePlayerDurationContextObserver;
	char _playbackIsStalled;
	char _playbackWasInitiated;
	char _isAVReady;
	char _preloaded;
	SPTAdEntityData* _data;
	id<SPTAdEntityViewModelDelegate> _viewDelegate;
	id<SPTAdEntityViewModelInternalDelegate> _internalDelegate;
	AVPlayerLayer* _mediaPlayerLayer;
	NSMutableDictionary* _currentMediaInfo;
	id _mediaPlayerObserver;
	NSTimer* _bufferingTimer;
	NSTimer* _unknownPlayerStatusTimer;
	AVPlayer* _mediaPlayer;
	SPTAdsActivityLogger* _adsActivityLogger;
	NSNotificationCenter* _notificationCenter;
	id<SPTVideoResourceLoaderFactory> _videoResourceLoaderFactory;
	id<SPTVideoResourceLoader> _hlsResourceLoader;
	NSMapTable* _firedEvents;
	NSObject*<OS_dispatch_queue> _playerTimeObserverQueue;

}

@property (nonatomic,retain) SPTAdEntityData * data;                                                        //@synthesize data=_data - In the implementation block
@property (assign,nonatomic,__weak) id<SPTAdEntityViewModelDelegate> viewDelegate;                          //@synthesize viewDelegate=_viewDelegate - In the implementation block
@property (assign,nonatomic,__weak) id<SPTAdEntityViewModelInternalDelegate> internalDelegate;              //@synthesize internalDelegate=_internalDelegate - In the implementation block
@property (nonatomic,readonly) char isReadyToPlay; 
@property (assign,nonatomic) char canSkip;                                                                  //@synthesize canSkip=_canSkip - In the implementation block
@property (nonatomic,retain) AVPlayerLayer * mediaPlayerLayer;                                              //@synthesize mediaPlayerLayer=_mediaPlayerLayer - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * currentMediaInfo;                                        //@synthesize currentMediaInfo=_currentMediaInfo - In the implementation block
@property (nonatomic,retain) id mediaPlayerObserver;                                                        //@synthesize mediaPlayerObserver=_mediaPlayerObserver - In the implementation block
@property (assign,nonatomic) char activePlayerRateContextObserver;                                          //@synthesize activePlayerRateContextObserver=_activePlayerRateContextObserver - In the implementation block
@property (assign,nonatomic) char activePlayerStatusContextObserver;                                        //@synthesize activePlayerStatusContextObserver=_activePlayerStatusContextObserver - In the implementation block
@property (assign,nonatomic) char activePlayerItemStatusContextObserver;                                    //@synthesize activePlayerItemStatusContextObserver=_activePlayerItemStatusContextObserver - In the implementation block
@property (assign,nonatomic) char activePlaybackBufferContextObserver;                                      //@synthesize activePlaybackBufferContextObserver=_activePlaybackBufferContextObserver - In the implementation block
@property (assign,nonatomic) char activePlayerDurationContextObserver;                                      //@synthesize activePlayerDurationContextObserver=_activePlayerDurationContextObserver - In the implementation block
@property (nonatomic,retain) NSTimer * bufferingTimer;                                                      //@synthesize bufferingTimer=_bufferingTimer - In the implementation block
@property (nonatomic,retain) NSTimer * unknownPlayerStatusTimer;                                            //@synthesize unknownPlayerStatusTimer=_unknownPlayerStatusTimer - In the implementation block
@property (assign,nonatomic) char playbackIsStalled;                                                        //@synthesize playbackIsStalled=_playbackIsStalled - In the implementation block
@property (assign,nonatomic) char playbackWasInitiated;                                                     //@synthesize playbackWasInitiated=_playbackWasInitiated - In the implementation block
@property (nonatomic,retain) AVPlayer * mediaPlayer;                                                        //@synthesize mediaPlayer=_mediaPlayer - In the implementation block
@property (assign,nonatomic) char isAVReady;                                                                //@synthesize isAVReady=_isAVReady - In the implementation block
@property (assign,nonatomic,__weak) SPTAdsActivityLogger * adsActivityLogger;                               //@synthesize adsActivityLogger=_adsActivityLogger - In the implementation block
@property (nonatomic,retain) NSNotificationCenter * notificationCenter;                                     //@synthesize notificationCenter=_notificationCenter - In the implementation block
@property (nonatomic,retain) id<SPTVideoResourceLoaderFactory> videoResourceLoaderFactory;                  //@synthesize videoResourceLoaderFactory=_videoResourceLoaderFactory - In the implementation block
@property (nonatomic,retain) id<SPTVideoResourceLoader> hlsResourceLoader;                                  //@synthesize hlsResourceLoader=_hlsResourceLoader - In the implementation block
@property (assign,getter=isPreloaded,nonatomic) char preloaded;                                             //@synthesize preloaded=_preloaded - In the implementation block
@property (nonatomic,retain) NSMapTable * firedEvents;                                                      //@synthesize firedEvents=_firedEvents - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> playerTimeObserverQueue;                          //@synthesize playerTimeObserverQueue=_playerTimeObserverQueue - In the implementation block
+(id)supportedMimeTypes;
-(void)setNotificationCenter:(NSNotificationCenter *)arg1 ;
-(void)playBackgrounded:(char)arg1 ;
-(void)startAd;
-(id<SPTVideoResourceLoaderFactory>)videoResourceLoaderFactory;
-(SPTAdsActivityLogger *)adsActivityLogger;
-(id)initWithAdDictionary:(id)arg1 hlsVideoDisabled:(char)arg2 videoResourceLoaderFactory:(id)arg3 adsActivityLogger:(id)arg4 notificationCenter:(id)arg5 ;
-(void)setVideoResourceLoaderFactory:(id<SPTVideoResourceLoaderFactory>)arg1 ;
-(void)setAdsActivityLogger:(SPTAdsActivityLogger *)arg1 ;
-(void)setHlsResourceLoader:(id<SPTVideoResourceLoader>)arg1 ;
-(id<SPTVideoResourceLoader>)hlsResourceLoader;
-(char)isPreloaded;
-(id)createMediaPlayer;
-(void)setMediaPlayer:(AVPlayer *)arg1 ;
-(AVPlayer *)mediaPlayer;
-(void)setActivePlayerStatusContextObserver:(char)arg1 ;
-(void)setActivePlayerItemStatusContextObserver:(char)arg1 ;
-(void)setPreloaded:(char)arg1 ;
-(NSObject*<OS_dispatch_queue>)playerTimeObserverQueue;
-(void)fireEvent:(id)arg1 ;
-(void)setCanSkip:(char)arg1 ;
-(void)setMediaPlayerObserver:(id)arg1 ;
-(void)setActivePlayerRateContextObserver:(char)arg1 ;
-(NSTimer *)unknownPlayerStatusTimer;
-(id<SPTAdEntityViewModelDelegate>)viewDelegate;
-(void)playerItemFailed:(id)arg1 ;
-(void)setActivePlaybackBufferContextObserver:(char)arg1 ;
-(void)setActivePlayerDurationContextObserver:(char)arg1 ;
-(void)addPlaybackChangeObservers:(id)arg1 ;
-(void)prepareMedia;
-(char)playbackWasInitiated;
-(char)playbackIsStalled;
-(char)hasCompletedPlayback;
-(void)playbackStalled;
-(void)bufferingTimedOut;
-(void)setBufferingTimer:(NSTimer *)arg1 ;
-(NSTimer *)bufferingTimer;
-(void)playMediaPlayer;
-(void)updateMediaItemInfo;
-(void)setupVideoLayer;
-(void)setIsAVReady:(char)arg1 ;
-(char)isAVReady;
-(void)logState;
-(void)setPlaybackIsStalled:(char)arg1 ;
-(void)teardownOnSwitchAd;
-(void)enableVideo:(char)arg1 ;
-(void)unknownPlayerStatusTimedOut;
-(void)setUnknownPlayerStatusTimer:(NSTimer *)arg1 ;
-(void)setPlaybackWasInitiated:(char)arg1 ;
-(NSMutableDictionary *)currentMediaInfo;
-(double)getPlaybackDuration;
-(char)activePlayerRateContextObserver;
-(AVPlayerLayer *)mediaPlayerLayer;
-(void)setMediaPlayerLayer:(AVPlayerLayer *)arg1 ;
-(NSMapTable *)firedEvents;
-(void)removeObserversFromPlayer:(id)arg1 ;
-(void)setCurrentMediaInfo:(NSMutableDictionary *)arg1 ;
-(char)activePlaybackBufferContextObserver;
-(char)activePlayerItemStatusContextObserver;
-(char)activePlayerDurationContextObserver;
-(char)activePlayerStatusContextObserver;
-(id)mediaPlayerObserver;
-(char)canSkip;
-(id)avPlayerDebugDescription;
-(id)debugDescriptionMediaPlayerItem:(id)arg1 ;
-(double)durationViewCurrentPosition:(id)arg1 ;
-(double)durationViewCurrentDuration:(id)arg1 ;
-(float)durationViewAnimationSpeed:(id)arg1 ;
-(char)durationViewDisallowSeeking:(id)arg1 ;
-(id)addPlaybackTimeObserver:(/*^block*/id)arg1 ;
-(void)removePlaybackTimeObserver:(id)arg1 ;
-(void)tearDownVideoLayer;
-(void)setViewDelegate:(id<SPTAdEntityViewModelDelegate>)arg1 ;
-(void)setFiredEvents:(NSMapTable *)arg1 ;
-(void)setPlayerTimeObserverQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(void)play;
-(char)isPlaying;
-(void)dealloc;
-(id)description;
-(SPTAdEntityData *)data;
-(void)setData:(SPTAdEntityData *)arg1 ;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(void)pause;
-(void)playbackResumed;
-(void)playbackFinished:(id)arg1 ;
-(void)preload;
-(NSNotificationCenter *)notificationCenter;
-(id<SPTAdEntityViewModelInternalDelegate>)internalDelegate;
-(void)setInternalDelegate:(id<SPTAdEntityViewModelInternalDelegate>)arg1 ;
-(void)teardown;
-(void)skip;
-(char)isReadyToPlay;
@end

