/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:45:31 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/D2238F36-ED84-40F4-9CB2-8C71CACC8B47/Spotify.app/Spotify
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Spotify/SPTPlayerObserver.h>

@protocol SPTChartViewModelDelegate, SPTChartViewModelPlayerDelegate, SPTOfflineModeState, SPTPlayer;
@class NSIndexPath, NSURL, SPTChart, SPTPlayerContext, NSArray, NSString, NSAttributedString;

@interface SPTChartViewModel : NSObject <SPTPlayerObserver> {

	char _currentChartBeingPlayed;
	char _playlistHasLoaded;
	NSIndexPath* _indexPathForTrackCurrentlyPlaying;
	NSURL* _URIForTrackCurrentlyPlayed;
	id<SPTChartViewModelDelegate> _delegate;
	id<SPTChartViewModelPlayerDelegate> _playerDelegate;
	SPTChart* _chart;
	id<SPTOfflineModeState> _offlineModeState;
	NSURL* _currentPlayerStateOriginURL;
	id<SPTPlayer> _player;
	SPTPlayerContext* _playerContext;
	NSArray* _playerTracks;

}

@property (nonatomic,retain) NSIndexPath * indexPathForTrackCurrentlyPlaying;                            //@synthesize indexPathForTrackCurrentlyPlaying=_indexPathForTrackCurrentlyPlaying - In the implementation block
@property (nonatomic,retain) NSURL * URIForTrackCurrentlyPlayed;                                         //@synthesize URIForTrackCurrentlyPlayed=_URIForTrackCurrentlyPlayed - In the implementation block
@property (assign,nonatomic,__weak) id<SPTChartViewModelDelegate> delegate;                              //@synthesize delegate=_delegate - In the implementation block
@property (assign,getter=isCurrentChartBeingPlayed,nonatomic) char currentChartBeingPlayed;              //@synthesize currentChartBeingPlayed=_currentChartBeingPlayed - In the implementation block
@property (getter=isUserOffline,nonatomic,readonly) char userOffline; 
@property (assign,nonatomic,__weak) id<SPTChartViewModelPlayerDelegate> playerDelegate;                  //@synthesize playerDelegate=_playerDelegate - In the implementation block
@property (nonatomic,retain) SPTChart * chart;                                                           //@synthesize chart=_chart - In the implementation block
@property (nonatomic,readonly) unsigned numberOfTracksInChart; 
@property (nonatomic,readonly) NSString * chartTitle; 
@property (nonatomic,readonly) NSAttributedString * metadataAttributedText; 
@property (nonatomic,readonly) NSString * metadataText; 
@property (nonatomic,readonly) NSString * chartDescriptionSubtitle; 
@property (nonatomic,readonly) NSString * chartDescription; 
@property (nonatomic,readonly) NSURL * chartImageURL; 
@property (nonatomic,readonly) NSURL * chartURI; 
@property (nonatomic,retain) id<SPTOfflineModeState> offlineModeState;                                   //@synthesize offlineModeState=_offlineModeState - In the implementation block
@property (nonatomic,retain) NSURL * currentPlayerStateOriginURL;                                        //@synthesize currentPlayerStateOriginURL=_currentPlayerStateOriginURL - In the implementation block
@property (nonatomic,retain) id<SPTPlayer> player;                                                       //@synthesize player=_player - In the implementation block
@property (nonatomic,retain) SPTPlayerContext * playerContext;                                           //@synthesize playerContext=_playerContext - In the implementation block
@property (nonatomic,retain) NSArray * playerTracks;                                                     //@synthesize playerTracks=_playerTracks - In the implementation block
@property (assign,nonatomic) char playlistHasLoaded;                                                     //@synthesize playlistHasLoaded=_playlistHasLoaded - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id<SPTOfflineModeState>)offlineModeState;
-(void)setOfflineModeState:(id<SPTOfflineModeState>)arg1 ;
-(void)player:(id)arg1 stateDidChange:(id)arg2 ;
-(SPTPlayerContext *)playerContext;
-(void)setPlayerContext:(SPTPlayerContext *)arg1 ;
-(NSString *)metadataText;
-(void)playContextShuffled:(char)arg1 ;
-(id)initWithPlayer:(id)arg1 offlineModeState:(id)arg2 ;
-(char)isCurrentChartBeingPlayed;
-(unsigned)numberOfTracksInChart;
-(NSURL *)URIForTrackCurrentlyPlayed;
-(id)indexPathForTrackWithURL:(id)arg1 ;
-(void)setIndexPathForTrackCurrentlyPlaying:(NSIndexPath *)arg1 ;
-(NSURL *)currentPlayerStateOriginURL;
-(void)setCurrentChartBeingPlayed:(char)arg1 ;
-(NSString *)chartTitle;
-(NSURL *)chartImageURL;
-(NSString *)chartDescription;
-(id)chartEntryForIndexPath:(id)arg1 ;
-(void)setCurrentPlayerStateOriginURL:(NSURL *)arg1 ;
-(id<SPTChartViewModelPlayerDelegate>)playerDelegate;
-(void)playTrackAtIndexPath:(id)arg1 ;
-(char)isUserOffline;
-(id)audioTouchURIForIndexPath:(id)arg1 ;
-(id)titleForTrackAtIndex:(int)arg1 ;
-(id)subtitleForTrackAtIndex:(int)arg1 ;
-(id)urlForTrackAtIndex:(int)arg1 ;
-(unsigned)chartEntryPositionForIndex:(unsigned)arg1 ;
-(char)isPlaybackAvailableForChartEntryAtIndexPath:(id)arg1 ;
-(unsigned)chartEntryStatusForIndex:(unsigned)arg1 ;
-(NSAttributedString *)metadataAttributedText;
-(NSString *)chartDescriptionSubtitle;
-(NSURL *)chartURI;
-(id)defaultPlaylistNameForEntryAtIndexPath:(id)arg1 ;
-(id)trackContextMenuSubtitleForIndexPath:(id)arg1 ;
-(id)rankTitleForIndexPath:(id)arg1 ;
-(void)setURIForTrackCurrentlyPlayed:(NSURL *)arg1 ;
-(void)playlistDidLoad;
-(NSIndexPath *)indexPathForTrackCurrentlyPlaying;
-(void)setPlayerDelegate:(id<SPTChartViewModelPlayerDelegate>)arg1 ;
-(NSArray *)playerTracks;
-(void)setPlayerTracks:(NSArray *)arg1 ;
-(char)playlistHasLoaded;
-(void)setPlaylistHasLoaded:(char)arg1 ;
-(void)setPlayer:(id<SPTPlayer>)arg1 ;
-(id<SPTPlayer>)player;
-(void)setDelegate:(id<SPTChartViewModelDelegate>)arg1 ;
-(id<SPTChartViewModelDelegate>)delegate;
-(void)setChart:(SPTChart *)arg1 ;
-(SPTChart *)chart;
@end

