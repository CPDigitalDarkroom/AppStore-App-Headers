/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:45:23 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/D2238F36-ED84-40F4-9CB2-8C71CACC8B47/Spotify.app/Spotify
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Spotify/IDAudioServiceDelegate.h>
#import <Spotify/RAPIBmwRemoteApplicationDelegate.h>

@protocol RAPIEntertainmentAppLinkDelegate;
@class NSString, NSTimer, NSMutableArray, RAPIBmwRemoteApplicationManager, RAPILockScreenViewController, RAPIContext, RAPIMainScreen, RAPISearchScreen, RAPILogManagerController;

@interface RAPIEntertainmentAppLink : NSObject <IDAudioServiceDelegate, RAPIBmwRemoteApplicationDelegate> {

	NSString* lastAppName;
	NSString* lastTrackName;
	NSString* lastArtistName;
	NSString* lastAlbumName;
	id<RAPIEntertainmentAppLinkDelegate> _rapiDelegate;
	NSTimer* _playbackStateUpdateTimer;
	NSMutableArray* _screenTableConfig;
	RAPIBmwRemoteApplicationManager* _bmwRemoteApplicationManager;
	RAPILockScreenViewController* _lockScreenViewController;
	RAPIContext* _rapiContext;
	float _imageCompressionFactor;
	RAPIMainScreen* _mainScreen;
	RAPISearchScreen* _searchScreen;
	RAPILogManagerController* _debugMenuController;

}

@property (__weak) id<RAPIEntertainmentAppLinkDelegate> rapiDelegate;                          //@synthesize rapiDelegate=_rapiDelegate - In the implementation block
@property (nonatomic,retain) NSTimer * playbackStateUpdateTimer;                               //@synthesize playbackStateUpdateTimer=_playbackStateUpdateTimer - In the implementation block
@property (retain) NSMutableArray * screenTableConfig;                                         //@synthesize screenTableConfig=_screenTableConfig - In the implementation block
@property (retain) RAPIBmwRemoteApplicationManager * bmwRemoteApplicationManager;              //@synthesize bmwRemoteApplicationManager=_bmwRemoteApplicationManager - In the implementation block
@property (retain) RAPILockScreenViewController * lockScreenViewController;                    //@synthesize lockScreenViewController=_lockScreenViewController - In the implementation block
@property (retain) RAPIContext * rapiContext;                                                  //@synthesize rapiContext=_rapiContext - In the implementation block
@property (assign,nonatomic) float imageCompressionFactor;                                     //@synthesize imageCompressionFactor=_imageCompressionFactor - In the implementation block
@property (retain) RAPIMainScreen * mainScreen;                                                //@synthesize mainScreen=_mainScreen - In the implementation block
@property (retain) RAPISearchScreen * searchScreen;                                            //@synthesize searchScreen=_searchScreen - In the implementation block
@property (retain) RAPILogManagerController * debugMenuController;                             //@synthesize debugMenuController=_debugMenuController - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)sharedInstance;
-(void)audioService:(id)arg1 entertainmentStateChanged:(int)arg2 ;
-(void)audioService:(id)arg1 interruptStateChanged:(int)arg2 ;
-(void)audioService:(id)arg1 multimediaButtonEvent:(int)arg2 ;
-(void)setProgressBarVisible:(char)arg1 ;
-(void)setImageCompressionFactor:(float)arg1 ;
-(float)imageCompressionFactor;
-(void)setToolbarButtonHoverable:(char)arg1 clickable:(char)arg2 forButton:(int)arg3 ;
-(void)setCoverArt:(id)arg1 ;
-(void)setToolbarTooltip:(id)arg1 forButton:(int)arg2 ;
-(void)setToolbarImage:(int)arg1 forButton:(int)arg2 ;
-(void)setToolbarTargetScreen:(int)arg1 forButton:(int)arg2 ;
-(void)showStatusMessage:(id)arg1 displayProgressIndicator:(char)arg2 forScreen:(int)arg3 ;
-(void)hideStatusMessageForScreen:(int)arg1 ;
-(id<RAPIEntertainmentAppLinkDelegate>)rapiDelegate;
-(void)setRapiContext:(RAPIContext *)arg1 ;
-(RAPIContext *)rapiContext;
-(void)setRapiDelegate:(id<RAPIEntertainmentAppLinkDelegate>)arg1 ;
-(void)handleLogFromRapiLogger:(id)arg1 ;
-(void)setScreenTableConfig:(NSMutableArray *)arg1 ;
-(void)setBmwRemoteApplicationManager:(RAPIBmwRemoteApplicationManager *)arg1 ;
-(RAPIBmwRemoteApplicationManager *)bmwRemoteApplicationManager;
-(NSMutableArray *)screenTableConfig;
-(void)setMainScreen:(RAPIMainScreen *)arg1 ;
-(void)setSearchScreen:(RAPISearchScreen *)arg1 ;
-(RAPISearchScreen *)searchScreen;
-(void)handleMainScreenAppeared;
-(void)handleMainScreenDisappeared;
-(void)handleOnItemClicked:(id)arg1 ;
-(id)getAudioStateDescription:(int)arg1 ;
-(void)onConnectionError:(id)arg1 ;
-(void)showLockScreen:(id)arg1 ;
-(RAPILockScreenViewController *)lockScreenViewController;
-(void)setDebugMenuController:(RAPILogManagerController *)arg1 ;
-(RAPILogManagerController *)debugMenuController;
-(void)setLockScreenViewController:(RAPILockScreenViewController *)arg1 ;
-(void)updatePlaybackState;
-(void)setPlaybackStateUpdateTimer:(NSTimer *)arg1 ;
-(NSTimer *)playbackStateUpdateTimer;
-(void)onConnectedToHeadUnit:(id)arg1 ;
-(void)onDisconnectedFromHeadUnit;
-(id)initWithScreenTableConfig:(id)arg1 andDelegate:(id)arg2 handleOnItemClicked:(SEL)arg3 useConfiguration:(id)arg4 ;
-(void)notifyOfOpenUrl:(id)arg1 ;
-(void)logStringWithFormat:(id)arg1 withArguments:(void*)arg2 ;
-(void)presentDebugMenuFromController:(id)arg1 ;
-(void)postAudioServiceAvailability:(int)arg1 ;
-(void)showStatusMessage:(id)arg1 forScreen:(int)arg2 ;
-(void)setCheckmarkPosition:(int)arg1 forGroup:(int)arg2 forScreen:(int)arg3 ;
-(void)invalidateScreen:(int)arg1 withErrorMessage:(id)arg2 ;
-(void)invalidateImageForRow:(int)arg1 forGroup:(int)arg2 forScreen:(int)arg3 ;
-(void)setActionButtonEnabled:(char)arg1 forButton:(int)arg2 forScreen:(int)arg3 ;
-(void)setMasterOptionButtonEnabled:(char)arg1 forScreen:(int)arg2 ;
-(float)getImageCompressionFactor;
-(void)setAlbumName:(id)arg1 ;
-(RAPIMainScreen *)mainScreen;
-(void)logStringWithFormat:(id)arg1 ;
-(void)shutdown;
-(void)setTrackName:(id)arg1 ;
-(void)setAppName:(id)arg1 ;
-(void)setArtistName:(id)arg1 ;
@end

