/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:45:34 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/D2238F36-ED84-40F4-9CB2-8C71CACC8B47/Spotify.app/Spotify
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Spotify/GCKDeviceScannerListener.h>
#import <Spotify/GCKDeviceManagerDelegate.h>
#import <Spotify/GCKMediaControlChannelDelegate.h>
#import <Spotify/GCKLoggerDelegate.h>
#import <Spotify/SPTCastCustomChannelDelegate.h>
#import <Spotify/SPTConnectLoginStateDelegate.h>
#import <Spotify/SPTCastCustomChannelDelegate.h>
#import <Spotify/SPTGaiaDeviceStateManagerObserver.h>

@protocol SPTLocalSettings, SPTProductState;
@class GCKDeviceScanner, NSMutableArray, GCKDeviceManager, GCKMediaControlChannel, GCKApplicationMetadata, SPTGaiaDeviceManager, SPApHermesController, GCKDevice, SPTCastCustomChannel, NSDictionary, NSHashTable, NSDate, NSString;

@interface SPTCastManager : NSObject <GCKDeviceScannerListener, GCKDeviceManagerDelegate, GCKMediaControlChannelDelegate, GCKLoggerDelegate, SPTCastCustomChannelDelegate, SPTConnectLoginStateDelegate, SPTCastCustomChannelDelegate, SPTGaiaDeviceStateManagerObserver> {

	char _shouldLaunchApplication;
	float _volume;
	GCKDeviceScanner* _deviceScanner;
	NSMutableArray* _castDeviceList;
	GCKDeviceManager* _deviceManager;
	GCKMediaControlChannel* _mediaControlChannel;
	GCKApplicationMetadata* _applicationMetadata;
	SPTGaiaDeviceManager* _manager;
	SPApHermesController* _hermesController;
	GCKDevice* _connectedCastDevice;
	SPTCastCustomChannel* _castCustomChannel;
	NSDictionary* _loginContextData;
	id<SPTLocalSettings> _localSettings;
	id<SPTProductState> _productState;
	NSHashTable* _observers;
	NSDate* _lastVolumeSetDate;

}

@property (assign,nonatomic) float volume;                                              //@synthesize volume=_volume - In the implementation block
@property (nonatomic,retain) GCKDeviceScanner * deviceScanner;                          //@synthesize deviceScanner=_deviceScanner - In the implementation block
@property (nonatomic,retain) NSMutableArray * castDeviceList;                           //@synthesize castDeviceList=_castDeviceList - In the implementation block
@property (nonatomic,retain) GCKDeviceManager * deviceManager;                          //@synthesize deviceManager=_deviceManager - In the implementation block
@property (nonatomic,retain) GCKMediaControlChannel * mediaControlChannel;              //@synthesize mediaControlChannel=_mediaControlChannel - In the implementation block
@property (nonatomic,retain) GCKApplicationMetadata * applicationMetadata;              //@synthesize applicationMetadata=_applicationMetadata - In the implementation block
@property (nonatomic,retain) SPTGaiaDeviceManager * manager;                            //@synthesize manager=_manager - In the implementation block
@property (nonatomic,readonly) SPApHermesController * hermesController;                 //@synthesize hermesController=_hermesController - In the implementation block
@property (nonatomic,retain) GCKDevice * connectedCastDevice;                           //@synthesize connectedCastDevice=_connectedCastDevice - In the implementation block
@property (nonatomic,retain) SPTCastCustomChannel * castCustomChannel;                  //@synthesize castCustomChannel=_castCustomChannel - In the implementation block
@property (nonatomic,copy) NSDictionary * loginContextData;                             //@synthesize loginContextData=_loginContextData - In the implementation block
@property (nonatomic,retain) id<SPTLocalSettings> localSettings;                        //@synthesize localSettings=_localSettings - In the implementation block
@property (nonatomic,retain) id<SPTProductState> productState;                          //@synthesize productState=_productState - In the implementation block
@property (assign,nonatomic) char shouldLaunchApplication;                              //@synthesize shouldLaunchApplication=_shouldLaunchApplication - In the implementation block
@property (nonatomic,retain) NSHashTable * observers;                                   //@synthesize observers=_observers - In the implementation block
@property (nonatomic,retain) NSDate * lastVolumeSetDate;                                //@synthesize lastVolumeSetDate=_lastVolumeSetDate - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)parseResponse:(id)arg1 error:(id*)arg2 ;
-(id<SPTProductState>)productState;
-(void)setProductState:(id<SPTProductState>)arg1 ;
-(SPApHermesController *)hermesController;
-(void)logFromFunction:(const char*)arg1 message:(id)arg2 ;
-(GCKApplicationMetadata *)applicationMetadata;
-(void)deviceManagerDidConnect:(id)arg1 ;
-(void)deviceManager:(id)arg1 didFailToConnectWithError:(id)arg2 ;
-(void)deviceManager:(id)arg1 didDisconnectWithError:(id)arg2 ;
-(void)deviceManager:(id)arg1 didConnectToCastApplication:(id)arg2 sessionID:(id)arg3 launchedApplication:(char)arg4 ;
-(void)deviceManager:(id)arg1 didFailToConnectToApplicationWithError:(id)arg2 ;
-(void)deviceManager:(id)arg1 didDisconnectFromApplicationWithError:(id)arg2 ;
-(void)deviceManager:(id)arg1 volumeDidChangeToLevel:(float)arg2 isMuted:(char)arg3 ;
-(void)setApplicationMetadata:(GCKApplicationMetadata *)arg1 ;
-(void)deviceDidComeOnline:(id)arg1 ;
-(void)deviceDidGoOffline:(id)arg1 ;
-(void)mediaControlChannelDidUpdateStatus:(id)arg1 ;
-(id<SPTLocalSettings>)localSettings;
-(void)setLocalSettings:(id<SPTLocalSettings>)arg1 ;
-(void)deviceStateManager:(id)arg1 activeDeviceDidChange:(id)arg2 ;
-(void)deviceStateManager:(id)arg1 device:(id)arg2 volumeDidChange:(float)arg3 ;
-(void)payloadReceived:(id)arg1 ;
-(char)isConnectedCastDevice:(id)arg1 ;
-(float)getVolume;
-(void)volumeUp;
-(void)volumeDown;
-(GCKDeviceScanner *)deviceScanner;
-(id)receiverAppID;
-(void)setDeviceScanner:(GCKDeviceScanner *)arg1 ;
-(id)getCastDeviceList;
-(char)isGaiaDevice:(id)arg1 sameAsCastDevice:(id)arg2 ;
-(char)isGaiaDeviceCast:(id)arg1 ;
-(void)notifyVolumeChanged;
-(void)setLastVolumeSetDate:(NSDate *)arg1 ;
-(NSDate *)lastVolumeSetDate;
-(void)addCastDevice:(id)arg1 ;
-(void)connectToDevice:(id)arg1 ;
-(void)removeCastDevice:(id)arg1 ;
-(GCKDevice *)connectedCastDevice;
-(id)prependCast:(id)arg1 ;
-(char)shouldLaunchApplication;
-(void)setShouldLaunchApplication:(char)arg1 ;
-(void)notifyObserversConnectivityUpdated:(id)arg1 ;
-(void)createMessageChannel;
-(id)castDiscoveredDeviceFromGCKDevice:(id)arg1 ;
-(SPTCastCustomChannel *)castCustomChannel;
-(void)disconnectCastFromDevice;
-(id)castDeviceWithIdentifier:(id)arg1 ;
-(void)setMediaControlChannel:(GCKMediaControlChannel *)arg1 ;
-(GCKMediaControlChannel *)mediaControlChannel;
-(void)loadDummyMedia;
-(void)setCastCustomChannel:(SPTCastCustomChannel *)arg1 ;
-(NSMutableArray *)castDeviceList;
-(void)setConnectedCastDevice:(GCKDevice *)arg1 ;
-(char)isCastDeviceConnected:(id)arg1 ;
-(char)isLoginAlreadyPerformed;
-(void)injectDeviceToCore:(id)arg1 ;
-(void)removeDeviceFromCore:(id)arg1 ;
-(id)dictionaryFromDevice:(id)arg1 ;
-(void)connectToCastDeviceWithId:(id)arg1 ;
-(void)destroyMessageChannel;
-(void)connectLoginStatusDidChange:(id)arg1 username:(id)arg2 blob:(id)arg3 clientKey:(id)arg4 ;
-(id)initWithProductState:(id)arg1 localSettings:(id)arg2 hermesController:(id)arg3 ;
-(void)setGaiaDeviceManager:(id)arg1 ;
-(char)isCastSessionActive;
-(int)deviceTypeForGaiaDevice:(id)arg1 ;
-(void)deviceManager:(id)arg1 didReceiveStatusForApplication:(id)arg2 ;
-(void)logMessage:(id)arg1 fromFunction:(id)arg2 ;
-(void)setCastDeviceList:(NSMutableArray *)arg1 ;
-(NSDictionary *)loginContextData;
-(void)setLoginContextData:(NSDictionary *)arg1 ;
-(void)setManager:(SPTGaiaDeviceManager *)arg1 ;
-(void)startScanning;
-(SPTGaiaDeviceManager *)manager;
-(void)setVolume:(float)arg1 ;
-(void)dealloc;
-(void)applicationDidBecomeActive:(id)arg1 ;
-(void)addObserver:(id)arg1 ;
-(void)removeObserver:(id)arg1 ;
-(void)setObservers:(NSHashTable *)arg1 ;
-(NSHashTable *)observers;
-(void)stopScanning;
-(GCKDeviceManager *)deviceManager;
-(void)setDeviceManager:(GCKDeviceManager *)arg1 ;
-(float)volume;
@end

