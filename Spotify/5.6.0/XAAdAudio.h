/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:45:20 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/D2238F36-ED84-40F4-9CB2-8C71CACC8B47/Spotify.app/Spotify
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Spotify/Spotify-Structs.h>
#import <Spotify/XAAdResource.h>
#import <libobjc.A.dylib/AVAudioPlayerDelegate.h>
#import <libobjc.A.dylib/NSURLConnectionDelegate.h>
#import <libobjc.A.dylib/NSCopying.h>

@protocol XAAdAudioDelegate, OS_dispatch_queue, OS_dispatch_source;
@class NSObject, AVAudioPlayer, NSTimer, NSString;

@interface XAAdAudio : XAAdResource <AVAudioPlayerDelegate, NSURLConnectionDelegate, NSCopying> {

	char _prepared;
	char _sentAlmostFinishedEvent;
	char _sentPlaybackStalledEvent;
	char _sentAudioStarted;
	char _sentThresholdAlert;
	char _waitingOnInteruption;
	NSObject*<XAAdAudioDelegate> _delegate;
	int _stallCountThreshold;
	NSObject*<OS_dispatch_queue> _audioPlayQueue;
	NSObject*<OS_dispatch_queue> _audioTimerQueue;
	NSObject*<OS_dispatch_source> _timer;
	int _stallCount;
	int _state;
	/*^block*/id _completionBlock;
	/*^block*/id _playbackAlmostFinishedBlock;
	/*^block*/id _playbackNotificationBlock;
	/*^block*/id _playbackStalledBlock;
	/*^block*/id _playbackStartedBlock;
	AVAudioPlayer* _audioPlayer;
	NSTimer* _durationMonitor;
	double _playbackThresholdTime;
	double _timeFromEnd;
	double _previousTimeSample;

}

@property (readonly) double duration; 
@property (nonatomic,readonly) double currentTime; 
@property (__weak) NSObject*<XAAdAudioDelegate> delegate;                               //@synthesize delegate=_delegate - In the implementation block
@property (getter=isPrepared,nonatomic,readonly) char prepared;                         //@synthesize prepared=_prepared - In the implementation block
@property (getter=isPlaying,nonatomic,readonly) char playing; 
@property (assign,nonatomic) int stallCountThreshold;                                   //@synthesize stallCountThreshold=_stallCountThreshold - In the implementation block
@property (assign,nonatomic) char sentAlmostFinishedEvent;                              //@synthesize sentAlmostFinishedEvent=_sentAlmostFinishedEvent - In the implementation block
@property (assign,nonatomic) char sentPlaybackStalledEvent;                             //@synthesize sentPlaybackStalledEvent=_sentPlaybackStalledEvent - In the implementation block
@property (assign,nonatomic) char sentAudioStarted;                                     //@synthesize sentAudioStarted=_sentAudioStarted - In the implementation block
@property (assign,nonatomic) char sentThresholdAlert;                                   //@synthesize sentThresholdAlert=_sentThresholdAlert - In the implementation block
@property (assign,nonatomic) char waitingOnInteruption;                                 //@synthesize waitingOnInteruption=_waitingOnInteruption - In the implementation block
@property (assign,nonatomic) double playbackThresholdTime;                              //@synthesize playbackThresholdTime=_playbackThresholdTime - In the implementation block
@property (assign,nonatomic) double timeFromEnd;                                        //@synthesize timeFromEnd=_timeFromEnd - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> audioPlayQueue;               //@synthesize audioPlayQueue=_audioPlayQueue - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> audioTimerQueue;              //@synthesize audioTimerQueue=_audioTimerQueue - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_source> timer;                       //@synthesize timer=_timer - In the implementation block
@property (assign,nonatomic) int stallCount;                                            //@synthesize stallCount=_stallCount - In the implementation block
@property (assign,nonatomic) double previousTimeSample;                                 //@synthesize previousTimeSample=_previousTimeSample - In the implementation block
@property (assign,nonatomic) int state;                                                 //@synthesize state=_state - In the implementation block
@property (nonatomic,copy) id completionBlock;                                          //@synthesize completionBlock=_completionBlock - In the implementation block
@property (nonatomic,copy) id playbackAlmostFinishedBlock;                              //@synthesize playbackAlmostFinishedBlock=_playbackAlmostFinishedBlock - In the implementation block
@property (nonatomic,copy) id playbackNotificationBlock;                                //@synthesize playbackNotificationBlock=_playbackNotificationBlock - In the implementation block
@property (nonatomic,copy) id playbackStalledBlock;                                     //@synthesize playbackStalledBlock=_playbackStalledBlock - In the implementation block
@property (nonatomic,copy) id playbackStartedBlock;                                     //@synthesize playbackStartedBlock=_playbackStartedBlock - In the implementation block
@property (nonatomic,retain) AVAudioPlayer * audioPlayer;                               //@synthesize audioPlayer=_audioPlayer - In the implementation block
@property (nonatomic,retain) NSTimer * durationMonitor;                                 //@synthesize durationMonitor=_durationMonitor - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)adAudioFromAVAudioPlayer:(id)arg1 ;
-(char)prepareAudio;
-(id)queueName;
-(id)initWithAVAudioPlayer:(id)arg1 ;
-(void)alertLoadHandler:(char)arg1 withError:(id)arg2 ;
-(void)createAudio;
-(void)onAudioSessionNotification:(id)arg1 ;
-(void)onEnteredForeground:(id)arg1 ;
-(NSObject*<OS_dispatch_queue>)audioPlayQueue;
-(void)startDurationMonitor;
-(char)sentAudioStarted;
-(void)playWithRepeat:(char)arg1 ;
-(void)stopDurationMonitor;
-(void)setWaitingOnInteruption:(char)arg1 ;
-(char)waitingOnInteruption;
-(NSObject*<OS_dispatch_queue>)audioTimerQueue;
-(void)checkDurationAgainstThreshold;
-(void)checkIfAudioStartedPlayback;
-(void)checkIfAudioIsAboutToFinishPlayback;
-(void)checkIfAudioPassedThreshold;
-(void)checkIfAudioStalled;
-(void)setPreviousTimeSample:(double)arg1 ;
-(double)previousTimeSample;
-(void)setSentAudioStarted:(char)arg1 ;
-(id)playbackStartedBlock;
-(double)timeFromEnd;
-(char)sentAlmostFinishedEvent;
-(id)playbackAlmostFinishedBlock;
-(void)setPlaybackAlmostFinishedBlock:(id)arg1 ;
-(void)setSentAlmostFinishedEvent:(char)arg1 ;
-(double)playbackThresholdTime;
-(char)sentThresholdAlert;
-(id)playbackNotificationBlock;
-(void)setPlaybackNotificationBlock:(id)arg1 ;
-(void)setSentThresholdAlert:(char)arg1 ;
-(char)sentPlaybackStalledEvent;
-(id)playbackStalledBlock;
-(void)setPlaybackStalledBlock:(id)arg1 ;
-(void)setSentPlaybackStalledEvent:(char)arg1 ;
-(char)isEqualToAdAudio:(id)arg1 ;
-(void)onDataLoaded;
-(void)playRepeating;
-(void)setPlaybackAlmostFinishedNotificationTimeFromEnd:(double)arg1 withBlock:(/*^block*/id)arg2 ;
-(void)setPlaybackNotificationTime:(double)arg1 withBlock:(/*^block*/id)arg2 ;
-(void)setPlaybackThresholdTime:(double)arg1 ;
-(void)setTimeFromEnd:(double)arg1 ;
-(void)setAudioPlayQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(void)setAudioTimerQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(NSTimer *)durationMonitor;
-(void)setDurationMonitor:(NSTimer *)arg1 ;
-(int)stallCountThreshold;
-(void)setStallCountThreshold:(int)arg1 ;
-(void)setPlaybackStartedBlock:(id)arg1 ;
-(void)playWithCompletion:(/*^block*/id)arg1 ;
-(double)currentTime;
-(void)play;
-(char)isPlaying;
-(char)loaded;
-(void)setDelegate:(NSObject*<XAAdAudioDelegate>)arg1 ;
-(void)dealloc;
-(char)isEqual:(id)arg1 ;
-(NSString *)description;
-(NSObject*<XAAdAudioDelegate>)delegate;
-(int)state;
-(double)duration;
-(void)setState:(int)arg1 ;
-(id)completionBlock;
-(void)setCompletionBlock:(id)arg1 ;
-(void)reset;
-(void)stop;
-(id)copyWithZone:(NSZone*)arg1 ;
-(void)setTimer:(NSObject*<OS_dispatch_source>)arg1 ;
-(NSObject*<OS_dispatch_source>)timer;
-(void)pause;
-(AVAudioPlayer *)audioPlayer;
-(void)setAudioPlayer:(AVAudioPlayer *)arg1 ;
-(void)audioPlayerDidFinishPlaying:(id)arg1 successfully:(char)arg2 ;
-(void)audioPlayerDecodeErrorDidOccur:(id)arg1 error:(id)arg2 ;
-(char)isPrepared;
-(id)initWithURLString:(id)arg1 ;
-(void)setStallCount:(int)arg1 ;
-(int)stallCount;
@end

