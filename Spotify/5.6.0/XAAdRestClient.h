/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:45:20 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/D2238F36-ED84-40F4-9CB2-8C71CACC8B47/Spotify.app/Spotify
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@class NSOperationQueue;

@interface XAAdRestClient : NSObject {

	char _logRequests;
	char _logCacheHits;
	char _logServerResponses;
	char _logJSON;
	char _logHTTP;
	unsigned _cachePolicy;
	NSOperationQueue* _queue;
	double _timeoutInterval;

}

@property (assign,nonatomic) unsigned cachePolicy;                    //@synthesize cachePolicy=_cachePolicy - In the implementation block
@property (assign,nonatomic) double timeoutInterval;                  //@synthesize timeoutInterval=_timeoutInterval - In the implementation block
@property (assign,nonatomic) char logRequests;                        //@synthesize logRequests=_logRequests - In the implementation block
@property (assign,nonatomic) char logCacheHits;                       //@synthesize logCacheHits=_logCacheHits - In the implementation block
@property (assign,nonatomic) char logServerResponses;                 //@synthesize logServerResponses=_logServerResponses - In the implementation block
@property (assign,nonatomic) char logJSON;                            //@synthesize logJSON=_logJSON - In the implementation block
@property (assign,nonatomic) char logHTTP;                            //@synthesize logHTTP=_logHTTP - In the implementation block
@property (nonatomic,readonly) NSOperationQueue * queue;              //@synthesize queue=_queue - In the implementation block
+(void)configureCacheReachibilityForHost:(id)arg1 ;
+(id)nextRequestId;
+(id)escape:(id)arg1 ;
+(id)sharedClientFromPool:(id)arg1 ;
+(unsigned long)requestQueueSize;
+(id)queueRequest;
+(int)getReachabilityStatus;
+(void)setReachabilityChangeBlock:(/*^block*/id)arg1 ;
+(void)setOfflineState:(char)arg1 ;
+(void)cancelRequest:(id)arg1 ;
+(char)reachable;
-(char)logRequests;
-(void)logRequest:(id)arg1 ;
-(/*^block*/id)block:(id)arg1 url:(id)arg2 requestId:(id)arg3 completionBlock:(/*^block*/id)arg4 ;
-(id)pathWithQueryParamsToString:(id)arg1 queryParams:(id)arg2 ;
-(id)formData:(id)arg1 ;
-(void)postToUrl:(id)arg1 formData:(id)arg2 headers:(id)arg3 responseBlock:(/*^block*/id)arg4 ;
-(void)postToUrl:(id)arg1 data:(id)arg2 headers:(id)arg3 responseBlock:(/*^block*/id)arg4 ;
-(/*^block*/id)client:(id)arg1 url:(id)arg2 requestId:(id)arg3 completionBlock:(/*^block*/id)arg4 ;
-(unsigned char)executeRequestWithId:(id)arg1 ;
-(char)logServerResponses;
-(void)logResponse:(id)arg1 forRequest:(id)arg2 error:(id)arg3 ;
-(id)loadFromUrl:(id)arg1 path:(id)arg2 parameters:(id)arg3 headers:(id)arg4 block:(/*^block*/id)arg5 ;
-(id)dictionary:(id)arg1 method:(id)arg2 queryParams:(id)arg3 body:(id)arg4 headerParams:(id)arg5 completionBlock:(/*^block*/id)arg6 ;
-(id)stringWithCompletionBlock:(id)arg1 method:(id)arg2 queryParams:(id)arg3 body:(id)arg4 headerParams:(id)arg5 completionBlock:(/*^block*/id)arg6 ;
-(void)setLogRequests:(char)arg1 ;
-(char)logCacheHits;
-(void)setLogCacheHits:(char)arg1 ;
-(void)setLogServerResponses:(char)arg1 ;
-(char)logJSON;
-(void)setLogJSON:(char)arg1 ;
-(char)logHTTP;
-(void)setLogHTTP:(char)arg1 ;
-(NSOperationQueue *)queue;
-(unsigned)cachePolicy;
-(void)setCachePolicy:(unsigned)arg1 ;
-(void)setTimeoutInterval:(double)arg1 ;
-(double)timeoutInterval;
@end

