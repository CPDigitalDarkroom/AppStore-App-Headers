/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:45:39 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/D2238F36-ED84-40F4-9CB2-8C71CACC8B47/Spotify.app/Spotify
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Spotify/SPTPlayerObserver.h>
#import <Spotify/SPTNowPlayingTrackMetadataQueueObserver.h>

@protocol SPTNowPlayingBarModelDelegate, SPTPlayer;
@class SPTNowPlayingTrackMetadataQueue, SPTPlayerTrack, NSURL, SPTPlayerState, SPTStatefulPlayer, SPTNowPlayingModel, NSString;

@interface SPTNowPlayingBarModel : NSObject <SPTPlayerObserver, SPTNowPlayingTrackMetadataQueueObserver> {

	char _skippingToPreviousTrackAllowed;
	char _skippingToNextTrackAllowed;
	char _peekingAtNextTrackAllowed;
	char _playing;
	id<SPTNowPlayingBarModelDelegate> _delegate;
	SPTNowPlayingTrackMetadataQueue* _trackMetadataQueue;
	SPTPlayerTrack* _displayedMetadata;
	SPTPlayerTrack* _playingMetadata;
	NSURL* _contextURL;
	id<SPTPlayer> _player;
	SPTPlayerState* _lastState;
	SPTStatefulPlayer* _statefulPlayer;
	SPTNowPlayingModel* _nowPlayingModel;
	NSURL* _currentTrackURL;

}

@property (assign,nonatomic,__weak) id<SPTNowPlayingBarModelDelegate> delegate;                 //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,retain) SPTNowPlayingTrackMetadataQueue * trackMetadataQueue;              //@synthesize trackMetadataQueue=_trackMetadataQueue - In the implementation block
@property (nonatomic,retain) SPTPlayerTrack * displayedMetadata;                                //@synthesize displayedMetadata=_displayedMetadata - In the implementation block
@property (nonatomic,retain) SPTPlayerTrack * playingMetadata;                                  //@synthesize playingMetadata=_playingMetadata - In the implementation block
@property (assign,nonatomic) char skippingToPreviousTrackAllowed;                               //@synthesize skippingToPreviousTrackAllowed=_skippingToPreviousTrackAllowed - In the implementation block
@property (assign,nonatomic) char skippingToNextTrackAllowed;                                   //@synthesize skippingToNextTrackAllowed=_skippingToNextTrackAllowed - In the implementation block
@property (assign,nonatomic) char peekingAtNextTrackAllowed;                                    //@synthesize peekingAtNextTrackAllowed=_peekingAtNextTrackAllowed - In the implementation block
@property (assign,getter=isPlaying,nonatomic) char playing;                                     //@synthesize playing=_playing - In the implementation block
@property (nonatomic,copy) NSURL * contextURL;                                                  //@synthesize contextURL=_contextURL - In the implementation block
@property (nonatomic,readonly) int numberOfPreviousSkips; 
@property (nonatomic,readonly) int numberOfNextSkips; 
@property (nonatomic,retain) id<SPTPlayer> player;                                              //@synthesize player=_player - In the implementation block
@property (nonatomic,retain) SPTPlayerState * lastState;                                        //@synthesize lastState=_lastState - In the implementation block
@property (nonatomic,retain) SPTStatefulPlayer * statefulPlayer;                                //@synthesize statefulPlayer=_statefulPlayer - In the implementation block
@property (nonatomic,retain) SPTNowPlayingModel * nowPlayingModel;                              //@synthesize nowPlayingModel=_nowPlayingModel - In the implementation block
@property (nonatomic,retain) NSURL * currentTrackURL;                                           //@synthesize currentTrackURL=_currentTrackURL - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)player:(id)arg1 stateDidChange:(id)arg2 ;
-(NSURL *)contextURL;
-(void)setLastState:(SPTPlayerState *)arg1 ;
-(SPTPlayerState *)lastState;
-(void)skipToNextTrack;
-(void)skipToPreviousTrack;
-(SPTPlayerTrack *)playingMetadata;
-(id)initWithPlayer:(id)arg1 nowPlayingModel:(id)arg2 ;
-(SPTNowPlayingTrackMetadataQueue *)trackMetadataQueue;
-(void)trackMetadataQueue:(id)arg1 didMoveToRelativeTrack:(id)arg2 ;
-(void)setTrackMetadataQueue:(SPTNowPlayingTrackMetadataQueue *)arg1 ;
-(SPTStatefulPlayer *)statefulPlayer;
-(void)setStatefulPlayer:(SPTStatefulPlayer *)arg1 ;
-(SPTNowPlayingModel *)nowPlayingModel;
-(SPTPlayerTrack *)displayedMetadata;
-(void)setNowPlayingModel:(SPTNowPlayingModel *)arg1 ;
-(char)skippingToPreviousTrackAllowed;
-(int)numberOfPreviousSkips;
-(char)skippingToNextTrackAllowed;
-(int)numberOfNextSkips;
-(char)peekingAtNextTrackAllowed;
-(char)shouldShowSkipNextUpsell;
-(void)metadataChanged;
-(void)setPlayingMetadata:(SPTPlayerTrack *)arg1 ;
-(void)setDisplayedMetadata:(SPTPlayerTrack *)arg1 ;
-(void)setSkippingToPreviousTrackAllowed:(char)arg1 ;
-(void)setSkippingToNextTrackAllowed:(char)arg1 ;
-(void)setPeekingAtNextTrackAllowed:(char)arg1 ;
-(void)setContextURL:(NSURL *)arg1 ;
-(void)setCurrentTrackURL:(NSURL *)arg1 ;
-(NSURL *)currentTrackURL;
-(void)setPlayer:(id<SPTPlayer>)arg1 ;
-(char)isPlaying;
-(id<SPTPlayer>)player;
-(void)setDelegate:(id<SPTNowPlayingBarModelDelegate>)arg1 ;
-(void)dealloc;
-(id<SPTNowPlayingBarModelDelegate>)delegate;
-(id)subtitle;
-(void)resume;
-(void)pause;
-(void)setPlaying:(char)arg1 ;
@end

