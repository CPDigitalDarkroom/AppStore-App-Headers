/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:45:29 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/D2238F36-ED84-40F4-9CB2-8C71CACC8B47/Spotify.app/Spotify
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Spotify/SPTVideoSurfaceDelegate.h>

@protocol SPTVideoSurfaceManager, SPTAVPlayerSource, SPTVideoSurface;
@class SPOTMoatVideoTracker, SPTAdCosmosRequestHandler, NSObject, FBKVOController, UIView, AVPlayer, NSDictionary, NSString;

@interface SPTAdsMoatManager : NSObject <SPTVideoSurfaceDelegate> {

	char _observing;
	char _tracking;
	SPOTMoatVideoTracker* _videoTracker;
	SPTAdCosmosRequestHandler* _cosmosRequestHandler;
	NSObject*<SPTVideoSurfaceManager> _surfaceManager;
	NSObject*<SPTAVPlayerSource> _avPlayerSource;
	FBKVOController* _kvoController;
	UIView*<SPTVideoSurface> _currentSurface;
	AVPlayer* _player;
	NSDictionary* _adIds;

}

@property (nonatomic,retain) SPOTMoatVideoTracker * videoTracker;                                  //@synthesize videoTracker=_videoTracker - In the implementation block
@property (nonatomic,retain) SPTAdCosmosRequestHandler * cosmosRequestHandler;                     //@synthesize cosmosRequestHandler=_cosmosRequestHandler - In the implementation block
@property (assign,nonatomic,__weak) NSObject*<SPTVideoSurfaceManager> surfaceManager;              //@synthesize surfaceManager=_surfaceManager - In the implementation block
@property (assign,nonatomic,__weak) NSObject*<SPTAVPlayerSource> avPlayerSource;                   //@synthesize avPlayerSource=_avPlayerSource - In the implementation block
@property (nonatomic,retain) FBKVOController * kvoController;                                      //@synthesize kvoController=_kvoController - In the implementation block
@property (assign,getter=isObserving,nonatomic) char observing;                                    //@synthesize observing=_observing - In the implementation block
@property (assign,getter=isTracking,nonatomic) char tracking;                                      //@synthesize tracking=_tracking - In the implementation block
@property (assign,nonatomic,__weak) UIView*<SPTVideoSurface> currentSurface;                       //@synthesize currentSurface=_currentSurface - In the implementation block
@property (assign,nonatomic,__weak) AVPlayer * player;                                             //@synthesize player=_player - In the implementation block
@property (nonatomic,copy) NSDictionary * adIds;                                                   //@synthesize adIds=_adIds - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(NSDictionary *)adIds;
-(void)setAdIds:(NSDictionary *)arg1 ;
-(SPTAdCosmosRequestHandler *)cosmosRequestHandler;
-(FBKVOController *)kvoController;
-(void)setKvoController:(FBKVOController *)arg1 ;
-(void)cosmosRequestHandlerReadyDidChange;
-(void)setCosmosRequestHandler:(SPTAdCosmosRequestHandler *)arg1 ;
-(char)parseMoatEnabled:(id)arg1 ;
-(id)parseAdIds:(id)arg1 ;
-(NSObject*<SPTVideoSurfaceManager>)surfaceManager;
-(void)attachedSurfacesDidChange:(id)arg1 ;
-(NSObject*<SPTAVPlayerSource>)avPlayerSource;
-(void)subscribeToVideoAvailableEvent:(/*^block*/id)arg1 ;
-(SPOTMoatVideoTracker *)videoTracker;
-(UIView*<SPTVideoSurface>)currentSurface;
-(void)subscribeToVideoEndedEvent:(/*^block*/id)arg1 ;
-(void)setCurrentSurface:(UIView*<SPTVideoSurface>)arg1 ;
-(void)dispatchAdCompleteEvent;
-(void)setVideoTracker:(SPOTMoatVideoTracker *)arg1 ;
-(double)currentPlayheadMillis;
-(void)refreshTrackingState:(id)arg1 ;
-(void)startTracking;
-(id)initWithVideoSurfaceManager:(id)arg1 avPlayerSource:(id)arg2 cosmosRequestHandler:(id)arg3 ;
-(void)setSurfaceManager:(NSObject*<SPTVideoSurfaceManager>)arg1 ;
-(void)setAvPlayerSource:(NSObject*<SPTAVPlayerSource>)arg1 ;
-(void)startObserving;
-(void)setObserving:(char)arg1 ;
-(void)setPlayer:(AVPlayer *)arg1 ;
-(void)playerDidChange;
-(AVPlayer *)player;
-(char)isTracking;
-(void)setTracking:(char)arg1 ;
-(char)isObserving;
-(void)endTracking;
-(void)pauseTracking;
@end

