/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:45:39 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/D2238F36-ED84-40F4-9CB2-8C71CACC8B47/Spotify.app/Spotify
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol SPTPlayer;
@class SPTPlayerState, NSSet, NSHashTable, SPTStatefulPlayerValue, NSMutableSet;

@interface SPTStatefulPlayerPlaybackControls : NSObject {

	SPTPlayerState* _playerState;
	NSSet* _disallowPausingReasons;
	NSSet* _disallowResumingReasons;
	NSHashTable* _observers;
	id<SPTPlayer> _player;
	SPTStatefulPlayerValue* _pauseValue;
	SPTStatefulPlayerValue* _shufflingContextValue;
	SPTStatefulPlayerValue* _repeatingContextValue;
	SPTStatefulPlayerValue* _repeatingTrackValue;
	NSMutableSet* _disallowPausingReasonsOutOfSync;
	NSMutableSet* _disallowResumingReasonsOutOfSync;

}

@property (nonatomic,retain) SPTPlayerState * playerState;                                 //@synthesize playerState=_playerState - In the implementation block
@property (assign,getter=isPaused,nonatomic) char paused; 
@property (assign,getter=isShufflingContext,nonatomic) char shufflingContext; 
@property (assign,getter=isRepeatingContext,nonatomic) char repeatingContext; 
@property (assign,getter=isRepeatingTrack,nonatomic) char repeatingTrack; 
@property (nonatomic,retain) NSSet * disallowPausingReasons;                               //@synthesize disallowPausingReasons=_disallowPausingReasons - In the implementation block
@property (nonatomic,retain) NSSet * disallowResumingReasons;                              //@synthesize disallowResumingReasons=_disallowResumingReasons - In the implementation block
@property (nonatomic,readonly) NSSet * disallowTogglingShuffleReasons; 
@property (nonatomic,readonly) NSSet * disallowTogglingRepeatContextReasons; 
@property (nonatomic,readonly) NSSet * disallowTogglingRepeatTrackReasons; 
@property (nonatomic,retain) NSHashTable * observers;                                      //@synthesize observers=_observers - In the implementation block
@property (nonatomic,retain) id<SPTPlayer> player;                                         //@synthesize player=_player - In the implementation block
@property (nonatomic,retain) SPTStatefulPlayerValue * pauseValue;                          //@synthesize pauseValue=_pauseValue - In the implementation block
@property (nonatomic,retain) SPTStatefulPlayerValue * shufflingContextValue;               //@synthesize shufflingContextValue=_shufflingContextValue - In the implementation block
@property (nonatomic,retain) SPTStatefulPlayerValue * repeatingContextValue;               //@synthesize repeatingContextValue=_repeatingContextValue - In the implementation block
@property (nonatomic,retain) SPTStatefulPlayerValue * repeatingTrackValue;                 //@synthesize repeatingTrackValue=_repeatingTrackValue - In the implementation block
@property (nonatomic,retain) NSMutableSet * disallowPausingReasonsOutOfSync;               //@synthesize disallowPausingReasonsOutOfSync=_disallowPausingReasonsOutOfSync - In the implementation block
@property (nonatomic,retain) NSMutableSet * disallowResumingReasonsOutOfSync;              //@synthesize disallowResumingReasonsOutOfSync=_disallowResumingReasonsOutOfSync - In the implementation block
-(void)setShufflingContext:(char)arg1 ;
-(NSSet *)disallowTogglingRepeatTrackReasons;
-(NSSet *)disallowTogglingRepeatContextReasons;
-(NSSet *)disallowTogglingShuffleReasons;
-(void)setRepeatingContext:(char)arg1 ;
-(void)setRepeatingTrack:(char)arg1 ;
-(void)updatePlaybackControlsForPlayerState:(id)arg1 givenOldPlayerState:(id)arg2 ;
-(SPTStatefulPlayerValue *)pauseValue;
-(char)changeValueLocally:(id)arg1 value:(char)arg2 ;
-(void)setPauseResumeRestrictions;
-(void)notifyPlaybackControlsUpdate;
-(void)rendezVousOn:(id)arg1 ;
-(NSMutableSet *)disallowPausingReasonsOutOfSync;
-(NSMutableSet *)disallowResumingReasonsOutOfSync;
-(SPTStatefulPlayerValue *)shufflingContextValue;
-(SPTStatefulPlayerValue *)repeatingContextValue;
-(SPTStatefulPlayerValue *)repeatingTrackValue;
-(NSSet *)disallowPausingReasons;
-(void)setDisallowPausingReasons:(NSSet *)arg1 ;
-(NSSet *)disallowResumingReasons;
-(void)setDisallowResumingReasons:(NSSet *)arg1 ;
-(void)setDisallowPausingReasonsOutOfSync:(NSMutableSet *)arg1 ;
-(void)setDisallowResumingReasonsOutOfSync:(NSMutableSet *)arg1 ;
-(char)updatePausedState:(char)arg1 shufflingContextState:(char)arg2 repeatingContextState:(char)arg3 repeatingTrackState:(char)arg4 withTimestamp:(double)arg5 ;
-(char)isShufflingContext;
-(char)isRepeatingContext;
-(char)isRepeatingTrack;
-(void)setPauseValue:(SPTStatefulPlayerValue *)arg1 ;
-(void)setShufflingContextValue:(SPTStatefulPlayerValue *)arg1 ;
-(void)setRepeatingContextValue:(SPTStatefulPlayerValue *)arg1 ;
-(void)setRepeatingTrackValue:(SPTStatefulPlayerValue *)arg1 ;
-(id)initWithPlayer:(id)arg1 ;
-(void)setPlayer:(id<SPTPlayer>)arg1 ;
-(char)isPaused;
-(id<SPTPlayer>)player;
-(void)addObserver:(id)arg1 ;
-(void)stop;
-(void)removeObserver:(id)arg1 ;
-(void)setPaused:(char)arg1 ;
-(void)setObservers:(NSHashTable *)arg1 ;
-(NSHashTable *)observers;
-(SPTPlayerState *)playerState;
-(void)setPlayerState:(SPTPlayerState *)arg1 ;
@end

