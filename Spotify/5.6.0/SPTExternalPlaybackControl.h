/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, May 18, 2016 at 11:45:33 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/D2238F36-ED84-40F4-9CB2-8C71CACC8B47/Spotify.app/Spotify
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Spotify/SPTPlayerObserver.h>
#import <Spotify/SPTImageLoaderDelegate.h>
#import <Spotify/SPTRadioObserver.h>
#import <Spotify/SPTCollectionObserver.h>

@protocol SPTPlayer, SPTAudioSessionController, SPRadioManager, CollectionFeature, SPTImageLoaderFactory, SPTGaiaDeviceStateManager, SPTImageLoader;
@class SPTExternalPlaybackStatus, SPTExternalPlaybackNotification, SPPlaylist, SPSession, NSTimer, SPTEntityCancelationToken, SPTEntityService, SPTAutoplayManager, NSArray, NSString;

@interface SPTExternalPlaybackControl : NSObject <SPTPlayerObserver, SPTImageLoaderDelegate, SPTRadioObserver, SPTCollectionObserver> {

	id<SPTPlayer> _player;
	id<SPTAudioSessionController> _audioSessionController;
	unsigned _seekDirection;
	SPTExternalPlaybackStatus* _currentPlaybackStatus;
	SPTExternalPlaybackNotification* _currentStatusMessage;
	id<SPRadioManager> _radio;
	id<CollectionFeature> _collectionFeature;
	SPPlaylist* _starredPlaylist;
	SPSession* _session;
	NSTimer* _seekTimer;
	SPTEntityCancelationToken* _artistTask;
	SPTEntityCancelationToken* _albumTask;
	id<SPTImageLoaderFactory> _imageLoaderFactory;
	id<SPTGaiaDeviceStateManager> _gaiaDeviceStateManager;
	id<SPTImageLoader> _imageLoader;
	/*^block*/id _imageLoadCallback;
	SPTEntityService* _entityService;
	SPTAutoplayManager* _autoplayManager;
	NSArray* _messageQueue;

}

@property (nonatomic,retain) id<SPTPlayer> player;                                                             //@synthesize player=_player - In the implementation block
@property (nonatomic,retain) id<SPTAudioSessionController> audioSessionController;                             //@synthesize audioSessionController=_audioSessionController - In the implementation block
@property (assign,nonatomic) unsigned seekDirection;                                                           //@synthesize seekDirection=_seekDirection - In the implementation block
@property (nonatomic,retain) SPTExternalPlaybackStatus * currentPlaybackStatus;                                //@synthesize currentPlaybackStatus=_currentPlaybackStatus - In the implementation block
@property (nonatomic,retain) SPTExternalPlaybackNotification * currentStatusMessage;                           //@synthesize currentStatusMessage=_currentStatusMessage - In the implementation block
@property (getter=isYourLibraryFeatureEnabled,nonatomic,readonly) char yourLibraryFeatureEnabled; 
@property (nonatomic,retain) id<SPRadioManager> radio;                                                         //@synthesize radio=_radio - In the implementation block
@property (assign,nonatomic,__weak) id<CollectionFeature> collectionFeature;                                   //@synthesize collectionFeature=_collectionFeature - In the implementation block
@property (nonatomic,retain) SPPlaylist * starredPlaylist;                                                     //@synthesize starredPlaylist=_starredPlaylist - In the implementation block
@property (assign,nonatomic,__weak) SPSession * session;                                                       //@synthesize session=_session - In the implementation block
@property (nonatomic,retain) NSTimer * seekTimer;                                                              //@synthesize seekTimer=_seekTimer - In the implementation block
@property (nonatomic,retain) SPTEntityCancelationToken * artistTask;                                           //@synthesize artistTask=_artistTask - In the implementation block
@property (nonatomic,retain) SPTEntityCancelationToken * albumTask;                                            //@synthesize albumTask=_albumTask - In the implementation block
@property (nonatomic,retain) id<SPTImageLoaderFactory> imageLoaderFactory;                                     //@synthesize imageLoaderFactory=_imageLoaderFactory - In the implementation block
@property (nonatomic,retain) id<SPTGaiaDeviceStateManager> gaiaDeviceStateManager;                             //@synthesize gaiaDeviceStateManager=_gaiaDeviceStateManager - In the implementation block
@property (nonatomic,retain) id<SPTImageLoader> imageLoader;                                                   //@synthesize imageLoader=_imageLoader - In the implementation block
@property (nonatomic,copy) id imageLoadCallback;                                                               //@synthesize imageLoadCallback=_imageLoadCallback - In the implementation block
@property (nonatomic,retain) SPTEntityService * entityService;                                                 //@synthesize entityService=_entityService - In the implementation block
@property (nonatomic,retain) SPTAutoplayManager * autoplayManager;                                             //@synthesize autoplayManager=_autoplayManager - In the implementation block
@property (nonatomic,retain) NSArray * messageQueue;                                                           //@synthesize messageQueue=_messageQueue - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)playIndexOrNilForItem:(id)arg1 withIndex:(unsigned)arg2 ;
-(id<SPTImageLoader>)imageLoader;
-(void)imageLoader:(id)arg1 didLoadImage:(id)arg2 forURL:(id)arg3 loadTime:(double)arg4 context:(id)arg5 ;
-(void)imageLoader:(id)arg1 didFailToLoadImageForURL:(id)arg2 error:(id)arg3 context:(id)arg4 ;
-(void)setImageLoader:(id<SPTImageLoader>)arg1 ;
-(SPTEntityService *)entityService;
-(void)setGaiaDeviceStateManager:(id<SPTGaiaDeviceStateManager>)arg1 ;
-(id<SPTGaiaDeviceStateManager>)gaiaDeviceStateManager;
-(void)player:(id)arg1 stateDidChange:(id)arg2 ;
-(id<SPTAudioSessionController>)audioSessionController;
-(void)setAudioSessionController:(id<SPTAudioSessionController>)arg1 ;
-(id<SPTImageLoaderFactory>)imageLoaderFactory;
-(void)setImageLoaderFactory:(id<SPTImageLoaderFactory>)arg1 ;
-(void)setCollectionFeature:(id<CollectionFeature>)arg1 ;
-(void)collectionDidChange:(id)arg1 ;
-(id<SPRadioManager>)radio;
-(void)setEntityService:(SPTEntityService *)arg1 ;
-(SPTExternalPlaybackStatus *)currentPlaybackStatus;
-(void)requestCoverArt:(/*^block*/id)arg1 ;
-(void)setRepeated:(char)arg1 ;
-(void)playItem:(id)arg1 withParent:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)thumbDown;
-(void)setTrackRepeated:(char)arg1 ;
-(void)thumbUp;
-(void)setShuffled:(char)arg1 ;
-(void)performSkipNextCommand;
-(void)performSkipPreviousCommand;
-(void)beginSeekingInDirection:(unsigned)arg1 ;
-(void)stopSeeking;
-(void)playIndex:(unsigned)arg1 ofItem:(id)arg2 shufflePlay:(char)arg3 completionHandler:(/*^block*/id)arg4 ;
-(char)isYourLibraryFeatureEnabled;
-(SPPlaylist *)starredPlaylist;
-(void)setStarredPlaylist:(SPPlaylist *)arg1 ;
-(void)radioManager:(id)arg1 thumbsFeedbackChangedForTrackURL:(id)arg2 trackFeedback:(int)arg3 ;
-(id)initWithRadioFeature:(id)arg1 collectionFeature:(id)arg2 player:(id)arg3 session:(id)arg4 audioSessionController:(id)arg5 imageLoaderFactory:(id)arg6 entityService:(id)arg7 gaiaDeviceStateManager:(id)arg8 ;
-(void)setupAsCollectionObserver;
-(void)setCurrentStatusMessage:(SPTExternalPlaybackNotification *)arg1 ;
-(void)addNewMessage:(id)arg1 ;
-(id)metadataForContext:(id)arg1 withItem:(id)arg2 andPlayIndex:(int)arg3 ;
-(void)playIndex:(id)arg1 ofPlayerContext:(id)arg2 shufflePlay:(char)arg3 withMetadata:(id)arg4 completionHandler:(/*^block*/id)arg5 ;
-(void)playIndex:(id)arg1 ofItemWithURI:(id)arg2 shufflePlay:(char)arg3 withMetadata:(id)arg4 completionHandler:(/*^block*/id)arg5 ;
-(void)decorateContext:(id)arg1 withMetadata:(id)arg2 ;
-(void)setCurrentPlaybackStatus:(SPTExternalPlaybackStatus *)arg1 ;
-(SPTEntityCancelationToken *)artistTask;
-(void)setAlbumTask:(SPTEntityCancelationToken *)arg1 ;
-(void)setArtistTask:(SPTEntityCancelationToken *)arg1 ;
-(id)doPause;
-(void)thumb:(char)arg1 ;
-(void)setSeekDirection:(unsigned)arg1 ;
-(void)applySeek:(id)arg1 ;
-(void)setSeekTimer:(NSTimer *)arg1 ;
-(NSTimer *)seekTimer;
-(unsigned)seekDirection;
-(void)setState:(id)arg1 alert:(id)arg2 withCallback:(/*^block*/id)arg3 ;
-(void)player:(id)arg1 stateDidChange:(id)arg2 force:(char)arg3 ;
-(char)stateEqualIgnoringPosition:(id)arg1 toState:(id)arg2 ;
-(void)dequeueAlertMessageAndThen:(/*^block*/id)arg1 ;
-(SPTExternalPlaybackNotification *)currentStatusMessage;
-(SPTAutoplayManager *)autoplayManager;
-(void)requestCoverArt:(float)arg1 imageHeight:(float)arg2 delegate:(/*^block*/id)arg3 ;
-(void)setImageLoadCallback:(id)arg1 ;
-(id)imageLoadCallback;
-(void)startRadioFromCurrentTrack;
-(void)fetchRelatedAlbumsFromCurrentTrack:(/*^block*/id)arg1 ;
-(void)setPaused:(char)arg1 finally:(/*^block*/id)arg2 ;
-(void)removeAsCollectionObserver;
-(void)autoplayWithFallback:(id)arg1 withSuccess:(/*^block*/id)arg2 ;
-(SPTEntityCancelationToken *)albumTask;
-(void)setAutoplayManager:(SPTAutoplayManager *)arg1 ;
-(char)isSeeking;
-(SPSession *)session;
-(void)setPlayer:(id<SPTPlayer>)arg1 ;
-(id<SPTPlayer>)player;
-(void)dealloc;
-(void)setPaused:(char)arg1 ;
-(void)setMessageQueue:(NSArray *)arg1 ;
-(NSArray *)messageQueue;
-(void)setSession:(SPSession *)arg1 ;
-(id)doResume;
-(void)setSaved:(char)arg1 ;
-(id<CollectionFeature>)collectionFeature;
-(void)setRadio:(id<SPRadioManager>)arg1 ;
@end

