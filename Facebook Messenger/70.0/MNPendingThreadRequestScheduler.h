/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 14, 2016 at 2:22:10 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/B4BDDC65-4400-4BC5-A974-2245FB5B0846/MessengerCompressed-iphoneos-arm64,iphoneos-armv7.app/MessengerCompressed-iphoneos-arm64,iphoneos-armv7
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <MessengerCompressed-iphoneos-arm64,iphoneos-armv7/MNPendingThreadRequestScheduling.h>

@protocol MNPendingThreadCreateWithMessageAPIRequester, MNPendingThreadCreateAsGroupAPIRequester, MNMessageSendScheduling, FBClock, MNPendingThreadRequestListening, OS_dispatch_queue;
@class MNThreadCreatorExtensionController, MNPendingThreadStore, NSObject, NSString;

@interface MNPendingThreadRequestScheduler : NSObject <MNPendingThreadRequestScheduling> {

	id<MNPendingThreadCreateWithMessageAPIRequester> _createWithMessageAPIRequester;
	id<MNPendingThreadCreateAsGroupAPIRequester> _createAsGroupAPIRequester;
	MNThreadCreatorExtensionController* _threadCreatorExtensionController;
	id<MNMessageSendScheduling> _messageSendScheduler;
	char _shouldCreateCanonicalThreadsImplicitly;
	MNPendingThreadStore* _pendingThreadStore;
	id<FBClock> _clock;
	id<MNPendingThreadRequestListening> _listener;
	NSObject*<OS_dispatch_queue> _queue;

}

@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)cancelThreadCreationWithOfflineId:(id)arg1 ;
-(void)sendMessage:(id)arg1 toPendingThreadWithOfflineId:(id)arg2 ;
-(void)cancelMessageSendWithOfflineThreadingId:(id)arg1 fromPendingThreadWithOfflineId:(id)arg2 ;
-(void)retryThreadCreationWithOfflineId:(id)arg1 messageOfflineThreadingId:(id)arg2 ;
-(void)retryThreadCreationWithOfflineId:(id)arg1 ;
-(void)createCanonicalThreadWithOtherUserId:(id)arg1 message:(id)arg2 ;
-(void)createGroupThreadWithOfflineId:(id)arg1 message:(id)arg2 invitees:(id)arg3 useExistingGroup:(char)arg4 ;
-(void)createGroupThreadWithOfflineId:(id)arg1 message:(id)arg2 inviteeByUserId:(id)arg3 useExistingGroup:(char)arg4 ;
-(void)threadSummaryDidSync:(id)arg1 withMessageOfflineThreadingIds:(id)arg2 ;
-(id)initWithCreateWithMessageAPIRequester:(id)arg1 createAsGroupAPIRequester:(id)arg2 threadCreatorExtensionController:(id)arg3 messageSendScheduler:(id)arg4 createCanonicalThreadsImplicitly:(char)arg5 pendingThreadStore:(id)arg6 clock:(id)arg7 listener:(id)arg8 queue:(id)arg9 ;
-(void)createGroupThreadWithOfflineId:(id)arg1 name:(id)arg2 profileImage:(id)arg3 inviteeByUserId:(id)arg4 shouldPinGroup:(char)arg5 ;
-(char)_isTrackingPendingThreadWithOfflineId:(id)arg1 ;
-(void)_createThreadForPendingThread:(id)arg1 message:(id)arg2 ;
-(void)_createGroupThreadWithOfflineId:(id)arg1 message:(id)arg2 inviteeByUserId:(id)arg3 inviteeByPhoneNumber:(id)arg4 useExistingGroup:(char)arg5 ;
-(void)_retryThreadCreationWithOfflineId:(id)arg1 messageOfflineThreadingId:(id)arg2 ;
-(void)_didThreadCreationSucceedWithSummary:(id)arg1 messageOfflineThreadingId:(id)arg2 forPendingThreadWithOfflineId:(id)arg3 ;
-(void)_sendThreadCreationRequestForPendingThread:(id)arg1 ;
-(void)_didThreadCreationFailWithError:(id)arg1 forPendingThreadWithOfflineId:(id)arg2 ;
@end

