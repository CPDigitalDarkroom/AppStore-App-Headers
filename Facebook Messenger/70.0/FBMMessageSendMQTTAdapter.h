/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 14, 2016 at 2:22:02 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/B4BDDC65-4400-4BC5-A974-2245FB5B0846/MessengerCompressed-iphoneos-arm64,iphoneos-armv7.app/MessengerCompressed-iphoneos-arm64,iphoneos-armv7
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <MessengerCompressed-iphoneos-arm64,iphoneos-armv7/MNMessageSendMQTTAdapting.h>

@protocol FBMAppProperties, MNAuthenticationManager, FBMMessageSendLegacyMQTTResponseDelegate;
@class FBMMQTTSender, FBMMQTTManager, FBMNetworkProtocolController, FBMSendEventLogger, FBMSendLatencyLogger, FBUserSession, NSString;

@interface FBMMessageSendMQTTAdapter : NSObject <MNMessageSendMQTTAdapting> {

	FBMMQTTSender* _mqttSender;
	FBMMQTTManager* _mqttManager;
	FBMNetworkProtocolController* _networkProtocolController;
	id<FBMAppProperties> _appProperties;
	id<MNAuthenticationManager> _authManager;
	FBMSendEventLogger* _sendEventLogger;
	FBMSendLatencyLogger* _sendLatencyLogger;
	id<FBMMessageSendLegacyMQTTResponseDelegate> _delegate;
	FBUserSession* _session;

}

@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id)initWithMQTTSender:(id)arg1 mqttManager:(id)arg2 networkProtocolController:(id)arg3 appProperties:(id)arg4 authManager:(id)arg5 sendEventLogger:(id)arg6 sendLatencyLogger:(id)arg7 delegate:(id)arg8 userSession:(id)arg9 ;
-(void)_handlePublishedMQTTMessage:(id)arg1 publishBlock:(/*^block*/id)arg2 ;
-(void)_handleSucceededMQTTMessage:(id)arg1 withLatency:(id)arg2 successBlock:(/*^block*/id)arg3 ;
-(void)_handleFailedMQTTMessage:(id)arg1 error:(id)arg2 failureBlock:(/*^block*/id)arg3 ;
-(void)_handlePublishedMQTTMessageBatch:(id)arg1 publishBlock:(/*^block*/id)arg2 ;
-(void)_handleRespondedMQTTMessageBatch:(id)arg1 results:(id)arg2 responseBlock:(/*^block*/id)arg3 ;
-(void)sendMessageViaMQTT:(id)arg1 preparedAttachment:(id)arg2 callbackQueue:(id)arg3 publishBlock:(/*^block*/id)arg4 successBlock:(/*^block*/id)arg5 failureBlock:(/*^block*/id)arg6 ;
-(void)sendMessageBatchViaMQTT:(id)arg1 callbackQueue:(id)arg2 publishBlock:(/*^block*/id)arg3 responseBlock:(/*^block*/id)arg4 ;
-(char)canSendMessageViaMQTT:(id)arg1 ;
-(char)isRetriableMQTTError:(id)arg1 ;
-(char)mqttStatusEligibleForSend;
-(char)isMessageBatchSendingSupported;
@end

