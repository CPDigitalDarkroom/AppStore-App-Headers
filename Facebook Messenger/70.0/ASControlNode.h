/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 14, 2016 at 2:22:44 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/B4BDDC65-4400-4BC5-A974-2245FB5B0846/MessengerCompressed-iphoneos-arm64,iphoneos-armv7.app/MessengerCompressed-iphoneos-arm64,iphoneos-armv7
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <MessengerCompressed-iphoneos-arm64,iphoneos-armv7/ASDisplayNode.h>

@class NSMutableDictionary;

@interface ASControlNode : ASDisplayNode {

	char _enabled;
	char _highlighted;
	char _tracking;
	char _touchInside;
	NSMutableDictionary* _controlEventDispatchTable;

}

@property (assign,getter=isHighlighted,nonatomic) char highlighted;              //@synthesize highlighted=_highlighted - In the implementation block
@property (assign,getter=isTracking,nonatomic) char tracking;                    //@synthesize tracking=_tracking - In the implementation block
@property (assign,getter=isTouchInside,nonatomic) char touchInside;              //@synthesize touchInside=_touchInside - In the implementation block
@property (assign,getter=isEnabled,nonatomic) char enabled;                      //@synthesize enabled=_enabled - In the implementation block
-(void)sendActionsForControlEvents:(unsigned)arg1 withEvent:(id)arg2 ;
-(void)addTarget:(id)arg1 action:(SEL)arg2 forControlEvents:(unsigned)arg3 ;
-(id)init;
-(char)gestureRecognizerShouldBegin:(id)arg1 ;
-(void)touchesBegan:(id)arg1 withEvent:(id)arg2 ;
-(void)touchesMoved:(id)arg1 withEvent:(id)arg2 ;
-(void)touchesEnded:(id)arg1 withEvent:(id)arg2 ;
-(void)touchesCancelled:(id)arg1 withEvent:(id)arg2 ;
-(void)setEnabled:(char)arg1 ;
-(char)isEnabled;
-(char)isTracking;
-(void)setHighlighted:(char)arg1 ;
-(char)isHighlighted;
-(void)setTracking:(char)arg1 ;
-(void)cancelTrackingWithEvent:(id)arg1 ;
-(char)beginTrackingWithTouch:(id)arg1 withEvent:(id)arg2 ;
-(char)continueTrackingWithTouch:(id)arg1 withEvent:(id)arg2 ;
-(char)isTouchInside;
-(void)endTrackingWithTouch:(id)arg1 withEvent:(id)arg2 ;
-(void)removeTarget:(id)arg1 action:(SEL)arg2 forControlEvents:(unsigned)arg3 ;
-(id)allTargets;
-(id)actionsForTarget:(id)arg1 forControlEvent:(unsigned)arg2 ;
-(void)setTouchInside:(char)arg1 ;
@end

