/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 14, 2016 at 2:22:18 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/B4BDDC65-4400-4BC5-A974-2245FB5B0846/MessengerCompressed-iphoneos-arm64,iphoneos-armv7.app/MessengerCompressed-iphoneos-arm64,iphoneos-armv7
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <MessengerCompressed-iphoneos-arm64,iphoneos-armv7/MessengerCompressed-iphoneos-arm64,iphoneos-armv7-Structs.h>
#import <MessengerCompressed-iphoneos-arm64,iphoneos-armv7/FBNetworkerRequestDelegate.h>
#import <MessengerCompressed-iphoneos-arm64,iphoneos-armv7/FBVideoDownloaderThrottlerDelegate.h>

@protocol FBBlockDataCache, OS_dispatch_queue, FBNetworkDispatch, FBVideoDownloaderDelegate;
@class NSObject, FBClientProxyLogger, FBScenePath, FBVideoPrefetchManager, FBVideoDownloaderThrottler, NSMutableData, NSURL, NSString, NSMutableArray, FBNetworkerRangeRequest;

@interface FBVideoDownloader : NSObject <FBNetworkerRequestDelegate, FBVideoDownloaderThrottlerDelegate> {

	id<FBBlockDataCache> _blockDataCache;
	NSObject*<OS_dispatch_queue> _queue;
	id<FBNetworkDispatch> _networker;
	NSObject*<OS_dispatch_queue> _performer;
	FBClientProxyLogger* _logger;
	unsigned _offset;
	FBScenePath* _scenePath;
	FBScenePath* _originalScenePath;
	char _isPlaying;
	int _priority;
	FBVideoPrefetchManager* _prefetchManager;
	double _requestStartTime;
	unsigned _bytesDownloaded;
	unsigned _requestStartOffset;
	unsigned _requestLastOffsetWithThrottling;
	FBVideoDownloaderThrottler* _throttler;
	NSMutableData* _bufferedDataForBlock;
	unsigned _blockSize;
	unsigned _bufferedDataBlockIndex;
	char _cancelNetworkOnDirectCancel;
	char _truncateCacheOnContinuation;
	unsigned _cancelTimeout;
	char _prefetchedFirstChunk;
	double _shutdownRequestTimestamp;
	SCD_Struct_FB109 _videoBasicData;
	char _limitRequestLength;
	char _enableCDNCacheStatusQuery;
	id<FBVideoDownloaderDelegate> _delegate;
	NSURL* _URL;
	NSURL* _prefetchURL;
	NSString* _dataKey;
	NSString* _videoID;
	NSMutableArray* _listeners;
	FBNetworkerRangeRequest* _request;
	unsigned _totalLength;

}

@property (nonatomic,readonly) NSMutableArray * listeners;                                  //@synthesize listeners=_listeners - In the implementation block
@property (nonatomic,retain) FBNetworkerRangeRequest * request;                             //@synthesize request=_request - In the implementation block
@property (assign,nonatomic) unsigned totalLength;                                          //@synthesize totalLength=_totalLength - In the implementation block
@property (assign,nonatomic,__weak) id<FBVideoDownloaderDelegate> delegate;                 //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,readonly) NSURL * URL;                                                 //@synthesize URL=_URL - In the implementation block
@property (nonatomic,readonly) NSURL * prefetchURL;                                         //@synthesize prefetchURL=_prefetchURL - In the implementation block
@property (nonatomic,copy,readonly) NSString * dataKey;                                     //@synthesize dataKey=_dataKey - In the implementation block
@property (nonatomic,copy,readonly) NSString * videoID;                                     //@synthesize videoID=_videoID - In the implementation block
@property (assign,nonatomic) char enableCDNCacheStatusQuery;                                //@synthesize enableCDNCacheStatusQuery=_enableCDNCacheStatusQuery - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (getter=isCurrentlyDownloading,nonatomic,readonly) char downloading; 
@property (nonatomic,readonly) unsigned totalVideoByteLength; 
@property (nonatomic,readonly) unsigned bytesDownloadedInLastRequest; 
-(void)networkerRequestDidStart:(id)arg1 ;
-(void)networkerRequest:(id)arg1 didReceiveResponse:(id)arg2 ;
-(void)networkerRequest:(id)arg1 didReceiveData:(id)arg2 ;
-(void)networkerRequest:(id)arg1 didSucceed:(id)arg2 status:(id)arg3 ;
-(void)networkerRequest:(id)arg1 didFail:(id)arg2 status:(id)arg3 ;
-(void)networkerRequest:(id)arg1 didCancelWithStatus:(id)arg2 ;
-(NSString *)videoID;
-(void)markRequestAsPlaying:(char)arg1 ;
-(void)throttleTrafficWithVideoThrottler:(id)arg1 ;
-(void)assignThrottlingDelegate:(id)arg1 ;
-(void)playRequested;
-(id)initWithURL:(id)arg1 prefetchURL:(id)arg2 dataKey:(id)arg3 videoID:(id)arg4 blockDataCache:(id)arg5 queue:(id)arg6 networker:(id)arg7 logger:(id)arg8 scenePath:(id)arg9 priority:(int)arg10 experimentManager:(id)arg11 prefetchManager:(id)arg12 disableThrottling:(char)arg13 limitRequestLength:(char)arg14 ;
-(void)setEnableCDNCacheStatusQuery:(char)arg1 ;
-(void)updateScenePath:(id)arg1 priority:(int)arg2 ;
-(void)addRangedDataListener:(id)arg1 ;
-(void)removeRangedDataListener:(id)arg1 cancelImmediately:(char)arg2 ;
-(void)_refreshOutgoingNetworkRequestRestartIfNeeded;
-(void)_startShutdownWithError:(id)arg1 delayNetworkCancel:(char)arg2 ;
-(id)videoDataKeyForListener:(id)arg1 ;
-(void)_updateIfEmptyListener:(id)arg1 ;
-(id)videoURLForListener:(id)arg1 ;
-(void)_processVideoLength:(unsigned)arg1 ;
-(void)_handleBufferingToCache:(id)arg1 offset:(unsigned)arg2 ;
-(void)_flushBufferedDataToCacheAndReset:(char)arg1 ;
-(id)_getPrefetchDataAndPossiblyCancelInProgressPrefetchWithListener:(id)arg1 ;
-(id)_readDataFromCache:(NSRange)arg1 expectedContentLength:(unsigned)arg2 dataKey:(id)arg3 ;
-(unsigned)totalLengthForListener:(id)arg1 ;
-(void)cancelGracefullyAndKeepDownloader;
-(unsigned)calculateMinimalOffsetToFetch;
-(unsigned)_truncateOffsetForAlignment:(unsigned)arg1 ;
-(void)resetRequestAndFlushBufferIfNeededWithOffset:(unsigned)arg1 ;
-(unsigned)calculateThrottlingOffsetForOffset:(unsigned)arg1 ;
-(id)generateNewRangeRequestWithURL:(id)arg1 offset:(unsigned)arg2 length:(unsigned)arg3 ;
-(unsigned)_calculateMaximumOffsetToFetch;
-(id)videoDataKey;
-(BOOL)shouldForwardDataToListener:(id)arg1 ;
-(void)_shutdownDownloaderWithError:(id)arg1 ;
-(id)_readDataFromBuffer:(NSRange)arg1 dataKey:(id)arg2 ;
-(void)_forwardDataToAllListeners:(id)arg1 range:(NSRange)arg2 ;
-(void)_redirectURLIfPossible;
-(void)_finishListeners;
-(BOOL)shouldRefreshPartialRequest;
-(void)refreshOutgoingNetworkRequestRestartIfNeeded;
-(void)cancelWithoutRedirect;
-(NSURL *)prefetchURL;
-(char)enableCDNCacheStatusQuery;
-(char)isCurrentlyDownloading;
-(unsigned)totalVideoByteLength;
-(void)pauseDownloadFromThrottler:(id)arg1 ;
-(void)resumeDownloadFromThrottler:(id)arg1 ;
-(unsigned)bytesDownloadedInLastRequest;
-(id)videoURL;
-(void)setDelegate:(id<FBVideoDownloaderDelegate>)arg1 ;
-(id<FBVideoDownloaderDelegate>)delegate;
-(FBNetworkerRangeRequest *)request;
-(NSURL *)URL;
-(void)setTotalLength:(unsigned)arg1 ;
-(unsigned)totalLength;
-(NSMutableArray *)listeners;
-(void)setRequest:(FBNetworkerRangeRequest *)arg1 ;
-(NSString *)dataKey;
@end

