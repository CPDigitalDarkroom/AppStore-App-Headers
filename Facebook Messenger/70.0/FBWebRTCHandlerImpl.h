/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 14, 2016 at 2:21:55 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/B4BDDC65-4400-4BC5-A974-2245FB5B0846/MessengerCompressed-iphoneos-arm64,iphoneos-armv7.app/MessengerCompressed-iphoneos-arm64,iphoneos-armv7
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <MessengerCompressed-iphoneos-arm64,iphoneos-armv7/MessengerCompressed-iphoneos-arm64,iphoneos-armv7-Structs.h>
#import <MessengerCompressed-iphoneos-arm64,iphoneos-armv7/FBWebRTCCallMonitorDelegate.h>
#import <MessengerCompressed-iphoneos-arm64,iphoneos-armv7/FBSessionClassProvidable.h>
#import <MessengerCompressed-iphoneos-arm64,iphoneos-armv7/FBWebRTCHandler.h>

@protocol MNAuthenticationManager;
@class FBWebRTCDevice, WebRTCLazyEngine, FBMMQTTSender, NSNotificationCenter, FBAnalytics, MNUserStore, VOIPConfigurationChecker, MNUserSettings, FBProviderMapData, MNConfigManager, FBWebRTCNetworkAvailability, FBUserSession, NSString;

@interface FBWebRTCHandlerImpl : NSObject <FBWebRTCCallMonitorDelegate, FBSessionClassProvidable, FBWebRTCHandler> {

	FBWebRTCConfigWrapper* _configWrapper;
	FBWebRTCMessageWrapper* _messageWrapper;
	FBWebRTCUIWrapper* _uiWrapper;
	FBWebRTCLogWrapper* _logWrapper;
	WebRTCLazyEngine* _lazyEngine;
	FBMMQTTSender* _mqttSender;
	NSNotificationCenter* _notificationCenter;
	id<MNAuthenticationManager> _authManager;
	FBAnalytics* _analytics;
	MNUserStore* _userStore;
	VOIPConfigurationChecker* _configChecker;
	MNUserSettings* _userSettings;
	FBProviderMapData* _providerMap;
	MNConfigManager* _configManager;
	FBWebRTCNetworkAvailability* _networkAvailability;
	FBUserSession* _session;
	char _persistentConnectionEnabled;
	FBWebRTCCallMonitor* _callMonitor;
	long long _currentCallId;
	double _currentCallStartTime;
	char _shouldStopEngine;
	char _engineShouldRun;
	FBWebRTCDevice* device;

}

@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (getter=isVoipEnabled,nonatomic,readonly) char voipEnabled; 
@property (getter=isVoipBlockedByCountry,nonatomic,readonly) char voipBlockedByCountry; 
@property (getter=isVideoCallingEnabled,nonatomic,readonly) char videoCallingEnabled; 
@property (assign,nonatomic) FBWebRTCDevice * device; 
-(id)initWithProviderMapData:(id)arg1 ;
-(void)startWithGKCheck;
-(void)invalidateUserSession;
-(char)isVoipEnabled;
-(char)isVoipBlockedByCountry;
-(char)isVideoCallingEnabled;
-(id)initWithMQTTSender:(id)arg1 notificationCenter:(id)arg2 authManager:(id)arg3 analytics:(id)arg4 userStore:(id)arg5 userSettings:(id)arg6 networkAvailability:(id)arg7 configManager:(id)arg8 userSession:(id)arg9 providerMap:(id)arg10 ;
-(void)shutdownWebRTCEngine;
-(void)startUpWebRTCEngine;
-(char)isInACall;
-(void)callDidStart:(long long)arg1 ;
-(void)callDidEnd:(long long)arg1 dataSent:(long long)arg2 dataReceived:(long long)arg3 ;
-(void)dealloc;
-(FBWebRTCDevice *)device;
-(void)setDevice:(FBWebRTCDevice *)arg1 ;
@end

