/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 14, 2016 at 2:21:58 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/B4BDDC65-4400-4BC5-A974-2245FB5B0846/MessengerCompressed-iphoneos-arm64,iphoneos-armv7.app/MessengerCompressed-iphoneos-arm64,iphoneos-armv7
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <MessengerCompressed-iphoneos-arm64,iphoneos-armv7/MessengerCompressed-iphoneos-arm64,iphoneos-armv7-Structs.h>
#import <UIKit/UIViewController.h>
#import <MessengerCompressed-iphoneos-arm64,iphoneos-armv7/FBCaptureManagerDelegate.h>
#import <MessengerCompressed-iphoneos-arm64,iphoneos-armv7/MNCameraViewDelegate.h>
#import <MessengerCompressed-iphoneos-arm64,iphoneos-armv7/MNCameraPreviewViewControllerDelegate.h>
#import <MessengerCompressed-iphoneos-arm64,iphoneos-armv7/MNPermissionsViewControllerDelegate.h>
#import <UIKit/UIAlertViewDelegate.h>

@protocol MNModalPresentation, MNApplicationRootViewControllerGetting, MNCameraSettingsInterface, MNCameraDeviceCycling, FBOrientationTracking, MNCameraViewControllerDelegate;
@class FBCaptureManager, MNSoundController, NSTimer, FBUserSession, MNVideoAnalyticsLogger, MNVideoRecordEventListenerAnnouncer, MNSelfieCamLoadPerfLogger, MNSelfieCamLoadEventListenerAnnouncer, MNSelfieCamPhotoEditingExperimentContext, MNCameraPermissionsLogger, MNPermissionsViewController, MNPermissionsWrapperView, _MNCameraViewControllerPhotoCapture, _MNCameraViewControllerVideoCapture, MNCameraPreviewViewController, FBCameraRollWriter, NSString, MNCameraView;

@interface MNCameraViewController : UIViewController <FBCaptureManagerDelegate, MNCameraViewDelegate, MNCameraPreviewViewControllerDelegate, MNPermissionsViewControllerDelegate, UIAlertViewDelegate> {

	FBCaptureManager* _captureManager;
	id<MNModalPresentation> _navigationCoordinator;
	id<MNApplicationRootViewControllerGetting> _applicationHandler;
	MNSoundController* _soundController;
	NSTimer* _startRecordingTimer;
	char _isObservingOrientationNotifications;
	FBUserSession* _userSession;
	char _reachedMaxRecordingLimit;
	MNVideoAnalyticsLogger* _videoAnalyticsLogger;
	MNVideoRecordEventListenerAnnouncer* _videoRecordEventAnnouncer;
	MNSelfieCamLoadPerfLogger* _selfieCamLoadPerfLogger;
	MNSelfieCamLoadEventListenerAnnouncer* _selfieCamLoadEventAnnouncer;
	MNSelfieCamPhotoEditingExperimentContext* _selfieCamPhotoEditingExperimentContext;
	NSTimer* _videoTimer;
	id<MNCameraSettingsInterface> _cameraSettings;
	id<MNCameraDeviceCycling> _cameraCycler;
	id<FBOrientationTracking> _orientationTracker;
	char _sendOrPreviewIsWaitingOnAssetWrite;
	unsigned _appearanceState;
	MNCameraPermissionsLogger* _permissionsLogger;
	MNPermissionsViewController* _permissionsViewController;
	MNPermissionsWrapperView* _permissionsWrapperView;
	_MNCameraViewControllerPhotoCapture* _photoCapture;
	_MNCameraViewControllerVideoCapture* _videoCapture;
	MNCameraPreviewViewController* _previewViewController;
	FBCameraRollWriter* _cameraRollWriter;
	int _permissionCheckStatus;
	int _flashMode;
	NSString* _applicationName;
	char _shouldAllowVideoCapture;
	char _allowTapToEnhance;
	id<MNCameraViewControllerDelegate> _delegate;
	MNCameraView* _cameraView;

}

@property (nonatomic,retain) MNCameraView * cameraView;                                       //@synthesize cameraView=_cameraView - In the implementation block
@property (assign,nonatomic,__weak) id<MNCameraViewControllerDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (assign,nonatomic) char allowTapToEnhance;                                          //@synthesize allowTapToEnhance=_allowTapToEnhance - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id)addFilterToPhoto:(id)arg1 ;
-(void)captureManager:(id)arg1 didCaptureImage:(id)arg2 metadata:(id)arg3 cameraPosition:(int)arg4 orientation:(int)arg5 ;
-(void)captureManager:(id)arg1 didCaptureVideo:(id)arg2 thumbnail:(id)arg3 cameraPosition:(int)arg4 ;
-(void)captureManager:(id)arg1 didChangeCapturePositionTo:(int)arg2 ;
-(void)captureManagerDidFailToCaptureImage:(id)arg1 ;
-(void)captureManagerDidFailToCaptureVideo:(id)arg1 ;
-(void)captureManagerDidStartCaptureVideo:(id)arg1 ;
-(void)captureManagerPreviewDidLoad:(id)arg1 ;
-(void)captureManagerSessionDidStart:(id)arg1 ;
-(void)_startObservingIfNeeded;
-(void)_stopObservingIfNeeded;
-(void)_handleOrientationDidChange:(id)arg1 ;
-(void)_updateViewForCurrentOrientation;
-(id)initWithSoundController:(id)arg1 captureManager:(id)arg2 cameraSettings:(id)arg3 videoAnalyticsLogger:(id)arg4 selfieCamLoadPerfLogger:(id)arg5 userSession:(id)arg6 navigationCoordinator:(id)arg7 applicationHandler:(id)arg8 applicationName:(id)arg9 cameraCycler:(id)arg10 orientationTracker:(id)arg11 shouldAllowVideoCapture:(char)arg12 ;
-(void)permissionsViewControllerDidPressDismissButton:(id)arg1 ;
-(void)permissionsViewControllerDidPressRequest:(id)arg1 ;
-(id)currentCaptureDevice;
-(void)switchCaptureDevice:(id)arg1 ;
-(void)_initPermissionsViewControllerIfNecessary;
-(void)_startRecording;
-(void)cameraViewDidSelectSwitchCamera:(id)arg1 ;
-(void)cameraViewDidSelectCaptureImage:(id)arg1 ;
-(void)cameraViewDidStartRecording:(id)arg1 ;
-(void)cameraViewDidStopRecording:(id)arg1 duration:(double)arg2 ;
-(void)cameraViewDidCancelRecording:(id)arg1 duration:(double)arg2 ;
-(void)cameraViewDidPressCloseButton:(id)arg1 ;
-(void)cameraViewDidPresentMicrophonePermissionsWarning:(id)arg1 ;
-(void)cameraView:(id)arg1 didTapAtPoint:(CGPoint)arg2 ;
-(void)cameraViewDidUpdateFlashMode:(int)arg1 ;
-(void)cameraPreviewViewDidPressRetakeButton:(id)arg1 ;
-(void)cameraPreviewViewDidPressSendButton:(id)arg1 ;
-(void)_initPreviewViewControllerIfNecessary;
-(void)_requestPermissions;
-(void)_startCaptureManagerSession;
-(void)setCameraViewUsesFullscreenLayout:(char)arg1 ;
-(void)_updatePreviewViewControllerIsFullScreen:(char)arg1 ;
-(void)setCameraViewFullScreenTransitionProgress:(float)arg1 ;
-(void)_enterCaptureMode;
-(void)setAllowTapToEnhance:(char)arg1 ;
-(void)_showSaveToCameraRollAlertView;
-(void)_completeCapture;
-(void)_captureImage;
-(void)_updateCaptureInterfaceRotationAngle;
-(void)_setupTorch:(int)arg1 ;
-(void)_reachedMaxVideoLength;
-(void)_videoDidCapture;
-(char)_shouldShowSelfieCamInstructions;
-(float)_calculateInterfaceRotationAngle;
-(void)_photoDidCapture;
-(void)_completePhotoCapture:(id)arg1 ;
-(void)_completeVideoCapture:(id)arg1 ;
-(char)_shouldAllowDrawAndTextPhotoEditing;
-(void)_updateSelfieCamInstructionsVisibility;
-(void)_loadPreviewLayerCameraOptions:(id)arg1 ;
-(void)_transformPreviewLayerForInterfaceOrientation;
-(void)_setUpPhotoEditingControlsWithViewModePreview;
-(void)_previewPhotoCapture;
-(void)_previewVideoCapture;
-(void)_initSelfieCamPhotoEditingExperimentContextIfNecessary;
-(char)isPermissionWrapperDeniedViewShowing;
-(CGSize)imageOverlaySize;
-(void)_selfieCamPhotoEditingExperimentLogExposure;
-(char)allowTapToEnhance;
-(void)_stopRecording;
-(void)setDelegate:(id<MNCameraViewControllerDelegate>)arg1 ;
-(id<MNCameraViewControllerDelegate>)delegate;
-(int)preferredStatusBarStyle;
-(char)prefersStatusBarHidden;
-(void)reset;
-(char)shouldAutorotate;
-(void)alertView:(id)arg1 willDismissWithButtonIndex:(int)arg2 ;
-(void)loadView;
-(void)viewWillAppear:(char)arg1 ;
-(void)viewDidLoad;
-(void)viewDidAppear:(char)arg1 ;
-(void)viewWillDisappear:(char)arg1 ;
-(void)viewDidDisappear:(char)arg1 ;
-(void)didRotateFromInterfaceOrientation:(int)arg1 ;
-(MNCameraView *)cameraView;
-(void)setCameraView:(MNCameraView *)arg1 ;
@end

