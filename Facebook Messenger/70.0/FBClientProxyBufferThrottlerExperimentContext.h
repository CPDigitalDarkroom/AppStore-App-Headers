/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 14, 2016 at 2:22:18 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/B4BDDC65-4400-4BC5-A974-2245FB5B0846/MessengerCompressed-iphoneos-arm64,iphoneos-armv7.app/MessengerCompressed-iphoneos-arm64,iphoneos-armv7
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <MessengerCompressed-iphoneos-arm64,iphoneos-armv7/FBExperimentContext.h>

@interface FBClientProxyBufferThrottlerExperimentContext : FBExperimentContext {

	char _stallOnlyWhenLoaded;
	char _stallOnlyWhenPlayerLikelyToStallToo;
	char _allowPrepare;
	char _shouldCancelDownloadsDirectly;
	char _shouldCancelAssetLoading;
	char _cancelNetworkOnDirectCancel;
	char _truncateCacheOnContinuation;
	char _alignLengthToBlockBoundaryOnThrottling;
	int _bytesAtomCompensationBuffer;
	int _throttlerType;
	int _stallPredictionThreshold;
	int _secondsFetchedBeforePlaying;
	int _secondsFetchedBeforePlayingCell;
	int _aggressiveCancellationMaxState;
	unsigned _closeTimeout;
	int _minSingleNetworkFetchByteSize;
	double _ratio;
	double _fileSizeAtomCompensationBuffer;
	double _vbrTimeCompensationBuffer;
	double _maxVbrTimeCompensationBuffer;
	double _singleFetchMultiplier;

}

@property (nonatomic,readonly) double ratio;                                             //@synthesize ratio=_ratio - In the implementation block
@property (nonatomic,readonly) double fileSizeAtomCompensationBuffer;                    //@synthesize fileSizeAtomCompensationBuffer=_fileSizeAtomCompensationBuffer - In the implementation block
@property (nonatomic,readonly) int bytesAtomCompensationBuffer;                          //@synthesize bytesAtomCompensationBuffer=_bytesAtomCompensationBuffer - In the implementation block
@property (nonatomic,readonly) double vbrTimeCompensationBuffer;                         //@synthesize vbrTimeCompensationBuffer=_vbrTimeCompensationBuffer - In the implementation block
@property (nonatomic,readonly) double maxVbrTimeCompensationBuffer;                      //@synthesize maxVbrTimeCompensationBuffer=_maxVbrTimeCompensationBuffer - In the implementation block
@property (nonatomic,readonly) double singleFetchMultiplier;                             //@synthesize singleFetchMultiplier=_singleFetchMultiplier - In the implementation block
@property (nonatomic,readonly) int throttlerType;                                        //@synthesize throttlerType=_throttlerType - In the implementation block
@property (nonatomic,readonly) int stallPredictionThreshold;                             //@synthesize stallPredictionThreshold=_stallPredictionThreshold - In the implementation block
@property (nonatomic,readonly) int secondsFetchedBeforePlaying;                          //@synthesize secondsFetchedBeforePlaying=_secondsFetchedBeforePlaying - In the implementation block
@property (nonatomic,readonly) int secondsFetchedBeforePlayingCell;                      //@synthesize secondsFetchedBeforePlayingCell=_secondsFetchedBeforePlayingCell - In the implementation block
@property (nonatomic,readonly) char stallOnlyWhenLoaded;                                 //@synthesize stallOnlyWhenLoaded=_stallOnlyWhenLoaded - In the implementation block
@property (nonatomic,readonly) char stallOnlyWhenPlayerLikelyToStallToo;                 //@synthesize stallOnlyWhenPlayerLikelyToStallToo=_stallOnlyWhenPlayerLikelyToStallToo - In the implementation block
@property (nonatomic,readonly) char allowPrepare;                                        //@synthesize allowPrepare=_allowPrepare - In the implementation block
@property (nonatomic,readonly) int aggressiveCancellationMaxState;                       //@synthesize aggressiveCancellationMaxState=_aggressiveCancellationMaxState - In the implementation block
@property (nonatomic,readonly) char shouldCancelDownloadsDirectly;                       //@synthesize shouldCancelDownloadsDirectly=_shouldCancelDownloadsDirectly - In the implementation block
@property (nonatomic,readonly) char shouldCancelAssetLoading;                            //@synthesize shouldCancelAssetLoading=_shouldCancelAssetLoading - In the implementation block
@property (nonatomic,readonly) char cancelNetworkOnDirectCancel;                         //@synthesize cancelNetworkOnDirectCancel=_cancelNetworkOnDirectCancel - In the implementation block
@property (nonatomic,readonly) unsigned closeTimeout;                                    //@synthesize closeTimeout=_closeTimeout - In the implementation block
@property (nonatomic,readonly) char truncateCacheOnContinuation;                         //@synthesize truncateCacheOnContinuation=_truncateCacheOnContinuation - In the implementation block
@property (nonatomic,readonly) char alignLengthToBlockBoundaryOnThrottling;              //@synthesize alignLengthToBlockBoundaryOnThrottling=_alignLengthToBlockBoundaryOnThrottling - In the implementation block
@property (nonatomic,readonly) int minSingleNetworkFetchByteSize;                        //@synthesize minSingleNetworkFetchByteSize=_minSingleNetworkFetchByteSize - In the implementation block
+(char)allowUserInterfaceIdiom:(int)arg1 ;
+(id)universeName;
+(id)parameterConfigurations;
-(double)fileSizeAtomCompensationBuffer;
-(int)bytesAtomCompensationBuffer;
-(double)vbrTimeCompensationBuffer;
-(double)maxVbrTimeCompensationBuffer;
-(double)singleFetchMultiplier;
-(int)throttlerType;
-(int)stallPredictionThreshold;
-(int)secondsFetchedBeforePlaying;
-(int)secondsFetchedBeforePlayingCell;
-(char)stallOnlyWhenLoaded;
-(char)stallOnlyWhenPlayerLikelyToStallToo;
-(char)allowPrepare;
-(int)aggressiveCancellationMaxState;
-(char)shouldCancelDownloadsDirectly;
-(char)shouldCancelAssetLoading;
-(char)cancelNetworkOnDirectCancel;
-(unsigned)closeTimeout;
-(char)truncateCacheOnContinuation;
-(char)alignLengthToBlockBoundaryOnThrottling;
-(int)minSingleNetworkFetchByteSize;
-(double)ratio;
@end

