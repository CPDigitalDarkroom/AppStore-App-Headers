/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 14, 2016 at 2:22:11 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/B4BDDC65-4400-4BC5-A974-2245FB5B0846/MessengerCompressed-iphoneos-arm64,iphoneos-armv7.app/MessengerCompressed-iphoneos-arm64,iphoneos-armv7
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <MessengerCompressed-iphoneos-arm64,iphoneos-armv7/MNSecureMessagingMessageReceiverDelegate.h>
#import <MessengerCompressed-iphoneos-arm64,iphoneos-armv7/MNSecureMessagingStoreListener.h>

@protocol MNSecureMessagingSendHandling, MNSecureMessagingMessageReceiverDelegate, MNSecureMessagingIncomingMessageListener, OS_dispatch_queue;
@class MNSecureMessagingStore, MNSecureMessagingMessagingCollectionAddress, MNSecureMessagingMessageReceiver, MNSecureMessagingPacketFactory, MNSecureThreadUpdater, NSObject, NSString;

@interface MNSecureMessagingIncomingMessageCoordinator : NSObject <MNSecureMessagingMessageReceiverDelegate, MNSecureMessagingStoreListener> {

	MNSecureMessagingStore* _store;
	MNSecureMessagingMessagingCollectionAddress* _localAddress;
	MNSecureMessagingMessageReceiver* _messageReceiver;
	id<MNSecureMessagingSendHandling> _sendHandler;
	MNSecureMessagingPacketFactory* _factory;
	MNSecureThreadUpdater* _threadUpdater;
	/*^block*/id _cryptoEngineProvider;
	id<MNSecureMessagingMessageReceiverDelegate> _dispatchDelegateForSelf;
	id<MNSecureMessagingIncomingMessageListener> _listener;
	NSObject*<OS_dispatch_queue> _queue;

}

@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)secureMessagingStoreDidOpen;
-(void)didReceiveSecureMessage:(id)arg1 isReplay:(char)arg2 completionBlock:(/*^block*/id)arg3 ;
-(char)_receivedMessagePacket:(id)arg1 cryptoEngine:(id)arg2 threadWithKey:(id)arg3 ;
-(char)_receivedRequestAcceptedPacket:(id)arg1 cryptoEngine:(id)arg2 threadWithKey:(id)arg3 ;
-(char)_receivedReceipt:(id)arg1 forThreadWithKey:(id)arg2 ;
-(char)_receivedStatusPacket:(id)arg1 ;
-(id)_threadKeyFromStatusPacket:(id)arg1 ;
-(id)initWithStore:(id)arg1 localAddress:(id)arg2 messageReceiver:(id)arg3 sendHandler:(id)arg4 packetFactory:(id)arg5 threadUpdater:(id)arg6 cryptoEngineProvider:(/*^block*/id)arg7 listener:(id)arg8 queue:(id)arg9 ;
@end

