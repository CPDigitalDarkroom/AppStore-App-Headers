/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 14, 2016 at 2:22:02 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/B4BDDC65-4400-4BC5-A974-2245FB5B0846/MessengerCompressed-iphoneos-arm64,iphoneos-armv7.app/MessengerCompressed-iphoneos-arm64,iphoneos-armv7
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <MessengerCompressed-iphoneos-arm64,iphoneos-armv7/FBSessionClassProvidable.h>
#import <MessengerCompressed-iphoneos-arm64,iphoneos-armv7/FBMConfigurable.h>

@protocol MNAuthenticationManager;
@class FBMQTTClientManager, FBMThreadParticipantFilter, FBMNetworkProtocolController, FBMDeliveryReceiptSendLogger, FBUserSession, MNConfigManager, FBMQTTSendResponseListener, NSString;

@interface FBMMQTTSender : NSObject <FBSessionClassProvidable, FBMConfigurable> {

	FBMQTTClientManager* _clientManager;
	FBMThreadParticipantFilter* _participantFilter;
	FBMNetworkProtocolController* _networkProtocolController;
	id<MNAuthenticationManager> _authManager;
	FBMDeliveryReceiptSendLogger* _deliveryReceiptSendLogger;
	FBUserSession* _session;
	MNConfigManager* _configManager;
	FBMQTTSendResponseListener* _responseListener;
	char _serverHasRejectedMessageBatchSend;
	char _optimizedMqttSend;

}

@property (nonatomic,retain) FBMQTTClientManager * clientManager;              //@synthesize clientManager=_clientManager - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id)initWithProviderMapData:(id)arg1 ;
-(void)configureWithMQTTClientManager:(id)arg1 ;
-(void)sendThreadPresenceNotification:(id)arg1 state:(int)arg2 ;
-(void)sendChatEvent:(id)arg1 ;
-(void)sendTypingNotification:(id)arg1 state:(int)arg2 ;
-(id)initWithThreadParticipantFilter:(id)arg1 networkProtocolController:(id)arg2 authManager:(id)arg3 deliveryReceiptSendLogger:(id)arg4 session:(id)arg5 configManager:(id)arg6 queue:(id)arg7 ;
-(void)addMQTTPublisher:(int)arg1 publisher:(id)arg2 message:(id)arg3 messageKey:(id)arg4 publishCallback:(/*^block*/id)arg5 failureCallback:(/*^block*/id)arg6 publishTimeout:(double)arg7 waitIntervalForConnect:(double)arg8 ;
-(int)getTimeoutErrorCode:(char)arg1 connectedErrorCode:(int)arg2 reachableDisconnectedErrorCode:(int)arg3 unreachableDisconnectedErrorCode:(int)arg4 ;
-(void)setClientManager:(FBMQTTClientManager *)arg1 ;
-(void)sendMessageUsingThriftPayload:(id)arg1 preparedAttachment:(id)arg2 publishCallback:(/*^block*/id)arg3 finishCallback:(/*^block*/id)arg4 ;
-(double)_heuristicResponseTimeoutForMessageBatch:(id)arg1 ;
-(void)addMessageSendPublisher:(id)arg1 message:(id)arg2 messageKey:(id)arg3 publishCallback:(/*^block*/id)arg4 failureCallback:(/*^block*/id)arg5 publishTimeout:(double)arg6 waitIntervalForConnect:(double)arg7 ;
-(double)_responseTimeForMessageSend;
-(id)_constructThreadPresencePayload:(id)arg1 ;
-(void)addMQTTPublisher:(int)arg1 topic:(id)arg2 payload:(id)arg3 messageKey:(id)arg4 publishCallback:(/*^block*/id)arg5 failureCallback:(/*^block*/id)arg6 publishTimeout:(double)arg7 waitIntervalForConnect:(double)arg8 keepRetryUntilTimeout:(char)arg9 ;
-(void)addMQTTPublisher:(int)arg1 topic:(id)arg2 jsonPayload:(id)arg3 messageKey:(id)arg4 publishCallback:(/*^block*/id)arg5 failureCallback:(/*^block*/id)arg6 publishTimeout:(double)arg7 waitIntervalForConnect:(double)arg8 ;
-(void)addMQTTPublisher:(int)arg1 topic:(id)arg2 payload:(id)arg3 messageKey:(id)arg4 publishCallback:(/*^block*/id)arg5 failureCallback:(/*^block*/id)arg6 publishTimeout:(double)arg7 waitIntervalForConnect:(double)arg8 ;
-(char)canSendMessageBatch;
-(char)optimizedMQTTSend;
-(id)getMQTTClientStatus;
-(void)sendMessage:(id)arg1 preparedAttachment:(id)arg2 publishCallback:(/*^block*/id)arg3 finishCallback:(/*^block*/id)arg4 ;
-(void)sendMessageBatch:(id)arg1 publishCallback:(/*^block*/id)arg2 finishCallback:(/*^block*/id)arg3 ;
-(void)sendDeliveryReceipts:(id)arg1 source:(unsigned)arg2 completionBlock:(/*^block*/id)arg3 ;
-(void)sendWebRTCMessage:(id)arg1 fbTraceMeta:(id)arg2 messageId:(id)arg3 thriftData:(id)arg4 callback:(/*^block*/id)arg5 ;
-(void)sendRTCMultiwayMessage:(id)arg1 withFbTraceMeta:(id)arg2 conferenceName:(id)arg3 transactionId:(id)arg4 callback:(/*^block*/id)arg5 ;
-(void)sendWebRTCMessage:(id)arg1 fbTraceMeta:(id)arg2 messageId:(id)arg3 jsonData:(id)arg4 callback:(/*^block*/id)arg5 ;
-(void)sendJsonMessage:(id)arg1 callback:(/*^block*/id)arg2 ;
-(FBMQTTClientManager *)clientManager;
-(char)canSend;
-(char)isConfigured;
@end

