/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 14, 2016 at 2:22:53 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/B4BDDC65-4400-4BC5-A974-2245FB5B0846/MessengerCompressed-iphoneos-arm64,iphoneos-armv7.app/MessengerCompressed-iphoneos-arm64,iphoneos-armv7
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol FBGraphStoreObjectFactory;
#import <MessengerCompressed-iphoneos-arm64,iphoneos-armv7/MessengerCompressed-iphoneos-arm64,iphoneos-armv7-Structs.h>
@class NSMutableDictionary, FBGraphQLBatchRequest;

@interface FBGraphQLBatchStreamingContentInterpreter : NSObject {

	NSMutableDictionary* _queryKeys;
	FBGraphQLBatchRequest* _request;
	/*^block*/id _responseHandler;
	/*^block*/id _errorHandler;
	/*^block*/id _summaryHandler;
	unique_ptr<facebook::mobile::graphstore::parser::BatchAPIParser, std::__1::default_delete<facebook::mobile::graphstore::parser::BatchAPIParser> >* _parser;
	id<FBGraphStoreObjectFactory> _objectFactory;

}
-(shared_ptr<std::__1::vector<std::__1::shared_ptr<facebook::GraphQLQuery>, std::__1::allocator<std::__1::shared_ptr<facebook::GraphQLQuery> > > >*)queryVectorForRequest:(id)arg1 ;
-(void)_handleResponses:(const vector<std::__1::tuple<std::__1::basic_string<char>, std::__1::shared_ptr<const facebook::mobile::graphstore::Record>, std::__1::shared_ptr<const facebook::mobile::graphstore::NodeSource> >, std::__1::allocator<std::__1::tuple<std::__1::basic_string<char>, std::__1::shared_ptr<const facebook::mobile::graphstore::Record>, std::__1::shared_ptr<const facebook::mobile::graphstore::NodeSource> > > >*)arg1 forQuery:(shared_ptr<facebook::GraphQLQuery>*)arg2 ;
-(void)_handleError:(const GraphQLBatchErrorResponse*)arg1 forQuery:(shared_ptr<facebook::GraphQLQuery>*)arg2 ;
-(void)_handleSummaryWithSuccess:(unsigned)arg1 errors:(unsigned)arg2 skipped:(unsigned)arg3 ;
-(id)initWithRequest:(id)arg1 objectFactory:(id)arg2 responseHandler:(/*^block*/id)arg3 errorHandler:(/*^block*/id)arg4 summaryHandler:(/*^block*/id)arg5 ;
-(char)parse:(id)arg1 error:(id*)arg2 ;
-(char)closeWithError:(id*)arg1 ;
@end

