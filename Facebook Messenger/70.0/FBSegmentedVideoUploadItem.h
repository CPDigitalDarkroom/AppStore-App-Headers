/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 14, 2016 at 2:22:05 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/B4BDDC65-4400-4BC5-A974-2245FB5B0846/MessengerCompressed-iphoneos-arm64,iphoneos-armv7.app/MessengerCompressed-iphoneos-arm64,iphoneos-armv7
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <MessengerCompressed-iphoneos-arm64,iphoneos-armv7/MessengerCompressed-iphoneos-arm64,iphoneos-armv7-Structs.h>
#import <MessengerCompressed-iphoneos-arm64,iphoneos-armv7/FBChunkedVideoUploadItem.h>

@class FBSegmentedVideoUploadItemState, FBVideoUploadCache, FBVideoUploadFallbackExperimentContext, NSString, FBVideoSegmentedTranscoder;

@interface FBSegmentedVideoUploadItem : FBChunkedVideoUploadItem {

	int _maxNumberOfVideoSegments;
	int _maxVideoSegmentDurationInSeconds;
	int _minVideoSegmentDurationInSeconds;
	FBSegmentedVideoUploadItemState* _uploadState;
	float _transcodingProgress;
	float _uploadProgress;
	char _shouldRecoverState;
	FBVideoUploadCache* _stateCache;
	FBVideoUploadFallbackExperimentContext* _rawUploadFallbackExperimentContext;
	NSString* _broadcastID;
	FBVideoSegmentedTranscoder* _transcoder;

}
-(void)networkerRequest:(id)arg1 didSucceed:(id)arg2 status:(id)arg3 ;
-(void)networkerRequest:(id)arg1 didFail:(id)arg2 status:(id)arg3 ;
-(void)networkerRequest:(id)arg1 didCancelWithStatus:(id)arg2 ;
-(int)mediaUploadItemType;
-(void)stateAwareStart;
-(char)isUploadInProcess;
-(void)continueUploadRequest;
-(void)processMediaItemWithCompletionBlock:(/*^block*/id)arg1 ;
-(void)cleanupWithCallback:(/*^block*/id)arg1 ;
-(NSRange)nextChunkRangeFromStartOffset:(unsigned)arg1 endOffset:(unsigned)arg2 ;
-(void)checkpointUploadState;
-(float)totalProgressForRequestProgress:(float)arg1 ;
-(id)apiParametersWithProcessedContext:(id)arg1 ;
-(id)initWithVideoAttachment:(id)arg1 persistentKeyValueStore:(id)arg2 publisherData:(id)arg3 logger:(id)arg4 experimentManager:(id)arg5 networkDispatcher:(id)arg6 reachabilityAnnouncer:(id)arg7 maxNumberOfVideoSegments:(int)arg8 maxNumberOfParallelChunks:(int)arg9 maxVideoSegmentDurationInSeconds:(int)arg10 minVideoSegmentDurationInSeconds:(int)arg11 shouldUploadVideoWithoutPublishing:(char)arg12 enablePauseResume:(char)arg13 shouldRecoverState:(char)arg14 shouldForceUsingNativeEncoder:(char)arg15 shouldForceRawFileUpload:(char)arg16 stateCache:(id)arg17 ;
-(char)useNewTranscodeLibrary;
-(float)videoProcessProgressPercent;
-(id)startTransferWithParameters:(id)arg1 ;
-(void)exportRawVideoAndContinue;
-(void)encodeVideoAndContinue;
-(void)onExportSegmentComplete:(id)arg1 ;
-(void)reportTranscodingProgress;
-(void)onExportSuccess;
-(void)reportProcessError:(id)arg1 ;
-(void)exportRawCompositionVideoAndContinue:(id)arg1 ;
-(void)encodeUsingTranscoderWithProgressBlock:(/*^block*/id)arg1 segmentCompletionBlock:(/*^block*/id)arg2 completionBlock:(/*^block*/id)arg3 outputURL:(id)arg4 ;
-(id)_findNextUploadPartition;
-(id)_fileDataForPartition:(id)arg1 range:(NSRange)arg2 ;
-(char)_allSegmentUploadCompleted;
-(NSRange)_makeChunkRange:(unsigned)arg1 endOffset:(unsigned)arg2 ;
-(void)populateNextChunkForSegment:(id)arg1 segment:(id)arg2 ;
-(char)isNextUploadRequestReady;
-(void)_start;
-(void)start;
-(void)cleanup;
-(void)resetState;
@end

