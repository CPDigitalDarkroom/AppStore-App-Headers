/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 14, 2016 at 2:22:18 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/B4BDDC65-4400-4BC5-A974-2245FB5B0846/MessengerCompressed-iphoneos-arm64,iphoneos-armv7.app/MessengerCompressed-iphoneos-arm64,iphoneos-armv7
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <MessengerCompressed-iphoneos-arm64,iphoneos-armv7/MessengerCompressed-iphoneos-arm64,iphoneos-armv7-Structs.h>
#import <MessengerCompressed-iphoneos-arm64,iphoneos-armv7/FBAudioSessionManagerClient.h>

@protocol AVAssetResourceLoaderDelegate, OS_dispatch_queue, MNVideoControllerDelegate;
@class NSObject, MNVideoRestorePlaybackState, NSURL, AVPlayer, AVPlayerItem, NSString;

@interface MNVideoController : NSObject <FBAudioSessionManagerClient> {

	char _shouldPlayVideoWhenForegrounded;
	id<AVAssetResourceLoaderDelegate> _resourceLoaderDelegate;
	NSObject*<OS_dispatch_queue> _delegateQueue;
	MNVideoRestorePlaybackState* _restorePlaybackState;
	char _isAudioMuted;
	char _shouldLoopPlayback;
	char _shouldPlayWhenAssetsAreLoaded;
	char _shouldStopOtherVideosWhenPlayed;
	char _finishedPlaying;
	int _playState;
	NSURL* _contentURL;
	id<MNVideoControllerDelegate> _delegate;
	AVPlayer* _player;
	AVPlayerItem* _playerItem;
	double _duration;

}

@property (nonatomic,retain) AVPlayerItem * playerItem;                                  //@synthesize playerItem=_playerItem - In the implementation block
@property (assign,nonatomic) char finishedPlaying;                                       //@synthesize finishedPlaying=_finishedPlaying - In the implementation block
@property (assign,nonatomic) double duration;                                            //@synthesize duration=_duration - In the implementation block
@property (assign,nonatomic) int playState;                                              //@synthesize playState=_playState - In the implementation block
@property (nonatomic,retain) NSURL * contentURL;                                         //@synthesize contentURL=_contentURL - In the implementation block
@property (assign,nonatomic,__weak) id<MNVideoControllerDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (assign,nonatomic) char isAudioMuted;                                          //@synthesize isAudioMuted=_isAudioMuted - In the implementation block
@property (assign,nonatomic) char shouldLoopPlayback;                                    //@synthesize shouldLoopPlayback=_shouldLoopPlayback - In the implementation block
@property (assign,nonatomic) char shouldPlayWhenAssetsAreLoaded;                         //@synthesize shouldPlayWhenAssetsAreLoaded=_shouldPlayWhenAssetsAreLoaded - In the implementation block
@property (nonatomic,readonly) AVPlayer * player;                                        //@synthesize player=_player - In the implementation block
@property (nonatomic,readonly) double currentPlaybackTime; 
@property (nonatomic,readonly) double playableDuration; 
@property (assign,nonatomic) char shouldStopOtherVideosWhenPlayed;                       //@synthesize shouldStopOtherVideosWhenPlayed=_shouldStopOtherVideosWhenPlayed - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) unsigned audioDirection; 
@property (nonatomic,readonly) unsigned outputCoordinationMode; 
@property (nonatomic,readonly) unsigned outputOptions; 
@property (nonatomic,readonly) unsigned inputOptions; 
@property (nonatomic,readonly) unsigned clientPriority; 
-(void)setFinishedPlaying:(char)arg1 ;
-(id)initWithResourceLoaderDelegate:(id)arg1 delegateQueue:(id)arg2 ;
-(void)setShouldPlayWhenAssetsAreLoaded:(char)arg1 ;
-(char)hasLoadedResources;
-(char)isLoadingResources;
-(void)loadAssetResourcesAndPlay;
-(void)setShouldLoopPlayback:(char)arg1 ;
-(void)setShouldStopOtherVideosWhenPlayed:(char)arg1 ;
-(void)setIsAudioMuted:(char)arg1 ;
-(void)invalidateWithCompletion:(/*^block*/id)arg1 ;
-(void)finishInterruptionAndResume:(char)arg1 ;
-(unsigned)audioDirection;
-(unsigned)outputCoordinationMode;
-(unsigned)outputOptions;
-(void)_addControllerObservers;
-(void)_removePlayerItemObservers;
-(void)_removeControllerObservers;
-(void)_prepareToPlayAsset:(id)arg1 withKeys:(id)arg2 ;
-(void)_addPlayerItemObservers;
-(void)_updatePlayerMuteState;
-(void)_playerDidStartPlaying:(id)arg1 ;
-(void)_selfieVideoDidStartRecording:(id)arg1 ;
-(void)_handleRestorePlayback;
-(void)stopWithCompletion:(/*^block*/id)arg1 ;
-(char)shouldStopOtherVideosWhenPlayed;
-(void)_playWithoutSeeking;
-(double)_playableDurationForTimeRanges:(id)arg1 ;
-(id)addPeriodicTimeObserverWithBlock:(/*^block*/id)arg1 queue:(id)arg2 interval:(SCD_Struct_FB51)arg3 ;
-(void)removePeriodicTimeObserver:(id)arg1 ;
-(id)generateThumbnailForTime:(SCD_Struct_FB51)arg1 ;
-(unsigned)estimatedFileSizeAfterExporting:(char)arg1 ;
-(void)seekToBeginning;
-(void)seekToPosition:(float)arg1 ;
-(char)shouldLoopPlayback;
-(char)shouldPlayWhenAssetsAreLoaded;
-(char)finishedPlaying;
-(void)setContentURL:(NSURL *)arg1 ;
-(NSURL *)contentURL;
-(double)playableDuration;
-(void)beginInterruption;
-(AVPlayerItem *)playerItem;
-(int)playState;
-(double)currentPlaybackTime;
-(void)setPlayerItem:(AVPlayerItem *)arg1 ;
-(char)isPlaying;
-(AVPlayer *)player;
-(void)itemDidFinishPlaying:(id)arg1 ;
-(void)setDelegate:(id<MNVideoControllerDelegate>)arg1 ;
-(void)dealloc;
-(id<MNVideoControllerDelegate>)delegate;
-(double)duration;
-(void)setDuration:(double)arg1 ;
-(void)stop;
-(void)resume;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(void)_reset;
-(void)_applicationDidEnterBackground:(id)arg1 ;
-(void)_applicationWillEnterForeground:(id)arg1 ;
-(void)pause;
-(char)isAudioMuted;
-(void)_removePlayerObservers;
-(void)_addPlayerObservers;
-(void)_play;
-(void)setPlayState:(int)arg1 ;
-(SCD_Struct_FB51)assetDuration;
@end

