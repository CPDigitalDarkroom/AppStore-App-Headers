/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 14, 2016 at 2:22:54 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/B4BDDC65-4400-4BC5-A974-2245FB5B0846/MessengerCompressed-iphoneos-arm64,iphoneos-armv7.app/MessengerCompressed-iphoneos-arm64,iphoneos-armv7
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <MessengerCompressed-iphoneos-arm64,iphoneos-armv7/MessengerCompressed-iphoneos-arm64,iphoneos-armv7-Structs.h>
#import <MessengerCompressed-iphoneos-arm64,iphoneos-armv7/FBAudioSessionManagerClient.h>
#import <MessengerCompressed-iphoneos-arm64,iphoneos-armv7/AVCaptureAudioDataOutputSampleBufferDelegate.h>
#import <libobjc.A.dylib/AVCaptureVideoDataOutputSampleBufferDelegate.h>
#import <MessengerCompressed-iphoneos-arm64,iphoneos-armv7/FBSessionClassProvidable.h>
#import <MessengerCompressed-iphoneos-arm64,iphoneos-armv7/FBCaptureManagerPreviewProtocol.h>

@protocol OS_dispatch_queue, FBOrientationTracking, FBCaptureManagerDelegate;
@class AVCaptureVideoPreviewLayer, FBCaptureManagerListenerAnnouncer, NSObject, AVCaptureAudioDataOutput, AVCaptureDeviceInput, AVCaptureSession, AVCaptureStillImageOutput, AVCaptureVideoDataOutput, FBVideoRecorder, AVCaptureDevice, NSString;

@interface FBCaptureManager : NSObject <FBAudioSessionManagerClient, AVCaptureAudioDataOutputSampleBufferDelegate, AVCaptureVideoDataOutputSampleBufferDelegate, FBSessionClassProvidable, FBCaptureManagerPreviewProtocol> {

	FBCaptureManagerListenerAnnouncer* _announcer;
	NSObject*<OS_dispatch_queue> _audioBufferQueue;
	AVCaptureAudioDataOutput* _audioDataOutput;
	AVCaptureDeviceInput* _audioDeviceInput;
	AVCaptureSession* _audioSession;
	AVCaptureSession* _captureSession;
	char _didStopSession;
	char _isFlipFrontCameraOutputEnabled;
	AVCaptureVideoPreviewLayer* _previewLayer;
	NSObject*<OS_dispatch_queue> _sessionQueue;
	unsigned _state;
	AVCaptureStillImageOutput* _stillImageOutput;
	opaqueCMFormatDescriptionRef _currentVideoBufferFormatDescription;
	NSObject*<OS_dispatch_queue> _videoBufferQueue;
	AVCaptureVideoDataOutput* _videoDataOutput;
	AVCaptureDeviceInput* _videoDeviceInput;
	FBVideoRecorder* _videoRecorder;
	id<FBOrientationTracking> _orientationTracker;
	char _isAudioEnabled;
	char _isVideoEnabled;
	id<FBCaptureManagerDelegate> _delegate;
	AVCaptureDevice* _currentDevice;
	NSString* _sessionPreset;

}

@property (assign,nonatomic,__weak) id<FBCaptureManagerDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,readonly) AVCaptureDevice * currentDevice;                         //@synthesize currentDevice=_currentDevice - In the implementation block
@property (assign,nonatomic) char isAudioEnabled;                                       //@synthesize isAudioEnabled=_isAudioEnabled - In the implementation block
@property (assign,nonatomic) char isVideoEnabled;                                       //@synthesize isVideoEnabled=_isVideoEnabled - In the implementation block
@property (nonatomic,copy) NSString * sessionPreset;                                    //@synthesize sessionPreset=_sessionPreset - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) unsigned audioDirection; 
@property (nonatomic,readonly) unsigned outputCoordinationMode; 
@property (nonatomic,readonly) unsigned outputOptions; 
@property (nonatomic,readonly) unsigned inputOptions; 
@property (nonatomic,readonly) unsigned clientPriority; 
@property (getter=isRunning,nonatomic,readonly) char running; 
@property (nonatomic,readonly) AVCaptureVideoPreviewLayer * previewLayer; 
-(id)initWithProviderMapData:(id)arg1 ;
-(void)stopSessionWithCompletion:(/*^block*/id)arg1 ;
-(void)switchToDeviceInPosition:(int)arg1 ;
-(char)isViewFinderMirrored;
-(void)adjustCaptureSettingsAtScaledPoint:(CGPoint)arg1 ;
-(void)addCaptureManagerListener:(id)arg1 ;
-(void)switchToDevice:(id)arg1 ;
-(void)_completeVideoCapture:(id)arg1 ;
-(void)removeCaptureManagerListener:(id)arg1 ;
-(void)finishInterruptionAndResume:(char)arg1 ;
-(void)highPriorityClientBecameActive;
-(unsigned)audioDirection;
-(unsigned)outputCoordinationMode;
-(unsigned)outputOptions;
-(char)canZoomToZoomFactor:(float)arg1 ;
-(void)setIsFlipFrontCameraOutputEnabled:(char)arg1 ;
-(id)initWithVideoRecorder:(id)arg1 orientationTracker:(id)arg2 ;
-(void)_startCaptureStillImageAsynchronously;
-(void)_handleStillDataSampleBuffer:(opaqueCMSampleBufferRef)arg1 orientation:(int)arg2 error:(id)arg3 ;
-(void)_performStartRecording;
-(void)_startCaptureAndAudioSessions;
-(char)_ensureState:(unsigned)arg1 ;
-(void)_stopAVCaptureSession:(id)arg1 ;
-(void)_setUpCaptureConnectionForVideoRecording;
-(char)_swapCaptureSessionInput:(id)arg1 ;
-(void)_handleAudioSampleBuffer:(opaqueCMSampleBufferRef)arg1 ;
-(void)_tearDownAudioConfiguration;
-(void)_suspendAudioRecording;
-(void)_resumeAudioRecording;
-(void)_completeStillImageCapturingWithBufferImage:(id)arg1 metatdata:(id)arg2 orientation:(int)arg3 ;
-(CGSize)_imageSizeForOrientation:(int)arg1 bufferImageSize:(CGSize)arg2 ;
-(void)_handleVideoRecordFailed;
-(void)_finishVideoCaptureWithLoadedAsset:(id)arg1 ;
-(void)_ensureAudioSession;
-(id)audioDataOutput;
-(void)_startRunningAudioSession;
-(void)_configureSessionPreset;
-(void)_configureInputsAndOutputs;
-(void)_updateConnectionMirrorSettings;
-(void)subsribeNSNotificationEventsForAudioRecoding;
-(void)_configureAndStartAudioSession;
-(void)_configureCaptureSession;
-(id)videoDataOutput;
-(CGSize)_videoSizeForOrientation:(int)arg1 ;
-(void)_configureCaptureSessionWithMainThreadCompletion:(/*^block*/id)arg1 ;
-(void)_configureAudioSessionWithMainThreadCompletion:(/*^block*/id)arg1 ;
-(void)beginInterruption;
-(AVCaptureVideoPreviewLayer *)previewLayer;
-(char)isVideoEnabled;
-(char)isAudioEnabled;
-(AVCaptureDevice *)currentDevice;
-(void)setDelegate:(id<FBCaptureManagerDelegate>)arg1 ;
-(void)dealloc;
-(id<FBCaptureManagerDelegate>)delegate;
-(void)setState:(unsigned)arg1 ;
-(char)isRunning;
-(void)stopRecording;
-(id)audioDeviceInput;
-(NSString *)sessionPreset;
-(void)captureOutput:(id)arg1 didOutputSampleBuffer:(opaqueCMSampleBufferRef)arg2 fromConnection:(id)arg3 ;
-(void)captureOutput:(id)arg1 didDropSampleBuffer:(opaqueCMSampleBufferRef)arg2 fromConnection:(id)arg3 ;
-(void)setZoomFactor:(float)arg1 ;
-(void)_handleVideoSampleBuffer:(opaqueCMSampleBufferRef)arg1 ;
-(void)cancelRecording;
-(void)setSessionPreset:(NSString *)arg1 ;
-(id)stillImageOutput;
-(void)startRecording;
-(void)captureImage;
-(void)setIsAudioEnabled:(char)arg1 ;
-(void)setIsVideoEnabled:(char)arg1 ;
-(void)startSession;
@end

