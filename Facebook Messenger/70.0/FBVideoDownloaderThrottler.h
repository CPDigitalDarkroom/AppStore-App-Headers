/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 14, 2016 at 2:22:18 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/B4BDDC65-4400-4BC5-A974-2245FB5B0846/MessengerCompressed-iphoneos-arm64,iphoneos-armv7.app/MessengerCompressed-iphoneos-arm64,iphoneos-armv7
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol FBVideoDownloaderThrottlerDelegate, FBClientProxyThrottlingDelegate;
#import <MessengerCompressed-iphoneos-arm64,iphoneos-armv7/MessengerCompressed-iphoneos-arm64,iphoneos-armv7-Structs.h>
@class NSURL, FBClientProxyLogger, NSString;

@interface FBVideoDownloaderThrottler : NSObject {

	NSURL* _URL;
	FBClientProxyLogger* _logger;
	NSString* _videoID;
	NSString* _dataKey;
	id<FBVideoDownloaderThrottlerDelegate> _downloaderDelegate;
	int _throttlerType;
	unsigned _resumeBufferTimeThreshold;
	unsigned _pauseBufferTimeThreshold;
	unsigned _minResumeOffset;
	double _videoThrottlingMinAtomPrSize;
	unsigned _videoThrottlingMinAtomByteSize;
	double _vbrTimeCompensationAdjustment;
	double _maxVbrTimeCompensationBuffer;
	double _singleFetchMultiplier;
	double _requestStartTime;
	double _requestStopTime;
	double _videoTimeAfterStop;
	double _lastVideoTimeLeft;
	double _stallPredictionThreshold;
	double _secondsFetchedBeforePlaying;
	unsigned _videoThrottlingMinThrottlingSize;
	char _stallOnlyWhenLoaded;
	char _stallOnlyWhenPlayerLikelyToStallToo;
	char _alignLengthToBlockBoundaryOnThrottling;
	int _aggressiveCancellationMaxState;
	unsigned _operationMode;
	id<FBClientProxyThrottlingDelegate> _clientProxyThrottlingDelegate;

}

@property (assign,nonatomic,__weak) id<FBClientProxyThrottlingDelegate> clientProxyThrottlingDelegate;              //@synthesize clientProxyThrottlingDelegate=_clientProxyThrottlingDelegate - In the implementation block
@property (getter=isRangeRequestType,nonatomic,readonly) char rangeRequestType; 
@property (getter=isPauseResumeType,nonatomic,readonly) char pauseResumeType; 
-(unsigned)_calculateAtomSize:(unsigned)arg1 ;
-(unsigned)_calculateMinInitialFetchSizeWithAtomSize:(unsigned)arg1 byteRate:(double)arg2 ;
-(char)_stallRecoveryAndAvoidanceWithPlayerOffset:(unsigned)arg1 currentNetworkOffset:(unsigned)arg2 minInitialFetchSize:(unsigned)arg3 playerData:(SCD_Struct_FB110)arg4 stallRecoveryOrPrevention:(/*^block*/id)arg5 ;
-(void)_markDownloadStoppedOrNoResumedWithVideoTimeLeft:(double)arg1 stallPredictionActive:(char)arg2 ;
-(unsigned)_alignLengthToBlockBoundary:(unsigned)arg1 ;
-(void)_markDownloadStarted;
-(char)_stallPredictionActiveWithNetworkOffset:(unsigned)arg1 currentPlayerOffset:(unsigned)arg2 byteRate:(double)arg3 ;
-(char)_calculateIfWeAreLikelyToStallWithOffset:(unsigned)arg1 videoTimeLeft:(double)arg2 ;
-(id)initWithURL:(id)arg1 logger:(id)arg2 videoID:(id)arg3 downloaderDelegate:(id)arg4 experimentManager:(id)arg5 dataKey:(id)arg6 ;
-(char)isRangeRequestType;
-(char)isPauseResumeType;
-(void)setClientProxyThrottlingDelegate:(id<FBClientProxyThrottlingDelegate>)arg1 ;
-(void)playingCancelled;
-(void)throttleUsingPauseResumeWithOffset:(unsigned)arg1 ;
-(unsigned)calculateThrottlingRangeRequestWithOffset:(unsigned)arg1 ;
-(id<FBClientProxyThrottlingDelegate>)clientProxyThrottlingDelegate;
-(void)playing;
@end

