/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 14, 2016 at 2:22:44 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/B4BDDC65-4400-4BC5-A974-2245FB5B0846/MessengerCompressed-iphoneos-arm64,iphoneos-armv7.app/MessengerCompressed-iphoneos-arm64,iphoneos-armv7
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <MessengerCompressed-iphoneos-arm64,iphoneos-armv7/MessengerCompressed-iphoneos-arm64,iphoneos-armv7-Structs.h>
#import <MessengerCompressed-iphoneos-arm64,iphoneos-armv7/FBInvalidating.h>

@protocol OS_dispatch_queue, NSObject;
@class NSObject, FBAnalyticsPerfLogger, NSString;

@interface FBGraphQLConsistentLookasideCache : NSObject <FBInvalidating> {

	char _invalidated;
	mutex _invalidatedLock;
	NSObject*<OS_dispatch_queue> _queue;
	atomic<bool> _queueSuspended;
	atomic<bool> _deferredWorkCompleted;
	FBAnalyticsPerfLogger* _logger;
	unique_ptr<facebook::mobile::FBMemModel::detail::CLCImplGraphStore, std::__1::default_delete<facebook::mobile::FBMemModel::detail::CLCImplGraphStore> >* _impl;
	unsigned long _storeMaxSize;
	unsigned _storeMaxSizeCounter;
	atomic<unsigned int> _pendingCache;
	atomic<unsigned int> _pendingAddObserver;
	atomic<unsigned int> _pendingUpdate;
	atomic<unsigned int> _pendingMutation;
	id<NSObject> _enteredBackgroundNotificationHandle;
	id<NSObject> _lowMemoryNotificationHandle;
	atomic<bool> _deferredNotificationsInProgress;
	int _nSkippedFlushCounter;

}

@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (getter=isValid,nonatomic,readonly) char valid; 
-(id)addConsistentFieldUpdateObserver:(id)arg1 selector:(SEL)arg2 forObject:(id)arg3 includingFieldsQueriedInFieldSet:(const FBGraphQLFieldSet*)arg4 ;
-(void)cacheConsistentFieldsInMemModel:(id)arg1 callbackQueue:(id)arg2 completionBlock:(/*^block*/id)arg3 ;
-(void)expireObservers:(/*^block*/id)arg1 callbackQueue:(id)arg2 ;
-(void)cacheConsistentFieldsInResponse:(id)arg1 toQuery:(id)arg2 callbackQueue:(id)arg3 completionBlock:(/*^block*/id)arg4 ;
-(void)updateWithConsistentValues:(id)arg1 forFields:(const FBGraphQLFieldSet*)arg2 callbackQueue:(id)arg3 completionBlock:(/*^block*/id)arg4 ;
-(void)receivedEnterBackgroundNotification;
-(void)cacheConsistentFieldsInMutationPayload:(id)arg1 callbackQueue:(id)arg2 completionBlock:(/*^block*/id)arg3 forMutationName:(id)arg4 ;
-(void)updateWithConsistentValuesForFieldsInResponse:(id)arg1 toQuery:(id)arg2 callbackQueue:(id)arg3 completionBlock:(/*^block*/id)arg4 ;
-(id)initWithGraphStore:(function<std::__1::shared_ptr<facebook::mobile::graphstore::GraphStore> ()>*)arg1 logger:(id)arg2 manager:(id)arg3 storeMaxSize:(unsigned long)arg4 ;
-(void)clearInMemoryCache;
-(id)initWithImpl:(unique_ptr<facebook::mobile::FBMemModel::detail::CLCImplGraphStore, std::__1::default_delete<facebook::mobile::FBMemModel::detail::CLCImplGraphStore> >*)arg1 startupManager:(id)arg2 logger:(id)arg3 storeMaxSize:(unsigned long)arg4 ;
-(void)checkSizeOfBackingStore;
-(void)cacheConsistentFieldsInMemModel:(id)arg1 callbackQueue:(id)arg2 completionBlock:(/*^block*/id)arg3 forQuery:(id)arg4 ;
-(void)_cacheConsistentFieldsInMemModelsImpl:(id)arg1 callbackQueue:(id)arg2 completionBlock:(/*^block*/id)arg3 forPublisher:(PublisherDescription*)arg4 ;
-(char)_validateMemModel:(id)arg1 callbackQueue:(id)arg2 completionBlock:(/*^block*/id)arg3 ;
-(void)_notifyDirtyObservers;
-(void)_notifyDirtyObserversStep:(unsigned long)arg1 startTime:(double)arg2 ;
-(void)registerDebugValidators:(/*^block*/id)arg1 ;
-(void)cacheConsistentFieldsInMemModels:(id)arg1 callbackQueue:(id)arg2 completionBlock:(/*^block*/id)arg3 ;
-(id)cacheConsistentFieldsInMutation:(id)arg1 callbackQueue:(id)arg2 completionBlock:(/*^block*/id)arg3 ;
-(void)cacheConsistentFieldsInMemModels:(id)arg1 callbackQueue:(id)arg2 completionBlock:(/*^block*/id)arg3 forQuery:(id)arg4 ;
-(void)setExpander:(id)arg1 ;
-(id)queue;
-(void)dealloc;
-(void)invalidate;
-(char)isValid;
-(void)resume;
@end

