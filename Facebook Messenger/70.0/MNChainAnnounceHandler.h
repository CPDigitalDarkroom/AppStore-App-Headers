/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 14, 2016 at 2:22:18 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/B4BDDC65-4400-4BC5-A974-2245FB5B0846/MessengerCompressed-iphoneos-arm64,iphoneos-armv7.app/MessengerCompressed-iphoneos-arm64,iphoneos-armv7
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <MessengerCompressed-iphoneos-arm64,iphoneos-armv7/MessengerCompressed-iphoneos-arm64,iphoneos-armv7-Structs.h>
#import <MessengerCompressed-iphoneos-arm64,iphoneos-armv7/MNChainRequestReceiving.h>
#import <MessengerCompressed-iphoneos-arm64,iphoneos-armv7/MNChainRequestForwarding.h>
#import <MessengerCompressed-iphoneos-arm64,iphoneos-armv7/MNChainResponsePropagating.h>

@protocol MNChainRequestHandling, MNAuthenticationManager;
@class NSMutableDictionary, NSString;

@interface MNChainAnnounceHandler : NSObject <MNChainRequestReceiving, MNChainRequestForwarding, MNChainResponsePropagating> {

	id<MNChainRequestHandling> _nextHandler;
	id<MNAuthenticationManager> _authManager;
	NSMutableDictionary* _requestKeyToRequestStateMap;

}

@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)handleMessageFetchRequest:(id)arg1 listener:(id)arg2 ;
-(void)handleMessageBatchRequest:(id)arg1 listener:(id)arg2 ;
-(id)initWithAuthenticationManager:(id)arg1 ;
-(void)_cleanupRequestForKey:(NSNumber*)arg1 ;
-(void)handleBatchThreadSummaryRequest:(id)arg1 listener:(id)arg2 ;
-(void)handleBatchThreadRequest:(id)arg1 listener:(id)arg2 ;
-(void)handleJointRequest:(id)arg1 listener:(id)arg2 ;
-(void)handleSecureThreadRequest:(id)arg1 listener:(id)arg2 ;
-(void)handleBatchSecureAndSyncedThreadRequest:(id)arg1 listener:(id)arg2 ;
-(void)handleThreadListRequest:(id)arg1 listener:(id)arg2 ;
-(void)handleJointThreadListRequest:(id)arg1 listener:(id)arg2 ;
-(void)configureWithNextChainHandler:(id)arg1 ;
-(void)chainRequestId:(unsigned long)arg1 wasHandled:(id)arg2 ;
-(void)chainRequestId:(unsigned long)arg1 failedWithError:(id)arg2 ;
-(void)chainRequestId:(unsigned long)arg1 didUpdateResponse:(id)arg2 ;
-(void)longOperationDidBeginForChainRequestId:(unsigned long)arg1 ;
@end

