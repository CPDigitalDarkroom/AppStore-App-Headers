/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 14, 2016 at 2:22:56 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/B4BDDC65-4400-4BC5-A974-2245FB5B0846/MessengerCompressed-iphoneos-arm64,iphoneos-armv7.app/MessengerCompressed-iphoneos-arm64,iphoneos-armv7
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <MessengerCompressed-iphoneos-arm64,iphoneos-armv7/MessengerCompressed-iphoneos-arm64,iphoneos-armv7-Structs.h>
#import <MessengerCompressed-iphoneos-arm64,iphoneos-armv7/FBPersistentKeyValueStore.h>
#import <MessengerCompressed-iphoneos-arm64,iphoneos-armv7/FBDiskCacheProtocol.h>

@class NSString;

@interface FBDiskCache : FBPersistentKeyValueStore <FBDiskCacheProtocol> {

	shared_ptr<facebook::mobile::xplat::compactdisk::DiskCache>* _diskCache;
	char _enforceExtendedMetadata;

}

@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (getter=isValid,nonatomic,readonly) char valid; 
-(void)cacheData:(id)arg1 toDiskForKey:(id)arg2 options:(unsigned)arg3 queue:(id)arg4 completionBlock:(/*^block*/id)arg5 ;
-(id)dataForKey:(id)arg1 options:(unsigned)arg2 modificationDate:(id*)arg3 ;
-(void)cacheData:(id)arg1 toDiskForKey:(id)arg2 queue:(id)arg3 completionBlock:(/*^block*/id)arg4 ;
-(void)setEnforceExtendedMetadata;
-(void)fetchCachedDataOnDiskForKey:(id)arg1 queue:(id)arg2 completionBlock:(/*^block*/id)arg3 ;
-(void)fetchCachedDataOnDiskForKey:(id)arg1 options:(unsigned)arg2 queue:(id)arg3 completionBlock:(/*^block*/id)arg4 ;
-(void)fetchFirstCachedDataOnDiskForKeys:(id)arg1 options:(unsigned)arg2 queue:(id)arg3 completionBlock:(/*^block*/id)arg4 ;
-(id)initWithURL:(id)arg1 name:(id)arg2 tmpDirPath:(id)arg3 maxCapacity:(id)arg4 staleAge:(double)arg5 lruSizeLimit:(unsigned)arg6 survivalSize:(unsigned)arg7 inlineData:(BOOL)arg8 ;
-(void)fetchFirstCachedDataOnDiskForKeys:(id)arg1 queue:(id)arg2 completionBlock:(/*^block*/id)arg3 ;
-(id)initWithStore:(shared_ptr<facebook::mobile::xplat::compactdisk::DiskCache>*)arg1 ;
-(id)initWithURL:(id)arg1 ;
@end

