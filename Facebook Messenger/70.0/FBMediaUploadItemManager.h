/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 14, 2016 at 2:22:05 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/B4BDDC65-4400-4BC5-A974-2245FB5B0846/MessengerCompressed-iphoneos-arm64,iphoneos-armv7.app/MessengerCompressed-iphoneos-arm64,iphoneos-armv7
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <MessengerCompressed-iphoneos-arm64,iphoneos-armv7/FBMediaUploadItemDelegate.h>

@protocol FBNetworkDispatch;
@class FBComposerLogger, FBExperimentManager, FBPersistentKeyValueStore, FBUserPreferences, FBVideoUploadCache, NSString, NSMutableDictionary, FBComposerImageUploadItemResultStore, FBMediaUploadItemManagerListenerAnnouncer, NSMutableArray, NSError;

@interface FBMediaUploadItemManager : NSObject <FBMediaUploadItemDelegate> {

	char _enableBackgroundUpload;
	unsigned _publishBackgroundTaskIdentifier;
	FBComposerLogger* _logger;
	FBExperimentManager* _experimentManager;
	id<FBNetworkDispatch> _networkDispatcher;
	FBPersistentKeyValueStore* _persistentKeyValueStore;
	FBUserPreferences* _userPreferences;
	FBVideoUploadCache* _videoUploadCache;
	int _numOfScheduledItems;
	int _numOfItemsInProcessingStep;
	int _scheduledItemsLimit;
	int _itemsInProcessingStepLimit;
	int _currentNetworkPenalty;
	char _uploadingSingleVideoThatNeedsPublishing;
	NSString* _mediaLoggingTag;
	NSString* _composerSessionID;
	char _didStartForegroundPerfLogging;
	char _hdPhotoUploadEnabled;
	NSMutableDictionary* _alreadyUploadedMediaUploadItemsCache;
	FBComposerImageUploadItemResultStore* _imageUploadItemResultStore;
	char _isRetry;
	char _specialCasePanoramas;
	int _status;
	int _priorityStatus;
	FBMediaUploadItemManagerListenerAnnouncer* _announcer;
	float _uploadCompressionRate;
	float _progress;
	int _maximumDimension;
	NSMutableArray* _allMediaUploadItems;
	NSError* _uploadError;

}

@property (nonatomic,retain) NSMutableArray * allMediaUploadItems;                                 //@synthesize allMediaUploadItems=_allMediaUploadItems - In the implementation block
@property (nonatomic,retain) NSError * uploadError;                                                //@synthesize uploadError=_uploadError - In the implementation block
@property (nonatomic,readonly) int status;                                                         //@synthesize status=_status - In the implementation block
@property (nonatomic,readonly) char requiredReorderOperation; 
@property (nonatomic,readonly) int priorityStatus;                                                 //@synthesize priorityStatus=_priorityStatus - In the implementation block
@property (assign,nonatomic) char isRetry;                                                         //@synthesize isRetry=_isRetry - In the implementation block
@property (nonatomic,readonly) FBMediaUploadItemManagerListenerAnnouncer * announcer;              //@synthesize announcer=_announcer - In the implementation block
@property (assign,nonatomic) float uploadCompressionRate;                                          //@synthesize uploadCompressionRate=_uploadCompressionRate - In the implementation block
@property (nonatomic,readonly) float progress;                                                     //@synthesize progress=_progress - In the implementation block
@property (assign,nonatomic) int maximumDimension;                                                 //@synthesize maximumDimension=_maximumDimension - In the implementation block
@property (assign,nonatomic) char specialCasePanoramas;                                            //@synthesize specialCasePanoramas=_specialCasePanoramas - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(FBMediaUploadItemManagerListenerAnnouncer *)announcer;
-(id)mediaFBIDs;
-(void)cancelAllUploadRequest;
-(id)initWithSession:(id)arg1 logger:(id)arg2 persistentKeyValueStore:(id)arg3 coreComposerObjectStore:(id)arg4 experimentManager:(id)arg5 networkDispatcher:(id)arg6 userPreferences:(id)arg7 imageUploadType:(unsigned)arg8 ;
-(void)startUploadMediaAttachmentsFromPublisherData:(id)arg1 discardAndReupload:(char)arg2 ;
-(void)resumeUploadWithPriorityStatus:(int)arg1 ;
-(char)isRetry;
-(id)assetIDsToMediaInfo;
-(int)priorityStatus;
-(void)_assetLibraryDidChangeAssets:(id)arg1 ;
-(void)_releaseResourceForProcessingQueue;
-(void)_decreaseNetworkPenaltyDueToItemSucess;
-(void)_releaseResourceForUploadingQueueAndShouldScheduleMore:(char)arg1 ;
-(char)_allItemsAreDone;
-(void)_completeAllUploadItems;
-(void)_increaseNetworkPenaltyDueToItemFailure;
-(id)_newImageUploadItemFromPublisherData:(id)arg1 attachmentID:(id)arg2 ;
-(id)_newVideoUploadItemFromPublisherData:(id)arg1 attachmentID:(id)arg2 useSegmentedUpload:(char)arg3 shouldUploadVideoWithoutPublishing:(char)arg4 showServerProcessingProgress:(char)arg5 shouldRecoverState:(char)arg6 shouldForceUsingNativeEncoder:(char)arg7 shouldForceRawFileUpload:(char)arg8 ;
-(id)_newOGImageUploadItemFromPublisherData:(id)arg1 attachmentID:(id)arg2 ;
-(id)_newRemoteVideoUploadItemFromPublisherData:(id)arg1 attachmentID:(id)arg2 ;
-(void)_manageUploadItemsFromPublisherData:(id)arg1 discardAndReupload:(char)arg2 ;
-(id)_mediaUploadItemsInStartedOrPausedState;
-(void)_logForegroundUploadStartedIfNeeded;
-(void)_resetProcessingLimit:(int)arg1 uploadingLimit:(int)arg2 ;
-(void)_scheduleAdditionUploadItemIfPossible;
-(void)_manageVideoUploadItemFromPublisherData:(id)arg1 attachmentID:(id)arg2 discardAndReupload:(char)arg3 ;
-(void)_manageMediaUploadItemsFromPublisherData:(id)arg1 discardAndReupload:(char)arg2 ;
-(void)_manageOGMediaAttachmentUploadItemsFromPublisherData:(id)arg1 discardAndReupload:(char)arg2 ;
-(void)_refreshProgressFromUploadItems;
-(id)_newImageUploadItemFromPublisherData:(id)arg1 attachment:(id)arg2 ;
-(void)setAllMediaUploadItems:(NSMutableArray *)arg1 ;
-(void)_logUploadEnded;
-(void)_logPhotoUploadQuality;
-(void)_scheduleAdditionUploadItemIfPossibleAndWeAreInStartedState;
-(id)_nextMediaItemForUpload;
-(void)mediaUploadItemDidStart:(id)arg1 ;
-(void)mediaUploadItemDidFinishProcessingStep:(id)arg1 ;
-(void)mediaUploadItemDidFinish:(id)arg1 ;
-(void)mediaUploadItem:(id)arg1 didFailWithError:(id)arg2 allowBackgroundTask:(char)arg3 ;
-(void)mediaUploadItemDidSendCancelRequest:(id)arg1 ;
-(void)mediaUploadItemDidCancel:(id)arg1 ;
-(void)mediaUploadItemRestart:(id)arg1 ;
-(void)mediaUploadItem:(id)arg1 didUpdateToProgress:(float)arg2 fromProgress:(float)arg3 ;
-(char)requiredReorderOperation;
-(void)setMediaOrdering:(id)arg1 ;
-(void)pauseAllVideoUploadRequest;
-(id)mediaFBIDsToUploadSuccessTimes;
-(id)mediaFBIDsToUploadSessionIDs;
-(id)currentUploadMediaItemForDisplaying;
-(void)removeItemFromAlreadyUploadedMediaUploadItemsCache:(id)arg1 ;
-(void)setIsRetry:(char)arg1 ;
-(float)uploadCompressionRate;
-(void)setUploadCompressionRate:(float)arg1 ;
-(char)specialCasePanoramas;
-(void)setSpecialCasePanoramas:(char)arg1 ;
-(NSMutableArray *)allMediaUploadItems;
-(void)_endBackgroundTask;
-(id)error;
-(void)dealloc;
-(void)_didReceiveMemoryWarning:(id)arg1 ;
-(float)progress;
-(int)status;
-(void)removeListener:(id)arg1 ;
-(void)addListener:(id)arg1 ;
-(NSError *)uploadError;
-(void)setUploadError:(NSError *)arg1 ;
-(int)maximumDimension;
-(void)setMaximumDimension:(int)arg1 ;
-(void)_beginBackgroundTask;
@end

