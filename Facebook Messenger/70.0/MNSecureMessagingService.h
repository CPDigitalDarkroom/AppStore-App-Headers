/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 14, 2016 at 2:22:11 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/B4BDDC65-4400-4BC5-A974-2245FB5B0846/MessengerCompressed-iphoneos-arm64,iphoneos-armv7.app/MessengerCompressed-iphoneos-arm64,iphoneos-armv7
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <MessengerCompressed-iphoneos-arm64,iphoneos-armv7/FBBackgroundingListener.h>
#import <MessengerCompressed-iphoneos-arm64,iphoneos-armv7/MNSecureMessagingStartupStateMachineListener.h>
#import <MessengerCompressed-iphoneos-arm64,iphoneos-armv7/MNSecureThreadServiceControlling.h>
#import <MessengerCompressed-iphoneos-arm64,iphoneos-armv7/MNSecureMessageSending.h>
#import <MessengerCompressed-iphoneos-arm64,iphoneos-armv7/MNSecureImageRequesting.h>

@protocol MNAuthenticationManager, MNSecureMessagingSendHandling, FBClock, OS_dispatch_queue;
@class FBOmnistore, FBUserSession, FBBackgroundingAnnouncer, MNSecureMessagingStore, MNSecureMessagingRequestCoordinator, MNSecureMessagingOutgoingMessageCoordinator, MNSecureMessagingIncomingMessageCoordinator, MNSecureMessagingPacketFactory, MNSecureMessagingReceiptSender, MNSecureThreadCacheInvalidatingAnnouncementInterceptor, MNSecureMessagingStoreListenerAnnouncer, MNSecureMessageSendListeningAnnouncer, MNSecureThreadExistenceInfoCacheObservingAnnouncer, MNSecureThreadUpdater, MNSecureMessagingImageRequester, MNSecureThreadExistenceInfoCache, MNSecureThreadExistenceInfoCacheUpdater, MNSecureMessagingGlobalStateProvider, MNSecureMessagingStartupStateMachine, MNLocalNotificationController, NSObject, NSString;

@interface MNSecureMessagingService : NSObject <FBBackgroundingListener, MNSecureMessagingStartupStateMachineListener, MNSecureThreadServiceControlling, MNSecureMessageSending, MNSecureImageRequesting> {

	FBOmnistore* _omnistore;
	FBUserSession* _session;
	id<MNAuthenticationManager> _authManager;
	FBBackgroundingAnnouncer* _backgroundingAnnouncer;
	MNSecureMessagingStore* _messagingStore;
	MNSecureMessagingRequestCoordinator* _requestCoordinator;
	MNSecureMessagingOutgoingMessageCoordinator* _sendMessageCoordinator;
	MNSecureMessagingIncomingMessageCoordinator* _receiveMessageCoordinator;
	id<MNSecureMessagingSendHandling> _sendHandler;
	MNSecureMessagingPacketFactory* _factory;
	MNSecureMessagingReceiptSender* _receiptSender;
	MNSecureThreadCacheInvalidatingAnnouncementInterceptor* _cacheInvalidatingAnnouncementInterceptor;
	MNSecureMessagingStoreListenerAnnouncer* _storeListenerAnnouncer;
	MNSecureMessageSendListeningAnnouncer* _sendListenerAnnouncer;
	MNSecureThreadExistenceInfoCacheObservingAnnouncer* _threadExistenceInfoCacheObserverAnnouncer;
	MNSecureThreadUpdater* _threadUpdater;
	MNSecureMessagingImageRequester* _imageRequester;
	MNSecureThreadExistenceInfoCache* _threadExistenceInfoCache;
	MNSecureThreadExistenceInfoCacheUpdater* _threadExistenceInfoCacheUpdater;
	MNSecureMessagingGlobalStateProvider* _stateProvider;
	MNSecureMessagingStartupStateMachine* _startupStateMachine;
	MNLocalNotificationController* _localNotificationController;
	id<FBClock> _clock;
	NSObject*<OS_dispatch_queue> _queue;

}

@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id)fetchPhotoImageFromSecurePhotoSource:(id)arg1 queue:(id)arg2 success:(/*^block*/id)arg3 failure:(/*^block*/id)arg4 ;
-(void)addSendListener:(id)arg1 ;
-(void)removeSendListener:(id)arg1 ;
-(void)addThreadExistenceInfoCacheObserver:(id)arg1 ;
-(void)removeThreadExistenceInfoCacheObserver:(id)arg1 ;
-(void)addSecureThreadRequestAcceptListener:(id)arg1 ;
-(void)removeSecureThreadRequestAcceptListener:(id)arg1 ;
-(void)setExternalSecureThreadCacheInvalidator:(id)arg1 ;
-(id)readThreadWithKey:(id)arg1 messageRange:(id)arg2 callbackQueue:(id)arg3 completeBlock:(/*^block*/id)arg4 ;
-(id)readThreadsInRange:(id)arg1 numberOfMessagesPerThread:(int)arg2 callbackQueue:(id)arg3 completeBlock:(/*^block*/id)arg4 ;
-(id)readThreadSummariesWithOtherUserFbIds:(id)arg1 callbackQueue:(id)arg2 completeBlock:(/*^block*/id)arg3 ;
-(void)runSecureThreadSummaryUpdate:(id)arg1 callbackQueue:(id)arg2 completeBlock:(/*^block*/id)arg3 ;
-(id)mostRecentlyActiveSecureThreadExistenceInfoForOtherUserId:(id)arg1 ;
-(void)updateLatestSecureThreadExistenceInfoForOtherUserIdIfUnknown:(id)arg1 ;
-(void)sendRequestToUser:(id)arg1 callbackQueue:(id)arg2 requestPersistedBlock:(/*^block*/id)arg3 ;
-(void)didEnterForeground;
-(void)didStartOmnistoreSyncingWithMessagingStore:(id)arg1 requestCoordinator:(id)arg2 sendMessageCoordinator:(id)arg3 receiveMessageCoordinator:(id)arg4 threadUpdater:(id)arg5 imageRequester:(id)arg6 ;
-(void)didStartCryptoServices;
-(void)didDeleteCachedMessagesDueToCryptoError;
-(id)initWithOmnistore:(id)arg1 userSession:(id)arg2 authManager:(id)arg3 localNotificationController:(id)arg4 backgroundAnnouncer:(id)arg5 clock:(id)arg6 ;
-(void)removeSubscriber:(id)arg1 ;
-(void)stop;
-(void)addSubscriber:(id)arg1 ;
-(void)start:(id)arg1 ;
-(void)sendMessage:(id)arg1 ;
-(void)handleIdle;
-(void)didEnterBackground;
@end

