/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 14, 2016 at 2:22:03 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/B4BDDC65-4400-4BC5-A974-2245FB5B0846/MessengerCompressed-iphoneos-arm64,iphoneos-armv7.app/MessengerCompressed-iphoneos-arm64,iphoneos-armv7
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <MessengerCompressed-iphoneos-arm64,iphoneos-armv7/FBMNetworkProtocolChangeListener.h>
#import <MessengerCompressed-iphoneos-arm64,iphoneos-armv7/FBMSPGraphQLSequenceIdFetcherDelegate.h>
#import <MessengerCompressed-iphoneos-arm64,iphoneos-armv7/FBMSPErrorRetryManagerDelegate.h>
#import <MessengerCompressed-iphoneos-arm64,iphoneos-armv7/FBSessionClassProvidable.h>
#import <MessengerCompressed-iphoneos-arm64,iphoneos-armv7/FBMMessagingStoreRestoreStateListening.h>
#import <MessengerCompressed-iphoneos-arm64,iphoneos-armv7/MNMessagesSyncDeltaHandlerDataRefreshing.h>
#import <MessengerCompressed-iphoneos-arm64,iphoneos-armv7/MNMessagesSyncCoordinatorRefreshRetrierDelegate.h>

@protocol MNAuthenticationManager;
@class FBMSPDataStore, MNSyncProtocolQueueRequester, MNSyncProtocolDeltaRequester, FBMNetworkProtocolController, NSNotificationCenter, FBMMQTTManager, FBMSPErrorRetryManager, MNMessagesSyncCoordinatorRefreshRetrier, MNSyncProtocolCoordinatorListenerAnnouncer, FBAnalytics, FBMSPGraphQLSequenceIdFetcher, FBUserSession, FBMobileConfigFactory, MNMessagesSyncSnapshotPersistenceRunner, FBMSyncProtocolMessagesQueueParamsProvider, FBMSyncProtocolRequestProvider, NSString;

@interface FBMSPCoordinator : NSObject <FBMNetworkProtocolChangeListener, FBMSPGraphQLSequenceIdFetcherDelegate, FBMSPErrorRetryManagerDelegate, FBSessionClassProvidable, FBMMessagingStoreRestoreStateListening, MNMessagesSyncDeltaHandlerDataRefreshing, MNMessagesSyncCoordinatorRefreshRetrierDelegate> {

	FBMSPDataStore* _dataStore;
	MNSyncProtocolQueueRequester* _queueRequester;
	MNSyncProtocolDeltaRequester* _deltaRequester;
	FBMNetworkProtocolController* _networkProtocolController;
	NSNotificationCenter* _notificationCenter;
	FBMMQTTManager* _mqttManager;
	FBMSPErrorRetryManager* _retryManager;
	MNMessagesSyncCoordinatorRefreshRetrier* _coordinatorRefreshRetier;
	MNSyncProtocolCoordinatorListenerAnnouncer* _spCoordinatorAnnouncer;
	FBAnalytics* _analyticsLogger;
	FBMSPGraphQLSequenceIdFetcher* _graphQLSequenceIdFetcher;
	FBUserSession* _session;
	FBMobileConfigFactory* _mobileConfigFactory;
	MNMessagesSyncSnapshotPersistenceRunner* _snapshotPersistenceRunner;
	FBMSyncProtocolMessagesQueueParamsProvider* _queueParamsProvider;
	char _didSuccessfullySendQueueParams;
	long long _lastDeltaRequestSequenceId;
	unsigned long long _lastDeltaRequestTimeInMS;
	char _didStart;
	id<MNAuthenticationManager> _authManager;
	FBMSyncProtocolRequestProvider* _spRequestProvider;

}

@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id)initWithProviderMapData:(id)arg1 ;
-(void)addSPCoordinatorListener:(id)arg1 ;
-(void)messagingStoreDidFailToRestoreWithError:(id)arg1 ;
-(void)messagingStoreDidCompleteRestore;
-(void)removeSPCoordinatorListener:(id)arg1 ;
-(void)networkProtocolDidChange:(unsigned)arg1 ;
-(id)initWithDataStore:(id)arg1 queueRequester:(id)arg2 deltaRequester:(id)arg3 networkProtocolController:(id)arg4 mqttManager:(id)arg5 retryManager:(id)arg6 notificationCenter:(id)arg7 analyticsLogger:(id)arg8 graphQLSequenceIdFetcher:(id)arg9 session:(id)arg10 mobileConfigFactory:(id)arg11 queueParamsProvider:(id)arg12 snapshotPersistenceRunner:(id)arg13 authenticationManager:(id)arg14 spRequestProvider:(id)arg15 coordinatorRefreshRetier:(id)arg16 ;
-(void)_handleRefreshForNotification:(id)arg1 ;
-(void)_onMQTTSubscribeToPatternNotification:(id)arg1 ;
-(void)_requestSyncProtocolQueue;
-(void)_fetchDeltaWithShouldForce:(char)arg1 ;
-(void)_refreshWithShouldForce:(char)arg1 skipDeltaFetch:(char)arg2 ;
-(void)_handleNewSequenceIdFromSnapshotRefresh:(long long)arg1 ;
-(void)_handleRefreshForReason:(int)arg1 ;
-(void)_logCreateQueueRequestSucceeded;
-(void)_logCreateQueueRequestFailedWithError:(id)arg1 ;
-(char)_shouldCoalesceDeltaRequest;
-(void)_logGetDiffsRequestSucceeded;
-(void)_logGetDiffsRequestFailedWithError:(id)arg1 ;
-(void)_getSequenceIdFromGraphQL;
-(void)_logCoordinatorRefreshWithReason:(int)arg1 ;
-(void)graphQLSequenceIdFetcher:(id)arg1 fetchedSequenceId:(long long)arg2 count:(unsigned)arg3 ;
-(void)graphQLSequenceIdFetcherFailedToFetchSequenceId:(id)arg1 ;
-(void)messagesSyncCoordinatorShouldPerformRefreshNow;
-(void)snapshotShouldBeFiredDueToForceFetchInboxDeltaReceived;
-(void)snapshotShouldBeFiredDueToQueueErrors;
-(void)snapshotShouldBeFiredDueToErrorProcessingDeltas;
-(void)syncProtocolConnectionShouldBeRefreshedDueToSequenceIdGap;
-(void)syncProtocolConnectionShouldBeRefreshedDueToTemporarilyUnavailableError;
-(void)syncProtocolErrorRetryManager:(id)arg1 didFetchDataUpToSequenceId:(long long)arg2 ;
-(void)dealloc;
-(void)stop;
-(void)start;
@end

