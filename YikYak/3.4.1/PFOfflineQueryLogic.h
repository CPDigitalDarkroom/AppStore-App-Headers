/*
* This header is generated by classdump-dyld 1.0
* on Friday, April 22, 2016 at 10:58:12 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/D8C1ED38-25E6-459D-9E28-E2C1B463D6A5/Yik Yak.app/Yik Yak
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@class PFOfflineStore;

@interface PFOfflineQueryLogic : NSObject {

	PFOfflineStore* _offlineStore;

}

@property (nonatomic,retain) PFOfflineStore * offlineStore;              //@synthesize offlineStore=_offlineStore - In the implementation block
+(char)matchesArray:(id)arg1 constraint:(id)arg2 withDecider:(/*^block*/id)arg3 ;
+(char)matchesValue:(id)arg1 constraint:(id)arg2 withDecider:(/*^block*/id)arg3 ;
+(char)matchesValue:(id)arg1 equalTo:(id)arg2 ;
+(char)matchesValue:(id)arg1 containedIn:(id)arg2 ;
+(char)matchesValue:(id)arg1 notEqualTo:(id)arg2 ;
+(char)matchesValue:(id)arg1 lessThan:(id)arg2 ;
+(char)matchesValue:(id)arg1 lessThanOrEqualTo:(id)arg2 ;
+(char)matchesValue:(id)arg1 greaterThan:(id)arg2 ;
+(char)matchesValue:(id)arg1 greaterThanOrEqualTo:(id)arg2 ;
+(char)matchesValue:(id)arg1 notContainedIn:(id)arg2 ;
+(char)matchesValue:(id)arg1 containsAllObjectsInArray:(id)arg2 ;
+(char)matchesValue:(id)arg1 regex:(id)arg2 withOptions:(id)arg3 ;
+(char)matchesValue:(id)arg1 exists:(id)arg2 ;
+(char)matchesValue:(id)arg1 nearSphere:(id)arg2 maxDistance:(id)arg3 ;
+(char)matchesValue:(id)arg1 within:(id)arg2 ;
+(char)matchesValue:(id)arg1 constraint:(id)arg2 operator:(id)arg3 allKeyConstraints:(id)arg4 ;
+(char)userHasReadAccess:(id)arg1 ofObject:(id)arg2 ;
+(char)userHasWriteAccess:(id)arg1 ofObject:(id)arg2 ;
-(id)initWithOfflineStore:(id)arg1 ;
-(/*^block*/id)createMatcherForQuery:(id)arg1 user:(id)arg2 ;
-(id)sort:(id)arg1 query:(id)arg2 ;
-(id)fetchIncludesForObjectAsync:(id)arg1 query:(id)arg2 database:(id)arg3 ;
-(PFOfflineStore *)offlineStore;
-(id)valueForContainer:(id)arg1 key:(id)arg2 depth:(int)arg3 ;
-(id)valueForContainer:(id)arg1 key:(id)arg2 ;
-(/*^block*/id)createMatcherForKey:(id)arg1 inQuery:(id)arg2 user:(id)arg3 ;
-(/*^block*/id)createMatcherForKey:(id)arg1 select:(id)arg2 user:(id)arg3 ;
-(/*^block*/id)createMatcherForKey:(id)arg1 notInQuery:(id)arg2 user:(id)arg3 ;
-(/*^block*/id)createMatcherForKey:(id)arg1 dontSelect:(id)arg2 user:(id)arg3 ;
-(/*^block*/id)createMatcherWithQueryConstraints:(id)arg1 user:(id)arg2 ;
-(/*^block*/id)createOrMatcherForQueries:(id)arg1 user:(id)arg2 ;
-(/*^block*/id)createMatcherWithOperator:(id)arg1 constraints:(id)arg2 key:(id)arg3 allKeyConstraints:(id)arg4 user:(id)arg5 ;
-(id)fetchIncludeAsync:(id)arg1 container:(id)arg2 database:(id)arg3 ;
-(void)setOfflineStore:(PFOfflineStore *)arg1 ;
@end

