/*
* This header is generated by classdump-dyld 1.0
* on Friday, April 22, 2016 at 10:58:12 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/D8C1ED38-25E6-459D-9E28-E2C1B463D6A5/Yik Yak.app/Yik Yak
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol OS_dispatch_queue;
@class NSObject, NSString, PFTaskQueue, NSOperation;

@interface PFFile : NSObject {

	NSObject*<OS_dispatch_queue> _synchronizationQueue;
	NSString* _name;
	NSString* _url;
	NSString* _customContentType;
	PFTaskQueue* _taskQueue;
	NSOperation* _cancellationToken;
	NSOperation* _currentNetworkOperation;

}

@property (nonatomic,copy) NSString * name;                                      //@synthesize name=_name - In the implementation block
@property (nonatomic,copy) NSString * url;                                       //@synthesize url=_url - In the implementation block
@property (nonatomic,readonly) char isDirty; 
@property (readonly) char isDataAvailable; 
@property (getter=isDirty,nonatomic,readonly) char dirty; 
@property (nonatomic,copy) NSString * customContentType;                         //@synthesize customContentType=_customContentType - In the implementation block
@property (nonatomic,retain) PFTaskQueue * taskQueue;                            //@synthesize taskQueue=_taskQueue - In the implementation block
@property (nonatomic,retain) NSOperation * cancellationToken;                    //@synthesize cancellationToken=_cancellationToken - In the implementation block
@property (nonatomic,retain) NSOperation * currentNetworkOperation;              //@synthesize currentNetworkOperation=_currentNetworkOperation - In the implementation block
+(id)fileWithName:(id)arg1 data:(id)arg2 contentType:(id)arg3 ;
+(id)_cacheFilesDirectoryPath;
+(id)_stageFilesDirectoryPath;
+(id)fileWithData:(id)arg1 ;
+(id)fileWithName:(id)arg1 data:(id)arg2 ;
+(id)fileWithName:(id)arg1 contentsAtPath:(id)arg2 ;
+(id)fileWithData:(id)arg1 contentType:(id)arg2 ;
+(void)_clearFileCache;
+(id)fileWithName:(id)arg1 url:(id)arg2 ;
+(void)initialize;
-(void)saveInBackgroundWithBlock:(/*^block*/id)arg1 ;
-(void)saveInBackgroundWithTarget:(id)arg1 selector:(SEL)arg2 ;
-(NSOperation *)cancellationToken;
-(id)_stagingFilePath;
-(void)setCustomContentType:(NSString *)arg1 ;
-(id)_uploadAsyncWithProgressBlock:(/*^block*/id)arg1 ;
-(id)getData:(id*)arg1 ;
-(id)getDataStream:(id*)arg1 ;
-(id)getDataInBackground;
-(id)getDataStreamInBackground;
-(id)_getDataStreamAsyncWithProgressBlock:(/*^block*/id)arg1 ;
-(void)getDataInBackgroundWithBlock:(/*^block*/id)arg1 progressBlock:(/*^block*/id)arg2 ;
-(void)getDataStreamInBackgroundWithBlock:(/*^block*/id)arg1 progressBlock:(/*^block*/id)arg2 ;
-(void)getDataInBackgroundWithBlock:(/*^block*/id)arg1 ;
-(NSOperation *)currentNetworkOperation;
-(void)_performDataAccessBlock:(/*^block*/id)arg1 ;
-(id)initWithName:(id)arg1 url:(id)arg2 ;
-(void)setCancellationToken:(NSOperation *)arg1 ;
-(void)_performProgressBlockAsync:(/*^block*/id)arg1 withProgress:(int)arg2 ;
-(id)_uploadFileAsyncWithSessionToken:(id)arg1 cancellationToken:(id)arg2 progressBlock:(/*^block*/id)arg3 ;
-(id)_mimeType;
-(void)setCurrentNetworkOperation:(NSOperation *)arg1 ;
-(id)_cachedFilePath;
-(id)_downloadAsyncWithProgressBlock:(/*^block*/id)arg1 ;
-(id)_cachedData;
-(id)_cachedDataStream;
-(id)_downloadAsyncWithCancellationToken:(id)arg1 progressBlock:(/*^block*/id)arg2 ;
-(id)_downloadFileAsyncWithCancellationToken:(id)arg1 progressBlock:(/*^block*/id)arg2 ;
-(NSString *)customContentType;
-(void)saveInBackgroundWithBlock:(/*^block*/id)arg1 progressBlock:(/*^block*/id)arg2 ;
-(id)getData;
-(id)getDataStream;
-(void)getDataStreamInBackgroundWithBlock:(/*^block*/id)arg1 ;
-(void)getDataInBackgroundWithTarget:(id)arg1 selector:(SEL)arg2 ;
-(id)_getDataAsyncWithProgressBlock:(/*^block*/id)arg1 ;
-(char)save;
-(void)cancel;
-(void)dealloc;
-(void)setName:(NSString *)arg1 ;
-(NSString *)name;
-(NSString *)url;
-(void)setUrl:(NSString *)arg1 ;
-(PFTaskQueue *)taskQueue;
-(void)setTaskQueue:(PFTaskQueue *)arg1 ;
-(char)save:(id*)arg1 ;
-(id)saveInBackground;
-(char)isDataAvailable;
-(char)isDirty;
@end

