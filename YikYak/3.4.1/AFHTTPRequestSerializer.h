/*
* This header is generated by classdump-dyld 1.0
* on Friday, April 22, 2016 at 10:58:06 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/D8C1ED38-25E6-459D-9E28-E2C1B463D6A5/Yik Yak.app/Yik Yak
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Yik Yak/Yik Yak-Structs.h>
#import <Yik Yak/AFURLRequestSerialization.h>

@class NSSet, NSMutableSet, NSMutableDictionary, NSDictionary, NSString;

@interface AFHTTPRequestSerializer : NSObject <AFURLRequestSerialization> {

	char _allowsCellularAccess;
	char _HTTPShouldHandleCookies;
	char _HTTPShouldUsePipelining;
	unsigned _stringEncoding;
	unsigned _cachePolicy;
	unsigned _networkServiceType;
	NSSet* _HTTPMethodsEncodingParametersInURI;
	NSMutableSet* _mutableObservedChangedKeyPaths;
	NSMutableDictionary* _mutableHTTPRequestHeaders;
	unsigned _queryStringSerializationStyle;
	/*^block*/id _queryStringSerialization;
	double _timeoutInterval;

}

@property (assign,nonatomic) unsigned stringEncoding;                                      //@synthesize stringEncoding=_stringEncoding - In the implementation block
@property (assign,nonatomic) char allowsCellularAccess;                                    //@synthesize allowsCellularAccess=_allowsCellularAccess - In the implementation block
@property (assign,nonatomic) unsigned cachePolicy;                                         //@synthesize cachePolicy=_cachePolicy - In the implementation block
@property (assign,nonatomic) char HTTPShouldHandleCookies;                                 //@synthesize HTTPShouldHandleCookies=_HTTPShouldHandleCookies - In the implementation block
@property (assign,nonatomic) char HTTPShouldUsePipelining;                                 //@synthesize HTTPShouldUsePipelining=_HTTPShouldUsePipelining - In the implementation block
@property (assign,nonatomic) unsigned networkServiceType;                                  //@synthesize networkServiceType=_networkServiceType - In the implementation block
@property (assign,nonatomic) double timeoutInterval;                                       //@synthesize timeoutInterval=_timeoutInterval - In the implementation block
@property (nonatomic,readonly) NSDictionary * HTTPRequestHeaders; 
@property (nonatomic,retain) NSSet * HTTPMethodsEncodingParametersInURI;                   //@synthesize HTTPMethodsEncodingParametersInURI=_HTTPMethodsEncodingParametersInURI - In the implementation block
@property (nonatomic,retain) NSMutableSet * mutableObservedChangedKeyPaths;                //@synthesize mutableObservedChangedKeyPaths=_mutableObservedChangedKeyPaths - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * mutableHTTPRequestHeaders;              //@synthesize mutableHTTPRequestHeaders=_mutableHTTPRequestHeaders - In the implementation block
@property (assign,nonatomic) unsigned queryStringSerializationStyle;                       //@synthesize queryStringSerializationStyle=_queryStringSerializationStyle - In the implementation block
@property (nonatomic,copy) id queryStringSerialization;                                    //@synthesize queryStringSerialization=_queryStringSerialization - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(char)supportsSecureCoding;
+(char)automaticallyNotifiesObserversForKey:(id)arg1 ;
+(id)serializer;
-(id)requestWithMethod:(id)arg1 URLString:(id)arg2 parameters:(id)arg3 error:(id*)arg4 ;
-(id)multipartFormRequestWithMethod:(id)arg1 URLString:(id)arg2 parameters:(id)arg3 constructingBodyWithBlock:(/*^block*/id)arg4 error:(id*)arg5 ;
-(void)setStringEncoding:(unsigned)arg1 ;
-(void)setMutableHTTPRequestHeaders:(NSMutableDictionary *)arg1 ;
-(void)setHTTPMethodsEncodingParametersInURI:(NSSet *)arg1 ;
-(void)setMutableObservedChangedKeyPaths:(NSMutableSet *)arg1 ;
-(NSMutableDictionary *)mutableHTTPRequestHeaders;
-(void)setQueryStringSerializationStyle:(unsigned)arg1 ;
-(void)setQueryStringSerialization:(id)arg1 ;
-(NSMutableSet *)mutableObservedChangedKeyPaths;
-(id)requestBySerializingRequest:(id)arg1 withParameters:(id)arg2 error:(id*)arg3 ;
-(NSDictionary *)HTTPRequestHeaders;
-(id)queryStringSerialization;
-(unsigned)queryStringSerializationStyle;
-(NSSet *)HTTPMethodsEncodingParametersInURI;
-(void)setAuthorizationHeaderFieldWithUsername:(id)arg1 password:(id)arg2 ;
-(void)setAuthorizationHeaderFieldWithToken:(id)arg1 ;
-(void)clearAuthorizationHeader;
-(void)setQueryStringSerializationWithStyle:(unsigned)arg1 ;
-(void)setQueryStringSerializationWithBlock:(/*^block*/id)arg1 ;
-(id)requestWithMethod:(id)arg1 URLString:(id)arg2 parameters:(id)arg3 ;
-(id)multipartFormRequestWithMethod:(id)arg1 URLString:(id)arg2 parameters:(id)arg3 constructingBodyWithBlock:(/*^block*/id)arg4 ;
-(id)requestWithMultipartFormRequest:(id)arg1 writingStreamContentsToFile:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(char)HTTPShouldHandleCookies;
-(void)setHTTPShouldUsePipelining:(char)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(void)dealloc;
-(id)init;
-(id)copyWithZone:(NSZone*)arg1 ;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(char)allowsCellularAccess;
-(unsigned)cachePolicy;
-(char)HTTPShouldUsePipelining;
-(void)setHTTPShouldHandleCookies:(char)arg1 ;
-(void)setAllowsCellularAccess:(char)arg1 ;
-(void)setValue:(id)arg1 forHTTPHeaderField:(id)arg2 ;
-(void)setNetworkServiceType:(unsigned)arg1 ;
-(void)setCachePolicy:(unsigned)arg1 ;
-(void)setTimeoutInterval:(double)arg1 ;
-(unsigned)networkServiceType;
-(id)valueForHTTPHeaderField:(id)arg1 ;
-(double)timeoutInterval;
-(unsigned)stringEncoding;
@end

