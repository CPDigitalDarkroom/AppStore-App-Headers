/*
* This header is generated by classdump-dyld 1.0
* on Friday, April 22, 2016 at 10:58:11 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/D8C1ED38-25E6-459D-9E28-E2C1B463D6A5/Yik Yak.app/Yik Yak
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Yik Yak/Yik Yak-Structs.h>
#import <libobjc.A.dylib/NSCopying.h>
#import <libobjc.A.dylib/NSCoding.h>

@class NSMutableDictionary, PFUser;

@interface PFACL : NSObject <NSCopying, NSCoding> {

	NSMutableDictionary* permissionsById;
	char shared;
	PFUser* unresolvedUser;
	/*^block*/id userResolutionListener;

}
+(id)ACL;
+(id)ACLWithDictionary:(id)arg1 ;
+(id)ACLWithUser:(id)arg1 ;
+(id)defaultACL;
+(void)setDefaultACL:(id)arg1 withAccessForCurrentUser:(char)arg2 ;
-(void)setReadAccess:(char)arg1 forUser:(id)arg2 ;
-(void)setWriteAccess:(char)arg1 forUser:(id)arg2 ;
-(char)getReadAccessForUser:(id)arg1 ;
-(char)getWriteAccessForUser:(id)arg1 ;
-(void)setAccess:(id)arg1 to:(char)arg2 forUserId:(id)arg3 ;
-(char)getAccess:(id)arg1 forUserId:(id)arg2 ;
-(void)setReadAccess:(char)arg1 forUserId:(id)arg2 ;
-(char)getReadAccessForUserId:(id)arg1 ;
-(void)setWriteAccess:(char)arg1 forUserId:(id)arg2 ;
-(char)getWriteAccessForUserId:(id)arg1 ;
-(void)validateRoleState:(id)arg1 ;
-(char)getReadAccessForRoleWithName:(id)arg1 ;
-(void)setReadAccess:(char)arg1 forRoleWithName:(id)arg2 ;
-(void)setWriteAccess:(char)arg1 forRoleWithName:(id)arg2 ;
-(void)resolveUser:(id)arg1 ;
-(void)prepareUnresolvedUser:(id)arg1 ;
-(void)setUnresolvedReadAccess:(char)arg1 forUser:(id)arg2 ;
-(void)setUnresolvedWriteAccess:(char)arg1 forUser:(id)arg2 ;
-(char)isEqualToACL:(id)arg1 ;
-(id)encodeIntoDictionary;
-(id)createUnsharedCopy;
-(char)hasUnresolvedUser;
-(void)setPublicReadAccess:(char)arg1 ;
-(char)getPublicReadAccess;
-(void)setPublicWriteAccess:(char)arg1 ;
-(char)getPublicWriteAccess;
-(char)getWriteAccessForRoleWithName:(id)arg1 ;
-(char)getReadAccessForRole:(id)arg1 ;
-(void)setReadAccess:(char)arg1 forRole:(id)arg2 ;
-(char)getWriteAccessForRole:(id)arg1 ;
-(void)setWriteAccess:(char)arg1 forRole:(id)arg2 ;
-(char)isShared;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(id)init;
-(char)isEqual:(id)arg1 ;
-(unsigned)hash;
-(id)initWithDictionary:(id)arg1 ;
-(id)copyWithZone:(NSZone*)arg1 ;
-(void)setShared:(char)arg1 ;
@end

