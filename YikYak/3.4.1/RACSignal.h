/*
* This header is generated by classdump-dyld 1.0
* on Friday, April 22, 2016 at 10:58:09 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/D8C1ED38-25E6-459D-9E28-E2C1B463D6A5/Yik Yak.app/Yik Yak
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Yik Yak/RACStream.h>

@class RACSequence;

@interface RACSignal : RACStream

@property (nonatomic,readonly) RACSequence * sequence; 
+(id)return:(id)arg1 ;
+(id)if:(id)arg1 then:(id)arg2 else:(id)arg3 ;
+(id)createSignal:(/*^block*/id)arg1 ;
+(id)defer:(/*^block*/id)arg1 ;
+(id)interval:(double)arg1 onScheduler:(id)arg2 withLeeway:(double)arg3 ;
+(id)combineLatest:(id)arg1 reduce:(/*^block*/id)arg2 ;
+(id)interval:(double)arg1 onScheduler:(id)arg2 ;
+(id)switch:(id)arg1 cases:(id)arg2 default:(id)arg3 ;
+(id)interval:(double)arg1 ;
+(id)interval:(double)arg1 withLeeway:(double)arg2 ;
+(id)startLazilyWithScheduler:(id)arg1 block:(/*^block*/id)arg2 ;
+(id)never;
+(id)startEagerlyWithScheduler:(id)arg1 block:(/*^block*/id)arg2 ;
+(id)startWithScheduler:(id)arg1 block:(/*^block*/id)arg2 ;
+(id)startWithScheduler:(id)arg1 subjectBlock:(/*^block*/id)arg2 ;
+(id)start:(/*^block*/id)arg1 ;
+(id)combineLatest:(id)arg1 ;
+(id)error:(id)arg1 ;
+(id)merge:(id)arg1 ;
+(id)empty;
-(id)logError;
-(id)subscribeNext:(/*^block*/id)arg1 ;
-(id)doNext:(/*^block*/id)arg1 ;
-(id)all:(/*^block*/id)arg1 ;
-(id)setKeyPath:(id)arg1 onObject:(id)arg2 ;
-(id)ignoreValues;
-(id)concat;
-(id)catchTo:(id)arg1 ;
-(id)deliverOn:(id)arg1 ;
-(id)catch:(/*^block*/id)arg1 ;
-(id)replayLast;
-(id)not;
-(id)takeUntil:(id)arg1 ;
-(id)and;
-(id)concat:(id)arg1 ;
-(id)multicast:(id)arg1 ;
-(id)subscribeError:(/*^block*/id)arg1 completed:(/*^block*/id)arg2 ;
-(id)finally:(/*^block*/id)arg1 ;
-(id)subscribeNext:(/*^block*/id)arg1 error:(/*^block*/id)arg2 ;
-(id)any:(/*^block*/id)arg1 ;
-(id)throttle:(double)arg1 valuesPassingTest:(/*^block*/id)arg2 ;
-(id)aggregateWithStartFactory:(/*^block*/id)arg1 reduce:(/*^block*/id)arg2 ;
-(id)combineLatestWith:(id)arg1 ;
-(id)flatten:(unsigned)arg1 ;
-(id)aggregateWithStart:(id)arg1 reduce:(/*^block*/id)arg2 ;
-(id)aggregateWithStart:(id)arg1 reduceWithIndex:(/*^block*/id)arg2 ;
-(id)switchToLatest;
-(id)firstOrDefault:(id)arg1 success:(char*)arg2 error:(id*)arg3 ;
-(id)collect;
-(id)groupBy:(/*^block*/id)arg1 transform:(/*^block*/id)arg2 ;
-(id)materialize;
-(id)retry:(int)arg1 ;
-(id)throttle:(double)arg1 ;
-(id)delay:(double)arg1 ;
-(id)try:(/*^block*/id)arg1 ;
-(id)tryMap:(/*^block*/id)arg1 ;
-(id)initially:(/*^block*/id)arg1 ;
-(id)bufferWithTime:(double)arg1 onScheduler:(id)arg2 ;
-(id)then:(/*^block*/id)arg1 ;
-(id)takeUntilReplacement:(id)arg1 ;
-(char)waitUntilCompleted:(id*)arg1 ;
-(id)replay;
-(id)replayLazily;
-(id)deliverOnMainThread;
-(id)groupBy:(/*^block*/id)arg1 ;
-(id)sample:(id)arg1 ;
-(id)dematerialize;
-(id)or;
-(id)reduceApply;
-(id)windowWithStart:(id)arg1 close:(/*^block*/id)arg2 ;
-(id)let:(/*^block*/id)arg1 ;
-(id)bufferWithTime:(double)arg1 ;
-(id)toProperty:(id)arg1 onObject:(id)arg2 ;
-(id)ignoreElements;
-(id)sequenceNext:(/*^block*/id)arg1 ;
-(id)aggregateWithStart:(id)arg1 combine:(/*^block*/id)arg2 ;
-(id)aggregateWithStartFactory:(/*^block*/id)arg1 combine:(/*^block*/id)arg2 ;
-(id)executeCommand:(id)arg1 ;
-(id)subscribeNext:(/*^block*/id)arg1 error:(/*^block*/id)arg2 completed:(/*^block*/id)arg3 ;
-(id)zipWith:(id)arg1 ;
-(id)subscribeNext:(/*^block*/id)arg1 completed:(/*^block*/id)arg2 ;
-(id)subscribeError:(/*^block*/id)arg1 ;
-(id)subscribeCompleted:(/*^block*/id)arg1 ;
-(id)logNext;
-(id)logCompleted;
-(id)doError:(/*^block*/id)arg1 ;
-(id)doCompleted:(/*^block*/id)arg1 ;
-(id)logAll;
-(id)timeout:(double)arg1 onScheduler:(id)arg2 ;
-(id)asynchronousFirstOrDefault:(id)arg1 success:(char*)arg2 error:(id*)arg3 ;
-(char)asynchronouslyWaitUntilCompleted:(id*)arg1 ;
-(id)firstOrDefault:(id)arg1 ;
-(id)setKeyPath:(id)arg1 onObject:(id)arg2 nilValue:(id)arg3 ;
-(id)bind:(/*^block*/id)arg1 ;
-(id)subscribe:(id)arg1 ;
-(id)any;
-(id)publish;
-(RACSequence *)sequence;
-(id)retry;
-(id)first;
-(id)description;
-(id)takeLast:(unsigned)arg1 ;
-(id)buffer:(unsigned)arg1 ;
-(id)timeout:(double)arg1 ;
-(id)merge:(id)arg1 ;
-(id)toArray;
-(id)subscribeOn:(id)arg1 ;
-(id)repeat;
@end

