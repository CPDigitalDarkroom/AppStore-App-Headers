/*
* This header is generated by classdump-dyld 1.0
* on Friday, April 22, 2016 at 10:58:11 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/D8C1ED38-25E6-459D-9E28-E2C1B463D6A5/Yik Yak.app/Yik Yak
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@class NSURL, NSFileManager;

@interface CLSEventLogSessionRepository : NSObject {

	NSURL* _rootDirectoryURL;
	NSFileManager* _fileManager;

}
+(unsigned)priorityForEventLogFileWithName:(id)arg1 ;
+(id)sessionDirectoryNameWithIdentifier:(id)arg1 timestamp:(unsigned long long)arg2 ;
+(id)prepDirectoryForDirectoryURL:(id)arg1 ;
+(char)isPrepDirectoryURL:(id)arg1 ;
+(id)sessionFragmentDirectoryNameWithIdentifier:(id)arg1 timestamp:(unsigned long long)arg2 ;
+(id)sessionDirectoryURLForSessionFragmentDirectoryURL:(id)arg1 ;
+(id)stateDirectoryURLForSessionDirectoryURL:(id)arg1 ;
+(id)activeEventLogFileNameForPriority:(unsigned)arg1 ;
+(id)sessionFragmentDirectoryURLForLogFileURL:(id)arg1 ;
-(id)initWithRootDirectoryURL:(id)arg1 ;
-(id)sessionDirectoryURLForStateName:(id)arg1 sessionIdentifier:(id)arg2 sessionTimestamp:(unsigned long long)arg3 error:(id*)arg4 ;
-(id)eventLogFileURLForStateName:(id)arg1 sessionIdentifier:(id)arg2 sessionTimestamp:(unsigned long long)arg3 sessionFragmentIdentifier:(id)arg4 sessionFragmentTimestamp:(unsigned long long)arg5 eventPriority:(unsigned)arg6 error:(id*)arg7 ;
-(id)sessionFragmentDirectoryURLForStateName:(id)arg1 sessionIdentifier:(id)arg2 sessionTimestamp:(unsigned long long)arg3 sessionFragmentIdentifier:(id)arg4 sessionFragmentTimestamp:(unsigned long long)arg5 error:(id*)arg6 ;
-(id)sessionDirectoryURLsForStateName:(id)arg1 error:(id*)arg2 ;
-(id)sessionFragmentDirectoryURLsForSessionDirectory:(id)arg1 error:(id*)arg2 ;
-(char)purgePrepSessionFragmentDirectoriesForStateName:(id)arg1 error:(id*)arg2 ;
-(id)prepSessionFragmentDirectoryURLForStateName:(id)arg1 sessionFragmentDirectoryURL:(id)arg2 error:(id*)arg3 ;
-(id)removePrepStatusFromSessionFragmentDirectoryURL:(id)arg1 error:(id*)arg2 ;
-(char)removeSessionFragmentDirectory:(id)arg1 error:(id*)arg2 ;
-(id)logFileURLsForSessionFragmentDirectory:(id)arg1 error:(id*)arg2 ;
-(id)logFileURLsForAllStates:(id*)arg1 ;
-(char)removeLogFile:(id)arg1 error:(id*)arg2 ;
-(char)cleanUpEventLogRepositoryIgnorningSessionFragmentDirectoryURL:(id)arg1 error:(id*)arg2 ;
-(char)deleteItemAtPath:(id)arg1 ifNotOfType:(int)arg2 error:(id*)arg3 ;
-(id)versionDirectoryName;
-(char)createDirectoryWithURL:(id)arg1 error:(id*)arg2 ;
-(id)stateDirectoryURLForStateName:(id)arg1 error:(id*)arg2 ;
-(id)arrayByFilteringNonDirectoriesFromURLs:(id)arg1 ;
-(char)isDirectoryURL:(id)arg1 ;
-(char)itemURL:(id)arg1 hasPathExtensionMatching:(id)arg2 ;
-(id)contentsOfDirectoryURL:(id)arg1 error:(id*)arg2 ;
-(char)deleteItemAtURL:(id)arg1 error:(id*)arg2 ;
-(char)cleanUpLogFileURL:(id)arg1 shouldDelete:(char*)arg2 error:(id*)arg3 ;
-(char)cleanUpDirectoryURL:(id)arg1 shouldDelete:(char*)arg2 error:(id*)arg3 withCleanUpBlock:(/*^block*/id)arg4 ;
-(char)cleanUpSessionFragmentDirectoryURL:(id)arg1 shouldDelete:(char*)arg2 error:(id*)arg3 ;
-(char)itemURL:(id)arg1 hasNameMatching:(id)arg2 ;
-(char)cleanUpSessionDirectoryURL:(id)arg1 ignoringSessionFragmentDirectoryURL:(id)arg2 shouldDelete:(char*)arg3 error:(id*)arg4 ;
-(id)statesDirectoryURL:(id*)arg1 ;
-(char)cleanUpStateDirectoryURL:(id)arg1 ignoringSessionFragmentDirectoryURL:(id)arg2 shouldDelete:(char*)arg3 error:(id*)arg4 ;
-(id)initWithRootDirectoryPath:(id)arg1 ;
-(char)createFileWithURL:(id)arg1 error:(id*)arg2 ;
-(void)dealloc;
-(id)init;
@end

