/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 14, 2016 at 9:31:33 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/8A9DE0F0-8C0D-4043-A8B5-545C839396E1/Twitter.app/Twitter
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Twitter/Twitter-Structs.h>
#import <Twitter/TFNDownloadMediaPlayerDelegate.h>
#import <Twitter/TFNTwitterAmplifyPlayerDelegate.h>
#import <Twitter/TFNTwitterAVPlayerControllerSource.h>

@protocol TFNTwitterAVPlayerControllerSource;
@class NSSet, TFNTimer, NSMapTable, TFNTwitterAVPlayerController, TFNDataViewController, NSMutableArray, NSMutableSet, TFNTwitterAccount, NSString;

@interface T1StatusMediaHandler : NSObject <TFNDownloadMediaPlayerDelegate, TFNTwitterAmplifyPlayerDelegate, TFNTwitterAVPlayerControllerSource> {

	char _autoplayEnabled;
	char _autoplayEnabledForPromotedTweets;
	char _videoDynamicAdEnabled;
	char _autoplayUpdateTimerRunning;
	id<TFNTwitterAVPlayerControllerSource> _playerSource;
	NSSet* _autoplayPublisherBlacklist;
	float _autoplayStartPlayerViewVisibleYFraction;
	TFNTimer* _autoplayUpdateTimer;
	NSMapTable* _subViewControllerToOffsetMap;
	NSMapTable* _viewControllerToSlideshowPresenterMap;
	TFNTwitterAVPlayerController* _currentAutoplayPlayer;
	TFNDataViewController* _dataViewController;
	NSMutableArray* _pendingRemovalPlayerViewContainerCells;
	TFNTwitterAVPlayerController* _playerAwaitingReturn;
	int _modeForPlayerAwaitingReturn;
	id _presentedSlideshow;
	NSMutableSet* _statusesDisplayedAfterPause;
	NSMutableArray* _visiblePlayerViewContainerCells;
	float _verticalScrollSpeed;
	CGPoint _lastAutoplayUpdateContentOffset;
	CGPoint _lastVerticalScrollSpeedUpdateContentOffset;
	double _lastVerticalScrollSpeedUpdateTime;

}

@property (nonatomic,readonly) TFNTwitterAccount * account; 
@property (nonatomic,readonly) char autoplayEnabled;                                                  //@synthesize autoplayEnabled=_autoplayEnabled - In the implementation block
@property (nonatomic,readonly) char autoplayEnabledForPromotedTweets;                                 //@synthesize autoplayEnabledForPromotedTweets=_autoplayEnabledForPromotedTweets - In the implementation block
@property (nonatomic,readonly) NSSet * autoplayPublisherBlacklist;                                    //@synthesize autoplayPublisherBlacklist=_autoplayPublisherBlacklist - In the implementation block
@property (nonatomic,readonly) float autoplayStartPlayerViewVisibleYFraction;                         //@synthesize autoplayStartPlayerViewVisibleYFraction=_autoplayStartPlayerViewVisibleYFraction - In the implementation block
@property (nonatomic,readonly) char videoDynamicAdEnabled;                                            //@synthesize videoDynamicAdEnabled=_videoDynamicAdEnabled - In the implementation block
@property (nonatomic,retain) TFNTimer * autoplayUpdateTimer;                                          //@synthesize autoplayUpdateTimer=_autoplayUpdateTimer - In the implementation block
@property (nonatomic,retain) NSMapTable * subViewControllerToOffsetMap;                               //@synthesize subViewControllerToOffsetMap=_subViewControllerToOffsetMap - In the implementation block
@property (nonatomic,retain) NSMapTable * viewControllerToSlideshowPresenterMap;                      //@synthesize viewControllerToSlideshowPresenterMap=_viewControllerToSlideshowPresenterMap - In the implementation block
@property (assign,nonatomic) char autoplayUpdateTimerRunning;                                         //@synthesize autoplayUpdateTimerRunning=_autoplayUpdateTimerRunning - In the implementation block
@property (nonatomic,retain) TFNTwitterAVPlayerController * currentAutoplayPlayer;                    //@synthesize currentAutoplayPlayer=_currentAutoplayPlayer - In the implementation block
@property (nonatomic,readonly) int currentAutoplayVideoType; 
@property (nonatomic,__weak,readonly) TFNDataViewController * dataViewController;                     //@synthesize dataViewController=_dataViewController - In the implementation block
@property (nonatomic,readonly) NSMutableArray * pendingRemovalPlayerViewContainerCells;               //@synthesize pendingRemovalPlayerViewContainerCells=_pendingRemovalPlayerViewContainerCells - In the implementation block
@property (nonatomic,retain) TFNTwitterAVPlayerController * playerAwaitingReturn;                     //@synthesize playerAwaitingReturn=_playerAwaitingReturn - In the implementation block
@property (assign,nonatomic) int modeForPlayerAwaitingReturn;                                         //@synthesize modeForPlayerAwaitingReturn=_modeForPlayerAwaitingReturn - In the implementation block
@property (assign,nonatomic,__weak) id presentedSlideshow;                                            //@synthesize presentedSlideshow=_presentedSlideshow - In the implementation block
@property (nonatomic,readonly) NSMutableSet * statusesDisplayedAfterPause;                            //@synthesize statusesDisplayedAfterPause=_statusesDisplayedAfterPause - In the implementation block
@property (nonatomic,readonly) NSMutableArray * visiblePlayerViewContainerCells;                      //@synthesize visiblePlayerViewContainerCells=_visiblePlayerViewContainerCells - In the implementation block
@property (assign,nonatomic) CGPoint lastAutoplayUpdateContentOffset;                                 //@synthesize lastAutoplayUpdateContentOffset=_lastAutoplayUpdateContentOffset - In the implementation block
@property (assign,nonatomic) CGPoint lastVerticalScrollSpeedUpdateContentOffset;                      //@synthesize lastVerticalScrollSpeedUpdateContentOffset=_lastVerticalScrollSpeedUpdateContentOffset - In the implementation block
@property (assign,nonatomic) double lastVerticalScrollSpeedUpdateTime;                                //@synthesize lastVerticalScrollSpeedUpdateTime=_lastVerticalScrollSpeedUpdateTime - In the implementation block
@property (assign,nonatomic) float verticalScrollSpeed;                                               //@synthesize verticalScrollSpeed=_verticalScrollSpeed - In the implementation block
@property (assign,nonatomic,__weak) id<TFNTwitterAVPlayerControllerSource> playerSource;              //@synthesize playerSource=_playerSource - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id<TFNTwitterAVPlayerControllerSource>)playerSource;
-(id)playerForStatus:(id)arg1 ;
-(id)requestPlayerOwnershipForStatus:(id)arg1 withAccount:(id)arg2 newOwner:(id)arg3 ;
-(void)willReturnPlayerOwnership:(id)arg1 fromOwner:(id)arg2 ;
-(void)returnPlayerOwnership:(id)arg1 fromOwner:(id)arg2 ;
-(void)_autoplaySettingsDidChange;
-(void)_applicationWillResign;
-(void)_updateFeatureSwitches;
-(void)_updateAutoplay;
-(float)autoplayStartPlayerViewVisibleYFraction;
-(void)avPlayerController:(id)arg1 attachPlayerView:(id)arg2 animated:(char)arg3 ;
-(void)avPlayerController:(id)arg1 detachPlayerView:(id)arg2 animated:(char)arg3 ;
-(float)avPlayerController:(id)arg1 visibilityPercentageForPlayerView:(id)arg2 ;
-(void)avPlayerControllerReadyToPlay:(id)arg1 ;
-(void)avPlayerController:(id)arg1 didChangeFromMode:(int)arg2 toMode:(int)arg3 ;
-(void)avPlayerController:(id)arg1 didFailToLoadWithError:(id)arg2 ;
-(void)avPlayerController:(id)arg1 didTapPlayerView:(id)arg2 ;
-(void)avPlayerController:(id)arg1 playbackDidProgressToTime:(double)arg2 ;
-(void)avPlayerControllerDidDispose:(id)arg1 ;
-(void)avPlayerControllerPlaybackDidPause:(id)arg1 ;
-(void)avPlayerControllerPlaybackDidResume:(id)arg1 ;
-(char)avPlayerControllerIsObscuredByOverlappingView:(id)arg1 ;
-(char)avPlayerControllerShouldHandleAudioRouteChanges:(id)arg1 ;
-(char)avPlayerControllerShouldResumeOnAudioRouteChanges:(id)arg1 ;
-(char)avPlayerControllerShouldManagePlayerVolume:(id)arg1 ;
-(char)autoplayEnabled;
-(void)setPlayerSource:(id<TFNTwitterAVPlayerControllerSource>)arg1 ;
-(void)presentPlayerFromPlayerViewContainerCell:(id)arg1 ;
-(void)playerViewContainerCellDidUpdate:(id)arg1 ;
-(void)amplifyPlayer:(id)arg1 videoTypeDidChangeFrom:(int)arg2 newVideoType:(int)arg3 ;
-(void)amplifyPlayer:(id)arg1 didReceiveTimedMetadata:(id)arg2 ;
-(void)amplifyPlayer:(id)arg1 didUpdateItemStatus:(int)arg2 ;
-(void)amplifyPlayer:(id)arg1 didUpdatePlaybackLikelyToKeepUp:(char)arg2 ;
-(void)addSlideshowPresenter:(id)arg1 forViewController:(id)arg2 ;
-(void)didDisplayPlayerViewContainerCell:(id)arg1 ;
-(void)didEndDisplayingPlayerViewContainerCell:(id)arg1 ;
-(void)addSubDataViewController:(id)arg1 ;
-(void)willDisplayPlayerViewContainerCell:(id)arg1 ;
-(id)initWithMainDataViewController:(id)arg1 ;
-(id)slideshowPresenterForViewController:(id)arg1 ;
-(void)mainDataViewControllerWillDisappear:(id)arg1 ;
-(void)_periscopeCardViewModelDidUpdate:(id)arg1 ;
-(void)_periscopeCardViewModelBroadcastDidEnd:(id)arg1 ;
-(void)_periscopeViewControllerDidPresent:(id)arg1 ;
-(void)_didDeleteStatus:(id)arg1 ;
-(void)_autoplayResetScrollStates;
-(char)autoplayEnabledForPromotedTweets;
-(NSSet *)autoplayPublisherBlacklist;
-(TFNTwitterAVPlayerController *)currentAutoplayPlayer;
-(char)_autoplayDisabledForStatus:(id)arg1 account:(id)arg2 ;
-(void)_autoplayDisposeCurrentPlayer;
-(NSMapTable *)subViewControllerToOffsetMap;
-(void)_disposeAutoplayUpdateTimer;
-(void)setCurrentAutoplayPlayer:(TFNTwitterAVPlayerController *)arg1 ;
-(NSMapTable *)viewControllerToSlideshowPresenterMap;
-(void)setPresentedSlideshow:(id)arg1 ;
-(char)videoDynamicAdEnabled;
-(void)_startAutoplayUpdateTimer;
-(NSMutableArray *)visiblePlayerViewContainerCells;
-(NSMutableSet *)statusesDisplayedAfterPause;
-(char)_playerView:(id)arg1 partiallyVisibleInController:(id)arg2 ;
-(NSMutableArray *)pendingRemovalPlayerViewContainerCells;
-(id)_playerViewContainerCellWithStatus:(id)arg1 ;
-(void)setLastAutoplayUpdateContentOffset:(CGPoint)arg1 ;
-(void)setLastVerticalScrollSpeedUpdateContentOffset:(CGPoint)arg1 ;
-(void)setLastVerticalScrollSpeedUpdateTime:(double)arg1 ;
-(void)_resetSubViewControllerOffsets;
-(TFNTimer *)autoplayUpdateTimer;
-(void)setAutoplayUpdateTimer:(TFNTimer *)arg1 ;
-(char)autoplayUpdateTimerRunning;
-(void)setAutoplayUpdateTimerRunning:(char)arg1 ;
-(void)_autoplayTimerTick;
-(void)_updateVerticalScrollSpeed;
-(id)presentedSlideshow;
-(void)_autoplayPauseCurrentPlayer;
-(void)_removeTrackedContainerCells;
-(void)_pauseAutoplayUpdateTimer;
-(char)_shouldUpdateAutoplay;
-(void)_updateSubViewControllerOffsets;
-(CGPoint)lastVerticalScrollSpeedUpdateContentOffset;
-(double)lastVerticalScrollSpeedUpdateTime;
-(void)setVerticalScrollSpeed:(float)arg1 ;
-(float)verticalScrollSpeed;
-(char)_haveViewControllersScrolled;
-(CGPoint)lastAutoplayUpdateContentOffset;
-(char)_haveSubViewControllerOffsetsChanged;
-(void)setSubViewControllerToOffsetMap:(NSMapTable *)arg1 ;
-(id)_closestAutoplayablePlayerViewContainerCellForController:(id)arg1 ;
-(char)_isPlayer:(id)arg1 forStatus:(id)arg2 ;
-(void)_autoplayResumeCurrentPlayerIfNeeded;
-(TFNTwitterAVPlayerController *)playerAwaitingReturn;
-(void)_autoplayGifVineInitiateNewPlayerFromContainerCell:(id)arg1 withController:(id)arg2 ;
-(char)_isPeriscopePlayableInStatus:(id)arg1 ;
-(void)_autoplayNativeVideoInitiateNewPlayerFromContainerCell:(id)arg1 withController:(id)arg2 ;
-(char)_playerView:(id)arg1 inViewportForController:(id)arg2 withYFraction:(float)arg3 ;
-(void)_configureCurrentAutoplayPlayerWithController:(id)arg1 mode:(int)arg2 ;
-(void)_updatePlayerView:(id)arg1 forStartingCustomCardAutoplayWithStatus:(id)arg2 ;
-(id)_activeCardViewForStatus:(id)arg1 ;
-(void)_updatePlayerView:(id)arg1 forFinishingCustomCardAutoplayWithStatus:(id)arg2 ;
-(void)setModeForPlayerAwaitingReturn:(int)arg1 ;
-(void)setPlayerAwaitingReturn:(TFNTwitterAVPlayerController *)arg1 ;
-(int)modeForPlayerAwaitingReturn;
-(char)_isVideoStatusViewPendingRemovalWithStatus:(id)arg1 ;
-(int)currentAutoplayVideoType;
-(void)setViewControllerToSlideshowPresenterMap:(NSMapTable *)arg1 ;
-(TFNDataViewController *)dataViewController;
-(void)dealloc;
-(TFNTwitterAccount *)account;
@end

