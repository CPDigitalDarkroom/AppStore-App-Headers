/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 14, 2016 at 9:31:58 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/8A9DE0F0-8C0D-4043-A8B5-545C839396E1/Twitter.app/Twitter
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Twitter/CMClientDelegate.h>
#import <Twitter/PPubNubDelegate.h>

@protocol PChannelDelegate;
@class PPubNub, CMClient, NSString, NSMutableOrderedSet, PNormalDistributionDataModel;

@interface PChannel : NSObject <CMClientDelegate, PPubNubDelegate> {

	PPubNub* _pubnub;
	CMClient* _client;
	char _suppressChatmanPresence;
	char _subscribedToPubNub;
	char _subscribedToChatMan;
	int _streamType;
	NSString* _broadcasterUserId;
	PChannel* _weakSelf;
	NSMutableOrderedSet* _messageUuidSet;
	NSMutableOrderedSet* _heartUuidSet;
	PNormalDistributionDataModel* _chatManLatencyData;
	PNormalDistributionDataModel* _pubNubLatencyData;
	int _pubnubFiltered;
	int _chatmanFiltered;
	int _chatManChatState;
	id<PChannelDelegate> _delegate;
	NSString* _room;

}

@property (assign,nonatomic,__weak) id<PChannelDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,readonly) NSString * room;                                 //@synthesize room=_room - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(void)HandleHeartRateLimit:(id)arg1 CountDuringRateLimit:(int)arg2 ExecuteIfNoRateLimit:(/*^block*/id)arg3 ExecuteDuringRateLimit:(/*^block*/id)arg4 ExecuteIfBeginningRateLimit:(/*^block*/id)arg5 ReceivingHearts:(char)arg6 ;
-(char)_observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(char)subscribeWithAccess:(id)arg1 streamType:(int)arg2 room:(id)arg3 broadcasterUserId:(id)arg4 isForReplay:(char)arg5 fromTwitter:(char)arg6 shouldUsePubNub:(char)arg7 shouldUseChatMan:(char)arg8 ;
-(int)bestKnownChatState;
-(char)shouldVerifySignature;
-(char)validateMessage:(id)arg1 ;
-(void)logPubNubOutput:(id)arg1 ;
-(void)presenceEventReceived:(id)arg1 ;
-(void)hereNowWithCompletion:(/*^block*/id)arg1 ;
-(void)historyWithStartTime:(long long)arg1 endTime:(long long)arg2 limit:(int)arg3 completion:(/*^block*/id)arg4 ;
-(void)messageReceived:(id)arg1 isForReplay:(char)arg2 ;
-(void)_notifyChatStateDidChange;
-(void)_delegatePresenceEventReceived:(id)arg1 ;
-(char)_filterMessage:(id)arg1 ;
-(void)_notifyConnected;
-(void)_setChatManChatState:(int)arg1 ;
-(id)messageFromChatManJSON:(id)arg1 ;
-(int)pubnubState;
-(void)_setPubNub:(id)arg1 ;
-(void)_leaveAndDisconnect;
-(char)_subscribeToPubNub:(id)arg1 fromTwitter:(char)arg2 ;
-(char)connectWithAccess:(id)arg1 room:(id)arg2 streamType:(int)arg3 broadcasterUserId:(id)arg4 isReplay:(char)arg5 ;
-(void)rosterForRoom:(id)arg1 ;
-(void)historySince:(double)arg1 cursor:(id)arg2 limit:(unsigned)arg3 completion:(/*^block*/id)arg4 ;
-(void)didReceiveChatMessage:(id)arg1 ;
-(void)didReceivePresence:(id)arg1 ;
-(void)didJoinRoom:(id)arg1 ;
-(void)didLeaveRoom:(id)arg1 ;
-(void)didRejoinRoom:(id)arg1 ;
-(void)loggedInUserDidJoinPubNub;
-(id)getPubNubStatistics;
-(id)getChatManStatistics;
-(id)pubnubChannel;
-(void)setDelegate:(id<PChannelDelegate>)arg1 ;
-(void)dealloc;
-(id)init;
-(id<PChannelDelegate>)delegate;
-(void)reset;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(NSString *)room;
-(char)subscribed;
@end

