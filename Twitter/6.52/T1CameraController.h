/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 14, 2016 at 9:31:31 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/8A9DE0F0-8C0D-4043-A8B5-545C839396E1/Twitter.app/Twitter
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Twitter/Twitter-Structs.h>
#import <Twitter/AVCaptureAudioDataOutputSampleBufferDelegate.h>
#import <libobjc.A.dylib/AVCaptureVideoDataOutputSampleBufferDelegate.h>

@protocol OS_dispatch_queue;
@class NSObject, AVCaptureSession, AVCaptureAudioDataOutput, AVCaptureDeviceInput, AVCaptureStillImageOutput, AVCaptureVideoDataOutput, NSHashTable, NSString;

@interface T1CameraController : NSObject <AVCaptureAudioDataOutputSampleBufferDelegate, AVCaptureVideoDataOutputSampleBufferDelegate> {

	char _focusAndExposureLocked;
	NSObject*<OS_dispatch_queue> _dataQueue;
	NSObject*<OS_dispatch_queue> _sessionQueue;
	AVCaptureSession* _session;
	AVCaptureAudioDataOutput* _audioDataOutput;
	AVCaptureDeviceInput* _audioDeviceInput;
	int _currentVideoOrientation;
	int _mode;
	int _pauseCount;
	int _runningCount;
	AVCaptureStillImageOutput* _stillImageOutput;
	AVCaptureVideoDataOutput* _videoDataOutput;
	AVCaptureDeviceInput* _videoDeviceInput;
	NSHashTable* _previewViews;
	NSHashTable* _segmentManagers;

}

@property (nonatomic,readonly) NSObject*<OS_dispatch_queue> dataQueue;                  //@synthesize dataQueue=_dataQueue - In the implementation block
@property (nonatomic,readonly) NSObject*<OS_dispatch_queue> sessionQueue;               //@synthesize sessionQueue=_sessionQueue - In the implementation block
@property (nonatomic,readonly) AVCaptureSession * session;                              //@synthesize session=_session - In the implementation block
@property (nonatomic,retain) AVCaptureAudioDataOutput * audioDataOutput;                //@synthesize audioDataOutput=_audioDataOutput - In the implementation block
@property (nonatomic,retain) AVCaptureDeviceInput * audioDeviceInput;                   //@synthesize audioDeviceInput=_audioDeviceInput - In the implementation block
@property (assign,nonatomic) int currentVideoOrientation;                               //@synthesize currentVideoOrientation=_currentVideoOrientation - In the implementation block
@property (assign,nonatomic) char focusAndExposureLocked;                               //@synthesize focusAndExposureLocked=_focusAndExposureLocked - In the implementation block
@property (assign,nonatomic) int mode;                                                  //@synthesize mode=_mode - In the implementation block
@property (assign,nonatomic) int pauseCount;                                            //@synthesize pauseCount=_pauseCount - In the implementation block
@property (assign,nonatomic) int runningCount;                                          //@synthesize runningCount=_runningCount - In the implementation block
@property (nonatomic,retain) AVCaptureStillImageOutput * stillImageOutput;              //@synthesize stillImageOutput=_stillImageOutput - In the implementation block
@property (nonatomic,readonly) AVCaptureVideoDataOutput * videoDataOutput;              //@synthesize videoDataOutput=_videoDataOutput - In the implementation block
@property (nonatomic,readonly) AVCaptureDeviceInput * videoDeviceInput;                 //@synthesize videoDeviceInput=_videoDeviceInput - In the implementation block
@property (nonatomic,readonly) NSHashTable * previewViews;                              //@synthesize previewViews=_previewViews - In the implementation block
@property (nonatomic,readonly) NSHashTable * segmentManagers;                           //@synthesize segmentManagers=_segmentManagers - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)sharedCamera;
-(void)_deviceOrientationDidChange:(id)arg1 ;
-(void)configureForPhoto;
-(void)setAutoFocusAndExposurePointOfInterest:(CGPoint)arg1 locked:(char)arg2 completion:(/*^block*/id)arg3 ;
-(void)addPreviewView:(id)arg1 ;
-(void)deviceWithCompletion:(/*^block*/id)arg1 ;
-(void)removePreviewView:(id)arg1 ;
-(void)capturePhotoWithCompletion:(/*^block*/id)arg1 ;
-(void)toggleFlash:(/*^block*/id)arg1 ;
-(void)toggleCameraCompletion:(/*^block*/id)arg1 ;
-(char)canToggleCamera;
-(void)flashModeWithCompletion:(/*^block*/id)arg1 ;
-(void)hasFocusAndExposureLockWithCompletion:(/*^block*/id)arg1 ;
-(void)focusAndExposurePointOfInterestWithCompletion:(/*^block*/id)arg1 ;
-(void)configureForVideo;
-(void)setDefaultDeviceWithCompletion:(/*^block*/id)arg1 ;
-(void)removeMicrophoneWithCompletion:(/*^block*/id)arg1 ;
-(void)addSegmentManager:(id)arg1 ;
-(void)removeSegmentManager:(id)arg1 ;
-(void)toggleTorch:(/*^block*/id)arg1 ;
-(void)torchModeWithCompletion:(/*^block*/id)arg1 ;
-(void)_removeObserversFromVideoDeviceInput;
-(id)_deviceWithMediaType:(id)arg1 preferringPosition:(int)arg2 ;
-(AVCaptureDeviceInput *)videoDeviceInput;
-(void)_addVideoDeviceInputForDevice:(id)arg1 ;
-(void)_configureDeviceForPhoto;
-(void)_configureDeviceForVideo;
-(void)_updateVideoOrientation;
-(int)currentVideoOrientation;
-(void)setCurrentVideoOrientation:(int)arg1 ;
-(void)setAudioDeviceInput:(AVCaptureDeviceInput *)arg1 ;
-(AVCaptureAudioDataOutput *)audioDataOutput;
-(void)setAudioDataOutput:(AVCaptureAudioDataOutput *)arg1 ;
-(AVCaptureVideoDataOutput *)videoDataOutput;
-(void)_addVideoDataOutput;
-(void)_configureStillImageOutput;
-(void)_updateRotations;
-(void)_addAudioDeviceInput;
-(void)_addAudioDataOutput;
-(void)_updateUseAudio;
-(NSHashTable *)previewViews;
-(NSHashTable *)segmentManagers;
-(int)runningCount;
-(void)setRunningCount:(int)arg1 ;
-(int)pauseCount;
-(void)setPauseCount:(int)arg1 ;
-(char)hasDevice:(int)arg1 ;
-(void)_captureDeviceSubjectAreaDidChange:(id)arg1 ;
-(void)_lockExposureIfNeeded;
-(char)focusAndExposureLocked;
-(void)setFocusAndExposureLocked:(char)arg1 ;
-(void)_addObserversToVideoDeviceInput;
-(void)isRunningWithCompletion:(/*^block*/id)arg1 ;
-(void)videoOrientationWithCompletion:(/*^block*/id)arg1 ;
-(void)hasVideoStabilizationWithCompletion:(/*^block*/id)arg1 ;
-(void)stabilizeVideoWhenAvailable:(char)arg1 ;
-(AVCaptureSession *)session;
-(void)dealloc;
-(id)init;
-(void)stop;
-(void)start;
-(void)setMode:(int)arg1 ;
-(int)mode;
-(void)resume;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(void)_applicationDidEnterBackground:(id)arg1 ;
-(void)_applicationWillEnterForeground:(id)arg1 ;
-(void)pause;
-(AVCaptureDeviceInput *)audioDeviceInput;
-(void)captureOutput:(id)arg1 didOutputSampleBuffer:(opaqueCMSampleBufferRef)arg2 fromConnection:(id)arg3 ;
-(void)setVideoOrientation:(int)arg1 ;
-(void)setStillImageOutput:(AVCaptureStillImageOutput *)arg1 ;
-(AVCaptureStillImageOutput *)stillImageOutput;
-(void)setFlashMode:(int)arg1 ;
-(void)setTorchMode:(int)arg1 ;
-(NSObject*<OS_dispatch_queue>)sessionQueue;
-(void)_setDevice:(int)arg1 ;
-(NSObject*<OS_dispatch_queue>)dataQueue;
-(void)toggleCamera;
-(void)setDevice:(int)arg1 ;
@end

