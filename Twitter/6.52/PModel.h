/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 14, 2016 at 9:31:58 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/8A9DE0F0-8C0D-4043-A8B5-545C839396E1/Twitter.app/Twitter
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/NSURLSessionDelegate.h>

@protocol PModelLoggingDelegate, PModelTrustDelegate, PTrustEvaluationDelegate;
@class SQLIFOQueue, SQWorkServer, NSURLSession, NSOperationQueue, NSString;

@interface PModel : NSObject <NSURLSessionDelegate> {

	SQLIFOQueue* _networkQueue;
	SQLIFOQueue* _imageProcessingQueue;
	SQWorkServer* _networkWorkServer;
	SQWorkServer* _imageProcessingServer;
	NSURLSession* _session;
	NSOperationQueue* _sessionQueue;
	int _defaultConcurrency;
	id<PModelLoggingDelegate> _logDelegate;
	id<PModelTrustDelegate> _trustDelegate;
	id<PTrustEvaluationDelegate> _trustEvaluationDelegate;

}

@property (assign,nonatomic,__weak) id<PModelLoggingDelegate> logDelegate;                             //@synthesize logDelegate=_logDelegate - In the implementation block
@property (assign,nonatomic,__weak) id<PModelTrustDelegate> trustDelegate;                             //@synthesize trustDelegate=_trustDelegate - In the implementation block
@property (assign,nonatomic,__weak) id<PTrustEvaluationDelegate> trustEvaluationDelegate;              //@synthesize trustEvaluationDelegate=_trustEvaluationDelegate - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)SharedInstance;
-(void)setTrustEvaluationDelegate:(id<PTrustEvaluationDelegate>)arg1 ;
-(id)cacheObjectForKey:(id)arg1 ;
-(void)setCacheObject:(id)arg1 forKey:(id)arg2 ;
-(void)_jsonData:(id)arg1 method:(id)arg2 responseClass:(Class)arg3 parameters:(id)arg4 multiPartFile:(id)arg5 timeout:(double)arg6 retryAttempts:(int)arg7 retryDelay:(double)arg8 retryQueue:(id)arg9 activityWillStartBlock:(/*^block*/id)arg10 activityWillStopBlock:(/*^block*/id)arg11 completion:(/*^block*/id)arg12 ;
-(void)_postAuthenticationErrorNotificationOnMainThread:(id)arg1 ;
-(void)_imageData:(id)arg1 timeout:(double)arg2 activityWillStartBlock:(/*^block*/id)arg3 completion:(/*^block*/id)arg4 activityWillStopBlock:(/*^block*/id)arg5 ;
-(void)post:(id)arg1 responseClass:(Class)arg2 parameters:(id)arg3 workClient:(id)arg4 cachePolicy:(int)arg5 cacheKey:(id)arg6 multiPartFile:(id)arg7 activityWillStartBlock:(/*^block*/id)arg8 activityWillStopBlock:(/*^block*/id)arg9 completion:(/*^block*/id)arg10 ;
-(void)post:(id)arg1 responseClass:(Class)arg2 parameters:(id)arg3 workClient:(id)arg4 cachePolicy:(int)arg5 cacheKey:(id)arg6 multiPartFile:(id)arg7 getCacheHandler:(/*^block*/id)arg8 setCacheHandler:(/*^block*/id)arg9 activityWillStartBlock:(/*^block*/id)arg10 activityWillStopBlock:(/*^block*/id)arg11 completion:(/*^block*/id)arg12 ;
-(void)upload:(id)arg1 uploadData:(id)arg2 contentType:(id)arg3 contentLength:(id)arg4 activityWillStartBlock:(/*^block*/id)arg5 activityWillStopBlock:(/*^block*/id)arg6 completion:(/*^block*/id)arg7 ;
-(void)post:(id)arg1 responseClass:(Class)arg2 parameters:(id)arg3 multiPartFile:(id)arg4 activityWillStartBlock:(/*^block*/id)arg5 activityWillStopBlock:(/*^block*/id)arg6 completion:(/*^block*/id)arg7 ;
-(void)post:(id)arg1 responseClass:(Class)arg2 parameters:(id)arg3 multiPartFile:(id)arg4 retryAttempts:(int)arg5 requestTimeout:(double)arg6 activityWillStartBlock:(/*^block*/id)arg7 completion:(/*^block*/id)arg8 activityWillStopBlock:(/*^block*/id)arg9 ;
-(void)getRemoteImage:(id)arg1 cacheKey:(id)arg2 cachePolicy:(int)arg3 context:(id)arg4 immediateBlock:(/*^block*/id)arg5 eventualBlock:(/*^block*/id)arg6 errorBlock:(/*^block*/id)arg7 shouldExecuteEventually:(/*^block*/id)arg8 shouldCache:(char)arg9 activityWillStartBlock:(/*^block*/id)arg10 completion:(/*^block*/id)arg11 activityWillStopBlock:(/*^block*/id)arg12 ;
-(void)processImageWork:(/*^block*/id)arg1 forWorkClient:(id)arg2 cachePolicy:(int)arg3 cacheKey:(id)arg4 ;
-(void)customRequestForWorkClient:(id)arg1 cachePolicy:(int)arg2 cacheKey:(id)arg3 completion:(/*^block*/id)arg4 ;
-(void)pushCustomRequest:(/*^block*/id)arg1 ;
-(void)setMaxNetworkQueueSize:(int)arg1 ;
-(void)setMaxConcurrentHTTPOperationCount:(int)arg1 ;
-(void)resetMaxConcurrentHTTPOperations;
-(void)timedJSONPostRequest:(id)arg1 responseClass:(Class)arg2 parameters:(id)arg3 multiPartFile:(id)arg4 activityWillStartBlock:(/*^block*/id)arg5 activityWillStopBlock:(/*^block*/id)arg6 completion:(/*^block*/id)arg7 ;
-(void)timedImageGetRequest:(id)arg1 activityWillStartBlock:(/*^block*/id)arg2 completionBlock:(/*^block*/id)arg3 activityWillStopBlock:(/*^block*/id)arg4 ;
-(id<PModelLoggingDelegate>)logDelegate;
-(id<PModelTrustDelegate>)trustDelegate;
-(void)setTrustDelegate:(id<PModelTrustDelegate>)arg1 ;
-(id<PTrustEvaluationDelegate>)trustEvaluationDelegate;
-(void)URLSession:(id)arg1 didReceiveChallenge:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(id)init;
-(void)reset;
-(void)setLogDelegate:(id<PModelLoggingDelegate>)arg1 ;
-(id)workQueue;
@end

