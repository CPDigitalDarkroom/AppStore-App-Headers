/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 14, 2016 at 9:31:58 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/8A9DE0F0-8C0D-4043-A8B5-545C839396E1/Twitter.app/Twitter
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Twitter/PViewController.h>
#import <Twitter/PChannelDelegate.h>
#import <Twitter/PMessageQueueDeliverySource.h>
#import <Twitter/PVideoReplayDelegate.h>
#import <Twitter/PVideoPlaybackViewControllerDelegate.h>

@protocol PWatchBroadcastViewControllerDelegate;
@class PVideoPlaybackViewController, PChatTableViewController, NSString, NSDate, NSURL, UIView, PBroadcast, PChannel, NSMutableArray, NSTimer;

@interface PWatchBroadcastViewController : PViewController <PChannelDelegate, PMessageQueueDeliverySource, PVideoReplayDelegate, PVideoPlaybackViewControllerDelegate> {

	id _weakSelf;
	PVideoPlaybackViewController* _hlsVideoPlaybackController;
	PChatTableViewController* _chatTableViewController;
	NSString* _liveSession;
	NSString* _replaySession;
	unsigned _presentOccupancy;
	unsigned _numberOfDroppedMessages;
	int _participant_index;
	char _isActive;
	char _isReplayViewer;
	char _hasBeenActive;
	char _hasReceivedFrames;
	char _resignActive;
	NSDate* _heartRateLimitBeginDate;
	NSURL* _replayOverrideURL;
	NSURL* _liveOverrideURL;
	UIView* _broadcastThumbnail;
	int _heartsReceivedDuringRateLimitPeriod;
	char _observingBroadcast;
	char _hasReceivedMetaData;
	char _entryFromTwitter;
	char _shouldCallStopWatching;
	char _cinemaModeEnabled;
	char _shouldDeliverImmediateMessage;
	char _hasCalledStopWatchingLive;
	char _hasCalledStopWatchingReplay;
	PBroadcast* _broadcast;
	PChannel* _channel;
	id<PWatchBroadcastViewControllerDelegate> _watchBroadcastDelegate;
	NSMutableArray* _eventualChatAndShareMessageQueue;
	NSMutableArray* _immediateChatAndShareMessageQueue;
	NSMutableArray* _heartMessageQueue;
	NSMutableArray* _otherMessageQueue;
	NSTimer* _messagePlaybackTimer;
	NSTimer* _pingWatchingTimer;
	NSTimer* _initialLoadingBarsTimer;
	NSTimer* _timeoutRefreshTimer;

}

@property (nonatomic,retain) PBroadcast * broadcast;                                                               //@synthesize broadcast=_broadcast - In the implementation block
@property (nonatomic,retain) PChannel * channel;                                                                   //@synthesize channel=_channel - In the implementation block
@property (assign,nonatomic) unsigned numberOfDroppedMessages;                                                     //@synthesize numberOfDroppedMessages=_numberOfDroppedMessages - In the implementation block
@property (assign,nonatomic) char cinemaModeEnabled;                                                               //@synthesize cinemaModeEnabled=_cinemaModeEnabled - In the implementation block
@property (nonatomic,readonly) char isActive;                                                                      //@synthesize isActive=_isActive - In the implementation block
@property (assign,nonatomic) char resignActive;                                                                    //@synthesize resignActive=_resignActive - In the implementation block
@property (assign,nonatomic) float bottomInset; 
@property (assign,nonatomic,__weak) id<PWatchBroadcastViewControllerDelegate> watchBroadcastDelegate;              //@synthesize watchBroadcastDelegate=_watchBroadcastDelegate - In the implementation block
@property (nonatomic,readonly) NSMutableArray * eventualChatAndShareMessageQueue;                                  //@synthesize eventualChatAndShareMessageQueue=_eventualChatAndShareMessageQueue - In the implementation block
@property (nonatomic,readonly) NSMutableArray * immediateChatAndShareMessageQueue;                                 //@synthesize immediateChatAndShareMessageQueue=_immediateChatAndShareMessageQueue - In the implementation block
@property (nonatomic,readonly) NSMutableArray * heartMessageQueue;                                                 //@synthesize heartMessageQueue=_heartMessageQueue - In the implementation block
@property (nonatomic,readonly) NSMutableArray * otherMessageQueue;                                                 //@synthesize otherMessageQueue=_otherMessageQueue - In the implementation block
@property (nonatomic,retain) NSTimer * messagePlaybackTimer;                                                       //@synthesize messagePlaybackTimer=_messagePlaybackTimer - In the implementation block
@property (nonatomic,retain) NSTimer * pingWatchingTimer;                                                          //@synthesize pingWatchingTimer=_pingWatchingTimer - In the implementation block
@property (nonatomic,retain) NSTimer * initialLoadingBarsTimer;                                                    //@synthesize initialLoadingBarsTimer=_initialLoadingBarsTimer - In the implementation block
@property (nonatomic,retain) NSTimer * timeoutRefreshTimer;                                                        //@synthesize timeoutRefreshTimer=_timeoutRefreshTimer - In the implementation block
@property (assign,nonatomic) char shouldDeliverImmediateMessage;                                                   //@synthesize shouldDeliverImmediateMessage=_shouldDeliverImmediateMessage - In the implementation block
@property (assign,nonatomic) char hasCalledStopWatchingLive;                                                       //@synthesize hasCalledStopWatchingLive=_hasCalledStopWatchingLive - In the implementation block
@property (assign,nonatomic) char hasCalledStopWatchingReplay;                                                     //@synthesize hasCalledStopWatchingReplay=_hasCalledStopWatchingReplay - In the implementation block
@property (nonatomic,retain) PChatTableViewController * chatTableViewController;                                   //@synthesize chatTableViewController=_chatTableViewController - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)setWatchBroadcastDelegate:(id<PWatchBroadcastViewControllerDelegate>)arg1 ;
-(void)displayTwitterLikeWithColor:(id)arg1 ;
-(void)displayTwitterRetweetWithColor:(id)arg1 ;
-(char)cinemaModeEnabled;
-(void)setCinemaModeEnabled:(char)arg1 ;
-(void)setBroadcast:(PBroadcast *)arg1 ;
-(void)error:(id)arg1 context:(id)arg2 ;
-(void)unobserveBroadcast;
-(void)resetChannel;
-(void)stopWatchingLiveIfNeeded;
-(void)stopWatchingReplayIfNeeded;
-(char)_observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(void)broadcastStateChanged;
-(void)broadcastImageURLChanged;
-(void)heartThemesDidChange;
-(void)isActiveStateChanged;
-(unsigned)bestWatchingTotal;
-(void)observeBroadcast;
-(void)setInitialLoadingBarsTimer:(NSTimer *)arg1 ;
-(void)eventual:(id)arg1 context:(id)arg2 ;
-(void)subscribeToBroadcastChannel;
-(char)hasData:(id)arg1 ;
-(void)didChatStateChange:(int)arg1 channel:(id)arg2 ;
-(id)watchBroadcastView;
-(char)shouldSupportMessage:(id)arg1 ;
-(double)currentVideoPosition;
-(void)addMessage:(id)arg1 toQueue:(id)arg2 isForReplay:(char)arg3 ;
-(char)shouldVerifySignature;
-(char)replayIsMP4;
-(PChatTableViewController *)chatTableViewController;
-(void)startMessageTimerIfNeeded;
-(void)setMessagePlaybackTimer:(NSTimer *)arg1 ;
-(void)videoPlaybackWillBegin;
-(void)videoPlaybackDidStall;
-(void)videoPlaybackDidFail:(id)arg1 ;
-(NSTimer *)pingWatchingTimer;
-(void)startPingWatchingTimer;
-(id)initWithBroadcast:(id)arg1 ;
-(void)startTimeoutRefreshTimer;
-(void)setTimeoutRefreshTimer:(NSTimer *)arg1 ;
-(void)setPingWatchingTimer:(NSTimer *)arg1 ;
-(void)_setIsActive:(char)arg1 ;
-(void)executePingWatching;
-(void)executeTimeoutRefresh;
-(void)setHasCalledStopWatchingLive:(char)arg1 ;
-(void)executeStopWatchingLive:(/*^block*/id)arg1 ;
-(void)setHasCalledStopWatchingReplay:(char)arg1 ;
-(void)executeStopWatchingReplay:(/*^block*/id)arg1 ;
-(unsigned)getIndexForMessage:(id)arg1 inQueue:(id)arg2 isForReplay:(char)arg3 ;
-(/*^block*/id)chatDeliveryHandler;
-(void)addChatOrShareMessageToImmediateQueue:(id)arg1 ;
-(char)synchronouslyDeliverNextMessageIfNeeded:(id)arg1 fromQueue:(id)arg2 withDeliveryBlock:(/*^block*/id)arg3 ;
-(void)eventualChatMessageQueueDeliveryBlock;
-(/*^block*/id)heartDeliveryHandler;
-(void)heartMessageQueueDeliveryBlock;
-(/*^block*/id)otherDeliveryHandler;
-(void)otherMessageQueueDeliveryBlock;
-(id)getDeliveryDateForMessage:(id)arg1 isForReplay:(char)arg2 ;
-(void)logPubNubOutput:(id)arg1 ;
-(NSTimer *)messagePlaybackTimer;
-(char)shouldDeliverImmediateMessage;
-(void)immediateChatMessageQueueDeliveryBlock;
-(void)setShouldDeliverImmediateMessage:(char)arg1 ;
-(void)presenceEventReceived:(id)arg1 ;
-(void)loggedInUserDidJoinChat;
-(void)didReceiveParticipants:(id)arg1 ;
-(void)replayController:(id)arg1 didChangeBuffering:(char)arg2 ;
-(void)replayController:(id)arg1 didPauseAt:(double)arg2 percentageWatched:(float)arg3 ;
-(void)didExecuteBeginReplay;
-(void)clearChatQueue;
-(void)videoPlaybackDidChangePlaybackStatus:(unsigned)arg1 ;
-(void)videoPlaybackReceivedMetaData:(id)arg1 ;
-(void)videoPlaybackDidSwitchToAVPlayer:(id)arg1 ;
-(id)initWithBroadcast:(id)arg1 broadcastThumbnail:(id)arg2 broadcastID:(id)arg3 liveOverrideURL:(id)arg4 replayOverrideURL:(id)arg5 playbackViewController:(id)arg6 chatTableViewController:(id)arg7 entryFromTwitter:(char)arg8 ;
-(void)setResignActive:(char)arg1 ;
-(void)setChatTableViewController:(PChatTableViewController *)arg1 ;
-(unsigned)numberOfDroppedMessages;
-(void)setNumberOfDroppedMessages:(unsigned)arg1 ;
-(id<PWatchBroadcastViewControllerDelegate>)watchBroadcastDelegate;
-(NSMutableArray *)eventualChatAndShareMessageQueue;
-(NSMutableArray *)immediateChatAndShareMessageQueue;
-(NSMutableArray *)heartMessageQueue;
-(NSMutableArray *)otherMessageQueue;
-(NSTimer *)initialLoadingBarsTimer;
-(NSTimer *)timeoutRefreshTimer;
-(char)hasCalledStopWatchingLive;
-(char)hasCalledStopWatchingReplay;
-(char)requiresManualReplayDeliveryDateConversion;
-(char)shouldLoad;
-(void)messageReceived:(id)arg1 isForReplay:(char)arg2 ;
-(char)signerValidatesMessage:(id)arg1 ;
-(void)load:(int)arg1 ;
-(char)resignActive;
-(void)_setIsLoading:(char)arg1 ;
-(void)dealloc;
-(char)isActive;
-(void)loadView;
-(id)initWithNibName:(id)arg1 bundle:(id)arg2 ;
-(void)setData:(id)arg1 ;
-(id)context;
-(void)viewDidLoad;
-(void)viewDidAppear:(char)arg1 ;
-(void)clearTimers;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(id)access;
-(float)bottomInset;
-(PBroadcast *)broadcast;
-(void)setBottomInset:(float)arg1 ;
-(void)setChannel:(PChannel *)arg1 ;
-(PChannel *)channel;
@end

