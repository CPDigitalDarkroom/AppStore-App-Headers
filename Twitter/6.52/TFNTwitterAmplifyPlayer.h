/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 14, 2016 at 9:31:51 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/8A9DE0F0-8C0D-4043-A8B5-545C839396E1/Twitter.app/Twitter
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Twitter/Twitter-Structs.h>
#import <Twitter/TFNTwitterAVAutoplayPlayerController.h>
#import <Twitter/TFNTwitterAVScribeAutoplayPlayerDelegate.h>

@class TFNTwitterDynamicVideoAd, NSMutableArray, TFNTwitterAmplifyConfiguration, NSString, TFNTwitterAmplifyAVPlayer;

@interface TFNTwitterAmplifyPlayer : TFNTwitterAVAutoplayPlayerController <TFNTwitterAVScribeAutoplayPlayerDelegate> {

	char _playbackDidComplete;
	char _readyToPlay;
	char _attemptingToForcePlayback;
	char _didExternalPause;
	char _didPlayAd;
	char _didScribeShow;
	char _didSeekToInitialContentStartTime;
	char _isReplay;
	char _shouldSkipContent;
	TFNTwitterDynamicVideoAd* _dynamicAd;
	NSMutableArray* _videosToPlay;
	int _cachedVideoType;
	id _adObserver;
	double _initialContentStartTime;
	double _lastLatencyMeasurementStartTime;
	CGSize _contentSize;

}

@property (nonatomic,readonly) TFNTwitterAmplifyConfiguration * amplifyConfiguration; 
@property (nonatomic,retain) NSMutableArray * videosToPlay;                                        //@synthesize videosToPlay=_videosToPlay - In the implementation block
@property (assign,nonatomic) char attemptingToForcePlayback;                                       //@synthesize attemptingToForcePlayback=_attemptingToForcePlayback - In the implementation block
@property (assign,nonatomic) int cachedVideoType;                                                  //@synthesize cachedVideoType=_cachedVideoType - In the implementation block
@property (assign,nonatomic) char didExternalPause;                                                //@synthesize didExternalPause=_didExternalPause - In the implementation block
@property (assign,nonatomic) char didPlayAd;                                                       //@synthesize didPlayAd=_didPlayAd - In the implementation block
@property (assign,nonatomic) char didScribeShow;                                                   //@synthesize didScribeShow=_didScribeShow - In the implementation block
@property (assign,nonatomic) char didSeekToInitialContentStartTime;                                //@synthesize didSeekToInitialContentStartTime=_didSeekToInitialContentStartTime - In the implementation block
@property (assign,nonatomic) double initialContentStartTime;                                       //@synthesize initialContentStartTime=_initialContentStartTime - In the implementation block
@property (assign,nonatomic) char isReplay;                                                        //@synthesize isReplay=_isReplay - In the implementation block
@property (assign,nonatomic) double lastLatencyMeasurementStartTime;                               //@synthesize lastLatencyMeasurementStartTime=_lastLatencyMeasurementStartTime - In the implementation block
@property (nonatomic,readonly) char shouldSkipAd; 
@property (assign,nonatomic) char shouldSkipContent;                                               //@synthesize shouldSkipContent=_shouldSkipContent - In the implementation block
@property (nonatomic,retain) id adObserver;                                                        //@synthesize adObserver=_adObserver - In the implementation block
@property (nonatomic,readonly) NSString * scribeConnectionType; 
@property (assign,nonatomic) CGSize contentSize;                                                   //@synthesize contentSize=_contentSize - In the implementation block
@property (assign,nonatomic) char playbackDidComplete;                                             //@synthesize playbackDidComplete=_playbackDidComplete - In the implementation block
@property (assign,nonatomic) char readyToPlay;                                                     //@synthesize readyToPlay=_readyToPlay - In the implementation block
@property (nonatomic,readonly) char allowDynamicAd; 
@property (nonatomic,readonly) TFNTwitterDynamicVideoAd * dynamicAd;                               //@synthesize dynamicAd=_dynamicAd - In the implementation block
@property (nonatomic,readonly) TFNTwitterAmplifyAVPlayer * currentAVPlayer; 
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(char)readyToPlay;
-(void)skipAd;
-(char)playbackDidComplete;
-(void)scribeAction:(id)arg1 withElement:(id)arg2 parameters:(id)arg3 ;
-(void)replay;
-(void)scribeAction:(id)arg1 ;
-(void)logPromotedEventIfNeeded:(int)arg1 withVideo:(id)arg2 parameters:(id)arg3 ;
-(void)avScribePlayer:(id)arg1 scribeAction:(id)arg2 page:(id)arg3 section:(id)arg4 component:(id)arg5 element:(id)arg6 withCurrentPlaybackTime:(double)arg7 parameters:(id)arg8 ;
-(void)avScribePlayer:(id)arg1 scribePromotedEvent:(int)arg2 parameters:(id)arg3 ;
-(void)avPlayer:(id)arg1 didError:(id)arg2 withMessage:(id)arg3 ;
-(void)avPlayer:(id)arg1 playbackTimeDidProgress:(double)arg2 withIncrement:(double)arg3 ;
-(void)avPlayerDidFinishPlayback:(id)arg1 ;
-(void)avPlayerDidRecoverFromStall:(id)arg1 ;
-(void)avPlayerDidStall:(id)arg1 ;
-(TFNTwitterDynamicVideoAd *)dynamicAd;
-(void)performPlay;
-(int)_promotedEventForScribeAction:(id)arg1 ;
-(void)_scribeAction:(id)arg1 withPage:(id)arg2 section:(id)arg3 component:(id)arg4 element:(id)arg5 parameters:(id)arg6 ;
-(double)_measureLatencyWithAction:(id)arg1 ;
-(double)viewThresholdForAVScribeAutoplayPlayer:(id)arg1 ;
-(char)shouldSendTapEventForAVScribeAutoplayPlayer:(id)arg1 ;
-(char)shouldIncrementVideoViewPlaybackTimeForAVScribeAutoplayPlayer:(id)arg1 forVisibilityThreshold:(float)arg2 ;
-(char)isPlayerObscuredByOverlappingViewForAVScribeAutoplayPlayer:(id)arg1 ;
-(char)allowDynamicAd;
-(void)performDispose;
-(id)initWithSession:(id)arg1 account:(id)arg2 configuration:(id)arg3 ;
-(void)setCachedVideoType:(int)arg1 ;
-(void)_removeNotificationObservers;
-(id)adObserver;
-(void)setCurrentAVPlayer:(TFNTwitterAmplifyAVPlayer *)arg1 ;
-(char)didPlayAd;
-(char)isReplay;
-(TFNTwitterAmplifyConfiguration *)amplifyConfiguration;
-(void)_didFailToLoadPlaylistWithError:(id)arg1 ;
-(void)_didFinishLoadingPlaylist;
-(void)setReadyToPlay:(char)arg1 ;
-(void)_setupVideosToPlay;
-(char)shouldSkipContent;
-(NSMutableArray *)videosToPlay;
-(void)setAdObserver:(id)arg1 ;
-(void)_setupAVPlayerWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)setVideosToPlay:(NSMutableArray *)arg1 ;
-(char)shouldSkipAd;
-(void)_avPlayerRequestDidCompleteWithAVPlayer:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)setDidExternalPause:(char)arg1 ;
-(void)_resumePlayback;
-(char)didScribeShow;
-(void)setDidScribeShow:(char)arg1 ;
-(void)setIsReplay:(char)arg1 ;
-(void)setShouldSkipContent:(char)arg1 ;
-(void)setDidPlayAd:(char)arg1 ;
-(int)cachedVideoType;
-(void)setPlaybackDidComplete:(char)arg1 ;
-(void)_playNextVideo;
-(void)_allVideosPlaybackDidFinish;
-(char)didSeekToInitialContentStartTime;
-(double)initialContentStartTime;
-(void)setDidSeekToInitialContentStartTime:(char)arg1 ;
-(char)_shouldLoopContentVideo;
-(void)_loopContentVideo;
-(char)hasUnplayedAds;
-(char)attemptingToForcePlayback;
-(void)setAttemptingToForcePlayback:(char)arg1 ;
-(char)didExternalPause;
-(void)_sendVMAPBeaconForScribeAction:(id)arg1 ;
-(NSString *)scribeConnectionType;
-(void)_logPromotedEvent:(int)arg1 withVideo:(id)arg2 parameters:(id)arg3 ;
-(float)visibilityPercentageForAVScribeAutoplayPlayer:(id)arg1 ;
-(void)avScribeAutoplayPlayerDidReceiveTimedMetadata:(id)arg1 timedMetadata:(id)arg2 ;
-(void)avScribeAutoplayPlayerDidUpdateItemStatus:(id)arg1 itemStatus:(int)arg2 ;
-(void)avScribeAutoplayPlayerDidUpdatePlaybackLikelyToKeepUp:(id)arg1 playbackLikelyToKeepUp:(char)arg2 ;
-(void)performInitiateBuffering;
-(void)performPause;
-(void)setInitialContentStartTime:(double)arg1 ;
-(double)lastLatencyMeasurementStartTime;
-(void)setLastLatencyMeasurementStartTime:(double)arg1 ;
-(void)seekToTime:(double)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)setDelegate:(id)arg1 ;
-(void)dealloc;
-(CGSize)contentSize;
-(int)type;
-(void)setContentSize:(CGSize)arg1 ;
@end

