/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 14, 2016 at 9:31:20 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/8A9DE0F0-8C0D-4043-A8B5-545C839396E1/Twitter.app/Twitter
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Twitter/T1ProfileDataSource.h>

@protocol TFNTwitterStatusSocialContext;
@class TFNTwitterUser, TFNTwitterUserExtendedProfile, NSString, UIColor, TFNTwitterPlace, TFNTwitterEntitySet, TFNTwitterEntityURL, UIImage, NSNumber, TFNTwitterStatus, NSArray, NSMutableSet, TFNTwitterAccount, NSMutableArray;

@interface T1ProfileUserDataSource : NSObject <T1ProfileDataSource> {

	char _forOwnProfile;
	double _lastRefreshTime;
	char _loadedOnce;
	char _hasRequestedGenericUserRecommendations;
	char _hasRequestedClusterFollowRecommendations;
	int _lastError;
	char _dataReady;
	char _observingAccountNotifications;
	char _observingUserNotifications;
	char _requestingWTFUserRecommendations;
	char _deferringAPIRequests;
	char _suspendedAccount;
	char _needsExtendedProfileUpdate;
	char _isLoadingPinnedTweet;
	UIImage* _avatarImage;
	NSArray* _userRecommendations;
	TFNTwitterUser* _user;
	id<TFNTwitterStatusSocialContext> _socialContext;
	NSArray* _clusterFollowRecommendations;
	NSMutableSet* _recommendationsScheduledForReplenish;
	NSString* _profileBannerURL;
	TFNTwitterAccount* _viewerAccount;
	NSMutableArray* _deferredAPIRequestBlocks;
	TFNTwitterStatus* _pinnedTweet;

}

@property (nonatomic,copy) NSArray * userRecommendations;                                                                  //@synthesize userRecommendations=_userRecommendations - In the implementation block
@property (nonatomic,copy) NSArray * clusterFollowRecommendations;                                                         //@synthesize clusterFollowRecommendations=_clusterFollowRecommendations - In the implementation block
@property (nonatomic,retain) NSMutableSet * recommendationsScheduledForReplenish;                                          //@synthesize recommendationsScheduledForReplenish=_recommendationsScheduledForReplenish - In the implementation block
@property (nonatomic,retain) TFNTwitterUser * user;                                                                        //@synthesize user=_user - In the implementation block
@property (nonatomic,copy) NSString * profileBannerURL;                                                                    //@synthesize profileBannerURL=_profileBannerURL - In the implementation block
@property (assign,getter=isDataReady,nonatomic) char dataReady;                                                            //@synthesize dataReady=_dataReady - In the implementation block
@property (nonatomic,readonly) TFNTwitterAccount * viewerAccount;                                                          //@synthesize viewerAccount=_viewerAccount - In the implementation block
@property (assign,getter=isObservingAccountNotifications,nonatomic) char observingAccountNotifications;                    //@synthesize observingAccountNotifications=_observingAccountNotifications - In the implementation block
@property (assign,getter=isObservingUserNotifications,nonatomic) char observingUserNotifications;                          //@synthesize observingUserNotifications=_observingUserNotifications - In the implementation block
@property (assign,getter=isRequestingWTFUserRecommendations,nonatomic) char requestingWTFUserRecommendations;              //@synthesize requestingWTFUserRecommendations=_requestingWTFUserRecommendations - In the implementation block
@property (nonatomic,readonly) NSMutableArray * deferredAPIRequestBlocks;                                                  //@synthesize deferredAPIRequestBlocks=_deferredAPIRequestBlocks - In the implementation block
@property (assign,getter=isDeferringAPIRequests,nonatomic) char deferringAPIRequests;                                      //@synthesize deferringAPIRequests=_deferringAPIRequests - In the implementation block
@property (assign,getter=isSuspendedAccount,nonatomic) char suspendedAccount;                                              //@synthesize suspendedAccount=_suspendedAccount - In the implementation block
@property (assign,nonatomic) char needsExtendedProfileUpdate;                                                              //@synthesize needsExtendedProfileUpdate=_needsExtendedProfileUpdate - In the implementation block
@property (assign,nonatomic) char isLoadingPinnedTweet;                                                                    //@synthesize isLoadingPinnedTweet=_isLoadingPinnedTweet - In the implementation block
@property (nonatomic,retain) TFNTwitterStatus * pinnedTweet;                                                               //@synthesize pinnedTweet=_pinnedTweet - In the implementation block
@property (nonatomic,retain) id<TFNTwitterStatusSocialContext> socialContext;                                              //@synthesize socialContext=_socialContext - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) TFNTwitterUserExtendedProfile * extendedProfile; 
@property (nonatomic,copy,readonly) NSString * displayUsername; 
@property (nonatomic,copy,readonly) NSString * username; 
@property (nonatomic,copy,readonly) NSString * fullName; 
@property (nonatomic,readonly) UIColor * profileLinkColor; 
@property (nonatomic,copy,readonly) NSString * location; 
@property (nonatomic,readonly) TFNTwitterPlace * structuredLocation; 
@property (nonatomic,copy,readonly) NSString * bio; 
@property (nonatomic,readonly) TFNTwitterEntitySet * bioEntities; 
@property (nonatomic,copy,readonly) NSString * url; 
@property (nonatomic,readonly) TFNTwitterEntityURL * entityURL; 
@property (nonatomic,readonly) UIImage * avatarImage;                                                                      //@synthesize avatarImage=_avatarImage - In the implementation block
@property (getter=isViewingOwnProfile,nonatomic,readonly) char viewingOwnProfile; 
@property (getter=isVerifiedAccount,nonatomic,readonly) char verifiedAccount; 
@property (getter=isProtectedAccount,nonatomic,readonly) char protectedAccount; 
@property (getter=isTwitterAlertsInstitution,nonatomic,readonly) char twitterAlertsInstitution; 
@property (nonatomic,readonly) char needsSetup; 
@property (getter=isUserRelationshipReady,nonatomic,readonly) char userRelationshipReady; 
@property (getter=isFollowingViewer,nonatomic,readonly) char followingViewer; 
@property (getter=isFollowedByViewer,nonatomic,readonly) char followedByViewer; 
@property (getter=isMutedByViewer,nonatomic,readonly) char mutedByViewer; 
@property (getter=isBlockedByViewer,nonatomic,readonly) char blockedByViewer; 
@property (getter=isBlockingViewer,nonatomic,readonly) char blockingViewer; 
@property (getter=isTwitterAlertsActivatedByViewer,nonatomic,readonly) char twitterAlertsActivatedByViewer; 
@property (getter=isViewerDeviceFollowing,nonatomic,readonly) char viewerDeviceFollowing; 
@property (nonatomic,readonly) char viewerCanDM; 
@property (nonatomic,readonly) char hasPendingFollowRequest; 
@property (nonatomic,readonly) NSNumber * tweetCount; 
@property (nonatomic,readonly) NSNumber * mediaTweetCount; 
@property (nonatomic,readonly) NSNumber * favoriteTweetCount; 
@property (nonatomic,readonly) NSNumber * followerCount; 
@property (nonatomic,readonly) NSNumber * followingCount; 
@property (nonatomic,readonly) NSNumber * followerRequestCount; 
@property (nonatomic,readonly) NSString * loadingErrorMessage; 
-(char)isViewingOwnProfile;
-(void)setSocialContext:(id<TFNTwitterStatusSocialContext>)arg1 ;
-(void)setProfileBannerURL:(NSString *)arg1 ;
-(TFNTwitterEntityURL *)entityURL;
-(id<TFNTwitterStatusSocialContext>)socialContext;
-(TFNTwitterEntitySet *)bioEntities;
-(TFNTwitterUserExtendedProfile *)extendedProfile;
-(NSNumber *)followerCount;
-(NSNumber *)followingCount;
-(char)isMutedByViewer;
-(char)isProtectedAccount;
-(char)isFollowedByViewer;
-(NSNumber *)followerRequestCount;
-(void)_startObservingAccountNotifications;
-(void)_startObservingUserNotifications;
-(NSString *)profileBannerURL;
-(TFNTwitterAccount *)viewerAccount;
-(void)setPinnedTweet:(TFNTwitterStatus *)arg1 ;
-(TFNTwitterStatus *)pinnedTweet;
-(char)isLoadingPinnedTweet;
-(void)setIsLoadingPinnedTweet:(char)arg1 ;
-(void)_relationshipStatusDidUpdate:(id)arg1 ;
-(void)_invalidateForReason:(int)arg1 ;
-(NSArray *)userRecommendations;
-(id)_exclusionIDsForRecommendations:(id)arg1 ;
-(void)_requestRecommendationsForUsersSimilarToUserID:(id)arg1 username:(id)arg2 recommendationType:(unsigned)arg3 exclusionIDs:(id)arg4 ;
-(void)invalidateDataForced:(char)arg1 ;
-(char)_shouldReload;
-(void)_loadDataForced:(char)arg1 ;
-(void)_stopObservingUserNotifications;
-(void)setRequestingWTFUserRecommendations:(char)arg1 ;
-(void)setUserRecommendations:(NSArray *)arg1 ;
-(void)setClusterFollowRecommendations:(NSArray *)arg1 ;
-(void)setDataReady:(char)arg1 ;
-(void)_sendRequestsForUpToDateUser;
-(void)_sendRequestsForPartialOrOutdatedUserForced:(char)arg1 ;
-(void)reloadRelationship;
-(void)_requestReplacementForRecommendation:(id)arg1 recommendationType:(unsigned)arg2 ;
-(char)isRequestingWTFUserRecommendations;
-(void)_receiveRecommendationsForUsersSimilarToUserResponseWithRecommendationType:(unsigned)arg1 success:(char)arg2 result:(id)arg3 error:(id)arg4 ;
-(char)isDeferringAPIRequests;
-(NSMutableArray *)deferredAPIRequestBlocks;
-(NSArray *)clusterFollowRecommendations;
-(NSMutableSet *)recommendationsScheduledForReplenish;
-(void)_receiveUserResponseWithSuccess:(char)arg1 result:(id)arg2 error:(id)arg3 ;
-(void)_sendExtendedProfileRequestIfNeeded;
-(void)_updatePinnedTweetIfNeeded;
-(void)_requestExtraProfileDataIfNeeded;
-(void)setSuspendedAccount:(char)arg1 ;
-(void)_recommendedUserDidUpdate:(id)arg1 ;
-(void)_requestRelationshipLookupForUsers:(id)arg1 invalidatingWithReason:(int)arg2 ;
-(void)_requestAccountCredentialsVerificationForced:(char)arg1 ;
-(void)_requestUserWithUserID:(id)arg1 username:(id)arg2 ;
-(char)isObservingAccountNotifications;
-(void)setObservingAccountNotifications:(char)arg1 ;
-(void)_accountSettingsPropertyDidChange:(id)arg1 ;
-(void)_accountSettingsDidUpdate:(id)arg1 ;
-(void)_followerRequestsDidUpdate:(id)arg1 ;
-(void)_accountDidUpdate:(id)arg1 ;
-(void)_followerRequestAccepted:(id)arg1 ;
-(char)isObservingUserNotifications;
-(void)setObservingUserNotifications:(char)arg1 ;
-(void)_userDidUpdate:(id)arg1 ;
-(void)_userDidUpdatePinnedTweet:(id)arg1 ;
-(void)_userDidUpdateUnpinnedTweet:(id)arg1 ;
-(void)_userDidUpdateProfileImage:(id)arg1 ;
-(void)_userDidUnfollow:(id)arg1 ;
-(void)_userDidBlockingUpdate:(id)arg1 ;
-(void)_userExtendedProfileDidExpire:(id)arg1 ;
-(void)_scheduleOrUnscheduleReplacementForRecommendation:(id)arg1 recommendationType:(unsigned)arg2 ;
-(char)isDataReady;
-(void)invalidateData;
-(void)requestClusterFollowRecommendationsIfNeeded;
-(UIColor *)profileLinkColor;
-(UIImage *)avatarImage;
-(char)isVerifiedAccount;
-(char)isSuspendedAccount;
-(char)isTwitterAlertsInstitution;
-(char)isUserRelationshipReady;
-(char)isFollowingViewer;
-(char)isBlockedByViewer;
-(char)isBlockingViewer;
-(char)isTwitterAlertsActivatedByViewer;
-(char)isViewerDeviceFollowing;
-(char)viewerCanDM;
-(char)hasPendingFollowRequest;
-(NSNumber *)tweetCount;
-(NSNumber *)mediaTweetCount;
-(NSNumber *)favoriteTweetCount;
-(NSString *)loadingErrorMessage;
-(id)initWithUser:(id)arg1 viewerAccount:(id)arg2 forOwnProfile:(char)arg3 ;
-(void)_stopObservingAccountNotifications;
-(void)setRecommendationsScheduledForReplenish:(NSMutableSet *)arg1 ;
-(void)setDeferringAPIRequests:(char)arg1 ;
-(char)needsExtendedProfileUpdate;
-(void)setNeedsExtendedProfileUpdate:(char)arg1 ;
-(TFNTwitterPlace *)structuredLocation;
-(TFNTwitterUser *)user;
-(void)setUser:(TFNTwitterUser *)arg1 ;
-(void)dealloc;
-(NSString *)url;
-(NSString *)location;
-(char)needsSetup;
-(NSString *)displayUsername;
-(NSString *)fullName;
-(NSString *)username;
-(NSString *)bio;
@end

