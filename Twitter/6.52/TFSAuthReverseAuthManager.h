/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 14, 2016 at 9:31:57 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/8A9DE0F0-8C0D-4043-A8B5-545C839396E1/Twitter.app/Twitter
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol TFSAuthAccountAuthService, TFSAuthCredentialStateTransitionDelegate;
@class TFSAuthAccountAuthHelper, NSMutableDictionary, TFSAuthConsumerCredential;

@interface TFSAuthReverseAuthManager : NSObject {

	TFSAuthAccountAuthHelper* _accountAuthSigner;
	NSMutableDictionary* _pendingAuthCompletionBlocks;
	TFSAuthConsumerCredential* _oAuthConsumerCredential;
	unsigned _maxReverseAuthRetryAttempts;
	id<TFSAuthAccountAuthService> _accountService;
	id<TFSAuthCredentialStateTransitionDelegate> _credentialStateTransitionDelegate;

}

@property (nonatomic,retain) TFSAuthConsumerCredential * oAuthConsumerCredential;                                                //@synthesize oAuthConsumerCredential=_oAuthConsumerCredential - In the implementation block
@property (assign,nonatomic) unsigned maxReverseAuthRetryAttempts;                                                               //@synthesize maxReverseAuthRetryAttempts=_maxReverseAuthRetryAttempts - In the implementation block
@property (assign,nonatomic,__weak) id<TFSAuthAccountAuthService> accountService;                                                //@synthesize accountService=_accountService - In the implementation block
@property (assign,nonatomic,__weak) id<TFSAuthCredentialStateTransitionDelegate> credentialStateTransitionDelegate;              //@synthesize credentialStateTransitionDelegate=_credentialStateTransitionDelegate - In the implementation block
-(void)setOAuthConsumerCredential:(TFSAuthConsumerCredential *)arg1 ;
-(void)setAccountService:(id<TFSAuthAccountAuthService>)arg1 ;
-(id<TFSAuthCredentialStateTransitionDelegate>)credentialStateTransitionDelegate;
-(void)setCredentialStateTransitionDelegate:(id<TFSAuthCredentialStateTransitionDelegate>)arg1 ;
-(char)_isReverseAuthPendingError:(id)arg1 ;
-(void)_addBlockToAuthCompletionQueueWithAccountID:(id)arg1 completionBlock:(/*^block*/id)arg2 ;
-(void)_accountDidFinishReverseAuth:(id)arg1 ;
-(void)_accountDidFailReverseAuth:(id)arg1 error:(id)arg2 ;
-(void)_processAuthCompletionBlockQueueWithAccountID:(id)arg1 success:(char)arg2 error:(id)arg3 ;
-(unsigned)maxReverseAuthRetryAttempts;
-(void)setMaxReverseAuthRetryAttempts:(unsigned)arg1 ;
-(void)reverseAuthDidCompleteForAccountID:(id)arg1 error:(id)arg2 ;
-(void)retrieveAccountCredentialWithAccountID:(id)arg1 completionBlock:(/*^block*/id)arg2 ;
-(TFSAuthConsumerCredential *)oAuthConsumerCredential;
-(id)init;
-(id<TFSAuthAccountAuthService>)accountService;
@end

