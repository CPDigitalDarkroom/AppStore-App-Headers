/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 14, 2016 at 9:31:20 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/8A9DE0F0-8C0D-4043-A8B5-545C839396E1/Twitter.app/Twitter
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Twitter/Twitter-Structs.h>
#import <TFNUI/TFNViewController.h>
#import <UIKit/UIGestureRecognizerDelegate.h>
#import <Twitter/TFNTwitterAuthenticated.h>

@protocol T1CameraPhotoViewControllerDelegate;
@class T1CameraPhotoCapture, T1CameraPreviewGridView, UITapGestureRecognizer, UILongPressGestureRecognizer, T1CameraRotatingBarButtonItem, TFNBarButtonItem, TFNTwitterAccount, T1CameraTapIndicatorView, T1CameraFocusLockIndicatorView, UIView, UIImageView, T1CameraPreviewView, NSString;

@interface T1CameraPhotoViewController : TFNViewController <UIGestureRecognizerDelegate, TFNTwitterAuthenticated> {

	int _mode;
	char _toolbarHidden;
	int _deviceOrientation;
	int _deviceOrientationForPausedPreviewView;
	int _captureDeviceForPausedPreviewView;
	T1CameraPhotoCapture* _photoCapture;
	CGRect _previewFrame;
	T1CameraPreviewGridView* _previewGridView;
	UITapGestureRecognizer* _tapGestureRecognizer;
	UILongPressGestureRecognizer* _longPressGestureRecognizer;
	T1CameraRotatingBarButtonItem* _flashButtonItem;
	TFNBarButtonItem* _cancelButtonItem;
	TFNBarButtonItem* _nextButtonItem;
	char _adjustingExposure;
	char _adjustingFocus;
	TFNTwitterAccount* _account;
	id<T1CameraPhotoViewControllerDelegate> _delegate;
	int _captureDevice;
	T1CameraTapIndicatorView* _focusIndicatorView;
	T1CameraFocusLockIndicatorView* _focusLockIndicatorView;
	UIView* _imageBackgroundView;
	UIImageView* _imageView;
	UIView* _previewOverlaysView;
	T1CameraPreviewView* _previewView;

}

@property (assign,getter=isAdjustingExposure,nonatomic) char adjustingExposure;                      //@synthesize adjustingExposure=_adjustingExposure - In the implementation block
@property (assign,getter=isAdjustingFocus,nonatomic) char adjustingFocus;                            //@synthesize adjustingFocus=_adjustingFocus - In the implementation block
@property (assign,nonatomic) int captureDevice;                                                      //@synthesize captureDevice=_captureDevice - In the implementation block
@property (nonatomic,readonly) T1CameraTapIndicatorView * focusIndicatorView;                        //@synthesize focusIndicatorView=_focusIndicatorView - In the implementation block
@property (nonatomic,readonly) T1CameraFocusLockIndicatorView * focusLockIndicatorView;              //@synthesize focusLockIndicatorView=_focusLockIndicatorView - In the implementation block
@property (nonatomic,readonly) UIView * imageBackgroundView;                                         //@synthesize imageBackgroundView=_imageBackgroundView - In the implementation block
@property (nonatomic,readonly) UIImageView * imageView;                                              //@synthesize imageView=_imageView - In the implementation block
@property (nonatomic,readonly) UIView * previewOverlaysView;                                         //@synthesize previewOverlaysView=_previewOverlaysView - In the implementation block
@property (nonatomic,readonly) T1CameraPreviewView * previewView;                                    //@synthesize previewView=_previewView - In the implementation block
@property (assign,nonatomic,__weak) id<T1CameraPhotoViewControllerDelegate> delegate;                //@synthesize delegate=_delegate - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,retain) TFNTwitterAccount * account;                                            //@synthesize account=_account - In the implementation block
-(id)scribePage;
-(id)scribeSection;
-(id)scribeComponent;
-(void)_tap:(id)arg1 ;
-(void)_deviceOrientationDidChange:(id)arg1 ;
-(void)_setupToolbar;
-(void)_layoutFocusLockIndicatorAnimated:(char)arg1 ;
-(void)_layoutPreviewView;
-(void)_updateFocusLockCapabilities;
-(void)_updateFlashButton;
-(void)_cameraControllerDidStartAdjustingFocus:(id)arg1 ;
-(void)_cameraControllerDidStopAdjustingFocus:(id)arg1 ;
-(void)_cameraControllerDidStartAdjustingExposure:(id)arg1 ;
-(void)_cameraControllerDidStopAdjustingExposure:(id)arg1 ;
-(void)_cameraControllerDidUpdateFlashAvailability:(id)arg1 ;
-(void)_setCaptureEnabled:(char)arg1 ;
-(void)_setPreviewViewPaused:(char)arg1 ;
-(void)_switchToSpeedbumpModeWithCapture:(id)arg1 ;
-(void)_switchToCaptureMode;
-(void)_logAction:(id)arg1 element:(id)arg2 ;
-(T1CameraFocusLockIndicatorView *)focusLockIndicatorView;
-(void)_setAutoFocusAndExposurePointOfInterest:(CGPoint)arg1 locked:(char)arg2 ;
-(void)_flash:(id)arg1 ;
-(void)_flip:(id)arg1 ;
-(void)_updateToolbarButtonColorsForOrientation:(int)arg1 ;
-(void)_updateFlashButtonAvailable:(char)arg1 captureMode:(int)arg2 ;
-(int)_rotationsForPausedPreviewView;
-(CGAffineTransform)_transformForDeviceOrientation;
-(void)setAdjustingFocus:(char)arg1 ;
-(void)setAdjustingExposure:(char)arg1 ;
-(T1CameraTapIndicatorView *)focusIndicatorView;
-(UIView *)previewOverlaysView;
-(UIView *)imageBackgroundView;
-(void)_displayPreview:(id)arg1 ;
-(void)usePhoto;
-(void)retakePhoto;
-(void)viewWillFullyAppear:(char)arg1 ;
-(void)viewWillFullyDisappear:(char)arg1 ;
-(void)viewDidFullyDisappear:(char)arg1 ;
-(id)scribe;
-(void)_longPress:(id)arg1 ;
-(void)_cancel:(id)arg1 ;
-(void)_updateToolbarAnimated:(char)arg1 ;
-(void)setDelegate:(id<T1CameraPhotoViewControllerDelegate>)arg1 ;
-(void)dealloc;
-(id<T1CameraPhotoViewControllerDelegate>)delegate;
-(char)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2 ;
-(char)prefersStatusBarHidden;
-(unsigned)supportedInterfaceOrientations;
-(id)initWithNibName:(id)arg1 bundle:(id)arg2 ;
-(void)viewDidLayoutSubviews;
-(void)viewDidLoad;
-(UIImageView *)imageView;
-(void)_layoutImageView;
-(void)capturePhoto;
-(void)setCaptureDevice:(int)arg1 ;
-(int)captureDevice;
-(char)isAdjustingExposure;
-(T1CameraPreviewView *)previewView;
-(char)isAdjustingFocus;
-(void)setAccount:(TFNTwitterAccount *)arg1 ;
-(TFNTwitterAccount *)account;
@end

