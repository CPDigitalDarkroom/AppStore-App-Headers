/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 14, 2016 at 9:31:23 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/8A9DE0F0-8C0D-4043-A8B5-545C839396E1/Twitter.app/Twitter
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Twitter/Twitter-Structs.h>
#import <UIKit/UIView.h>
#import <UIKit/UIGestureRecognizerDelegate.h>

@protocol T1StickerCanvasDelegate;
@class NSMutableArray, T1StickerView, UITapGestureRecognizer, UILongPressGestureRecognizer, UIPinchGestureRecognizer, UIRotationGestureRecognizer, UIPanGestureRecognizer, NSDate, T1ReactiveTrashIconView, NSString, NSArray;

@interface T1StickerCanvas : UIView <UIGestureRecognizerDelegate> {

	char _editable;
	char _tappable;
	NSMutableArray* _stickerViews;
	T1StickerView* _selectedStickerView;
	float _prevRotation;
	float _prevScale;
	CGPoint _prevTranslation;
	UITapGestureRecognizer* _tapGestureRecognizer;
	UILongPressGestureRecognizer* _longPressGestureRecognizer;
	UIPinchGestureRecognizer* _pinchGestureRecognizer;
	UIRotationGestureRecognizer* _rotationGestureRecognizer;
	UIPanGestureRecognizer* _panGestureRecognizer;
	char _startEditingInformed;
	char _waitingForAllImages;
	NSDate* _animationShouldFireAfter;
	id<T1StickerCanvasDelegate> _delegate;
	T1ReactiveTrashIconView* _trashView;
	NSString* _downloadAccountID;

}

@property (assign,nonatomic,__weak) id<T1StickerCanvasDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,readonly) NSArray * placedStickers; 
@property (nonatomic,retain) T1ReactiveTrashIconView * trashView;                      //@synthesize trashView=_trashView - In the implementation block
@property (nonatomic,retain) NSString * downloadAccountID;                             //@synthesize downloadAccountID=_downloadAccountID - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(float)visibleScale;
-(NSString *)downloadAccountID;
-(void)stickerViewDidLoadImage:(id)arg1 ;
-(id)initWithFrame:(CGRect)arg1 editable:(char)arg2 tappable:(char)arg3 ;
-(void)setDownloadAccountID:(NSString *)arg1 ;
-(NSArray *)placedStickers;
-(void)addPlacedStickers:(id)arg1 dropIfOutOfBounds:(char)arg2 waitForAllImages:(char)arg3 ;
-(char)canAddMoreStickers;
-(CGRect)tooltipRect;
-(T1ReactiveTrashIconView *)trashView;
-(id)addStickerAtInitialPosition:(id)arg1 ;
-(void)_setupTrash;
-(void)addPlacedSticker:(id)arg1 dropIfOutOfBounds:(char)arg2 ;
-(void)_selectStickerView:(id)arg1 ;
-(void)_bringStickerToFront:(id)arg1 ;
-(void)_toggleSelection:(id)arg1 ;
-(void)removeSelectedStickerAnimated:(char)arg1 ;
-(void)setTrashView:(T1ReactiveTrashIconView *)arg1 ;
-(void)_animateStickersAfterDelay:(double)arg1 ;
-(void)_animateStickerView:(id)arg1 delay:(double)arg2 ;
-(id)_stickerViewForGestureRecognizer:(id)arg1 ;
-(void)_toggleOrCycleSelection:(id)arg1 ;
-(id)_stickerViewAtPointInCanvas:(CGPoint)arg1 ;
-(void)_updateTrashWithGestureRecognizer:(id)arg1 ;
-(void)_informEditingToDelegateIfNecessary;
-(void)_endTrashUpdate;
-(id)_stickerViewsAtPointInCanvas:(CGPoint)arg1 ;
-(char)_isGestureRecognizerActive:(id)arg1 ;
-(id)_stickerViewForPlacedSticker:(id)arg1 ;
-(void)_removeSticker:(id)arg1 ;
-(void)removeAllStickers;
-(void)duplicateSelectedSticker;
-(void)animateStickers;
-(void)animateStickersWithoutDelay;
-(void)animateSelectedSticker;
-(char)handleTapAtPoint:(CGPoint)arg1 ;
-(void)_handlePan:(id)arg1 ;
-(void)_handleLongPress:(id)arg1 ;
-(void)_handleTap:(id)arg1 ;
-(void)_handlePinch:(id)arg1 ;
-(void)_handleRotation:(id)arg1 ;
-(id)initWithFrame:(CGRect)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(void)setDelegate:(id<T1StickerCanvasDelegate>)arg1 ;
-(void)dealloc;
-(id)hitTest:(CGPoint)arg1 withEvent:(id)arg2 ;
-(char)pointInside:(CGPoint)arg1 withEvent:(id)arg2 ;
-(void)layoutSubviews;
-(id<T1StickerCanvasDelegate>)delegate;
-(char)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2 ;
-(float)_scale;
-(void)setTransform:(CGAffineTransform)arg1 ;
-(void)resetSelection;
@end

