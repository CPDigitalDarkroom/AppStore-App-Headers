/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 14, 2016 at 9:31:21 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/8A9DE0F0-8C0D-4043-A8B5-545C839396E1/Twitter.app/Twitter
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Twitter/Twitter-Structs.h>
#import <UIKit/UIView.h>
#import <Twitter/T1InlineMediaViewDelegate.h>
#import <TFNUI/TIPImageFetchDelegate.h>
#import <Twitter/T1StatusViewInlineImages.h>

@protocol T1StatusViewModel, T1StatusPhotoVideoForwardViewDelegate;
@class UIView, UIImage, TIPImageFetchOperation, TFNTwitterMediaScrubbingController, TFNTwitterAccount, T1InlineMediaView, T1MultiPhotoView, TFNTwitterAVAutoplayPlayerController, TFNAVPlayerView, NSString;

@interface T1StatusPhotoVideoForwardView : UIView <T1InlineMediaViewDelegate, TIPImageFetchDelegate, T1StatusViewInlineImages> {

	unsigned _imageState;
	UIView* _possiblySensitiveView;
	UIImage* _image;
	CGRect _imageContentsRect;
	TIPImageFetchOperation* _imageFetchOp;
	char _playerWasPlaying;
	TFNTwitterMediaScrubbingController* _scrubController;
	char _scrubbing;
	id<T1StatusViewModel> _viewModel;
	TFNTwitterAccount* _account;
	unsigned _mediaForwardType;
	T1InlineMediaView* _inlineMediaView;
	T1MultiPhotoView* _multiPhotoView;
	id<T1StatusPhotoVideoForwardViewDelegate> _delegate;
	TFNTwitterAVAutoplayPlayerController* _currentInlineMediaPlayer;
	unsigned _currentInlineMediaState;
	unsigned long long _options;
	CGSize _imageSize;

}

@property (nonatomic,retain) T1MultiPhotoView * multiPhotoView;                                                   //@synthesize multiPhotoView=_multiPhotoView - In the implementation block
@property (nonatomic,readonly) TFNAVPlayerView * avPlayerView; 
@property (assign,nonatomic,__weak) TFNTwitterAVAutoplayPlayerController * currentInlineMediaPlayer;              //@synthesize currentInlineMediaPlayer=_currentInlineMediaPlayer - In the implementation block
@property (assign,nonatomic) unsigned currentInlineMediaState;                                                    //@synthesize currentInlineMediaState=_currentInlineMediaState - In the implementation block
@property (assign,nonatomic) char scrubbing;                                                                      //@synthesize scrubbing=_scrubbing - In the implementation block
@property (nonatomic,readonly) TFNTwitterMediaScrubbingController * scrubController; 
@property (nonatomic,readonly) id<T1StatusViewModel> viewModel;                                                   //@synthesize viewModel=_viewModel - In the implementation block
@property (nonatomic,readonly) unsigned long long options;                                                        //@synthesize options=_options - In the implementation block
@property (nonatomic,readonly) TFNTwitterAccount * account;                                                       //@synthesize account=_account - In the implementation block
@property (nonatomic,readonly) unsigned mediaForwardType;                                                         //@synthesize mediaForwardType=_mediaForwardType - In the implementation block
@property (nonatomic,readonly) CGSize imageSize;                                                                  //@synthesize imageSize=_imageSize - In the implementation block
@property (nonatomic,readonly) T1InlineMediaView * inlineMediaView;                                               //@synthesize inlineMediaView=_inlineMediaView - In the implementation block
@property (assign,nonatomic) float cornerRadius; 
@property (assign,nonatomic,__weak) id<T1StatusPhotoVideoForwardViewDelegate> delegate;                           //@synthesize delegate=_delegate - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) float borderCornerRadius; 
+(char)useCompactVerticalLayoutWithLayoutMetrics:(id)arg1 options:(unsigned long long)arg2 ;
+(unsigned)_imageStateForViewModel:(id)arg1 account:(id)arg2 options:(unsigned long long)arg3 mediaForwardType:(unsigned)arg4 usingCompactVerticalLayout:(char)arg5 ;
+(CGSize)preferredSizeForWidth:(float)arg1 usingCompactVerticalLayout:(char)arg2 viewModel:(id)arg3 options:(unsigned long long)arg4 mediaParameters:(id)arg5 mediaType:(unsigned)arg6 ;
-(int)mediaTypeForInlineMediaView:(id)arg1 ;
-(void)overlayButtonWasTapped:(id)arg1 event:(id)arg2 ;
-(void)overlayButtonWasLongPressed:(id)arg1 ;
-(void)mediaViewDidBeginScrubbing:(id)arg1 ;
-(void)mediaViewDidScrub:(id)arg1 deltaTranslation:(CGPoint)arg2 velocity:(CGPoint)arg3 ;
-(void)mediaViewDidEndScrubbing:(id)arg1 velocity:(CGPoint)arg2 ;
-(void)stopPlaybackIndicatorWithPlayer:(id)arg1 ;
-(void)startPlaybackIndicatorWithPlayer:(id)arg1 ;
-(id)imageViewAtIndex:(int)arg1 ;
-(CGRect)imageContentsRectAtIndex:(int)arg1 ;
-(id)_imageFetchRequestForImageAtIndex:(unsigned)arg1 ;
-(int)imageContentModeAtIndex:(int)arg1 ;
-(CGRect)_imageContentsRect;
-(void)setCurrentInlineMediaPlayer:(TFNTwitterAVAutoplayPlayerController *)arg1 ;
-(void)setCurrentInlineMediaState:(unsigned)arg1 ;
-(unsigned)currentImageState;
-(int)_imageContentMode;
-(void)_updateForImageStateSingle;
-(void)_updateForImageStateMulti;
-(void)_updateForImageStateSensitive;
-(int)_downloadContentModeForImage;
-(void)_imageTapAction;
-(void)_imageLongPressAction;
-(void)_initializeAccessoryViews;
-(void)_imageTapActionAtIndex:(unsigned)arg1 ;
-(void)_imageLongPressActionAtIndex:(unsigned)arg1 ;
-(void)_imageLoadedAtIndex:(unsigned)arg1 source:(int)arg2 success:(char)arg3 ;
-(TFNAVPlayerView *)avPlayerView;
-(T1InlineMediaView *)inlineMediaView;
-(unsigned)currentInlineMediaState;
-(TFNTwitterAVAutoplayPlayerController *)currentInlineMediaPlayer;
-(void)_updateImage:(id)arg1 isFinal:(char)arg2 cancelled:(char)arg3 source:(int)arg4 ;
-(char)hasAnyVisibleImageBeenDownloaded;
-(void)animateImageWithKenBurnsAnimationType:(unsigned)arg1 duration:(double)arg2 zoomScale:(float)arg3 presentationLayer:(id)arg4 ;
-(void)animateImagesWithSlideshowDuration:(double)arg1 imageIndex:(int)arg2 startingOpacity:(float)arg3 endingOpacity:(float)arg4 ;
-(void)setViewModel:(id)arg1 options:(unsigned long long)arg2 account:(id)arg3 mediaForwardType:(unsigned)arg4 imageSize:(CGSize)arg5 ;
-(void)stopLoadingIndicatorAndShowPlayButton:(char)arg1 ;
-(unsigned)mediaForwardType;
-(T1MultiPhotoView *)multiPhotoView;
-(void)setMultiPhotoView:(T1MultiPhotoView *)arg1 ;
-(char)scrubbing;
-(void)imageFetchOperation:(id)arg1 didLoadFinalImage:(id)arg2 fromSource:(int)arg3 ;
-(char)imageFetchOperation:(id)arg1 shouldLoadProgressivelyWithIdentifier:(id)arg2 URL:(id)arg3 imageType:(int)arg4 originalDimensions:(CGSize)arg5 ;
-(void)imageFetchOperation:(id)arg1 didFailToLoadFinalImage:(id)arg2 ;
-(char)imageFetchOperation:(id)arg1 shouldContinueLoadingAfterFetchingPreviewImage:(id)arg2 fromSource:(int)arg3 originalDimensions:(CGSize)arg4 URL:(id)arg5 identifier:(id)arg6 ;
-(void)imageFetchOperation:(id)arg1 didUpdateProgressiveImage:(id)arg2 fromSource:(int)arg3 progress:(float)arg4 ;
-(void)setScrubbing:(char)arg1 ;
-(id<T1StatusViewModel>)viewModel;
-(int)mediaType;
-(id)initWithFrame:(CGRect)arg1 ;
-(void)setDelegate:(id<T1StatusPhotoVideoForwardViewDelegate>)arg1 ;
-(void)dealloc;
-(void)layoutSubviews;
-(id<T1StatusPhotoVideoForwardViewDelegate>)delegate;
-(void)setCornerRadius:(float)arg1 ;
-(float)cornerRadius;
-(CGSize)imageSize;
-(void)_cleanup;
-(unsigned long long)options;
-(void)startLoadingIndicator;
-(TFNTwitterMediaScrubbingController *)scrubController;
-(void)_updateContent;
-(TFNTwitterAccount *)account;
-(id)imageAtIndex:(int)arg1 ;
-(float)borderCornerRadius;
@end

