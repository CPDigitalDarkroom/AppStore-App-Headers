/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 14, 2016 at 9:31:45 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/8A9DE0F0-8C0D-4043-A8B5-545C839396E1/Twitter.app/Twitter
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Twitter/Twitter-Structs.h>
#import <Twitter/TFNTwitterStatusStream.h>

@class NSString, NSDate, TFNTwitterDummyStatus, TFNTwitterStatus;

@interface TFNTwitterConcreteStatusesStream : TFNTwitterStatusStream {

	NSString* _guid;
	NSDate* _lastUpdated;
	TFNTwitterDummyStatus* _dummyEndOfStream;
	TFNTwitterDummyStatus* _dummyLoading;
	TFNTwitterStatus* _newestStatus;
	struct {
		unsigned isLoadingNewer : 1;
		unsigned isLoadingOlder : 1;
		unsigned isAtEnd : 1;
		unsigned loadingOlderLessThan20Count : 5;
		unsigned needsToLoadFromDisk : 1;
		unsigned loadConservatively : 1;
	}  _flags;
	char _shouldObserveDeleteStatusNotifications;

}

@property (assign,nonatomic) char loadConservatively; 
@property (assign,nonatomic) char shouldObserveDeleteStatusNotifications;              //@synthesize shouldObserveDeleteStatusNotifications=_shouldObserveDeleteStatusNotifications - In the implementation block
-(char)loadNewerWithSource:(int)arg1 ;
-(char)isLoadingNewer;
-(void)removeStreamObject:(id)arg1 ;
-(id)autosaveName;
-(id)statuses;
-(void)setStatuses:(id)arg1 ;
-(char)hasRealData;
-(void)postStatusesChangedNotificationWithName:(id)arg1 type:(int)arg2 resultCount:(unsigned)arg3 source:(int)arg4 error:(id)arg5 ;
-(void)addStatus:(id)arg1 ;
-(id)_errorStatusForError:(id)arg1 ;
-(void)removeAllStreamObjects;
-(char)loadGap:(id)arg1 withSource:(int)arg2 ;
-(void)setLoadConservatively:(char)arg1 ;
-(void)setIsLoadingNewer:(char)arg1 ;
-(void)setIsLoadingOlder:(char)arg1 ;
-(char)loadConservatively;
-(id)itemsToBeSerialized;
-(void)removeContentRelatedToUser:(id)arg1 ;
-(void)removeFirstNStreamObjects:(unsigned)arg1 ;
-(id)newestStatus;
-(void)removeHalfOfStreamObjects;
-(void)removeLastNStreamObjects:(unsigned)arg1 ;
-(void)_deleteStatusNotification:(id)arg1 ;
-(void)addFooterObjectsToStatuses:(id)arg1 ;
-(void)_retryLoadOlderWithSource:(int)arg1 ;
-(id)_emptyStreamStatus;
-(char)shouldIndexUsersInAutocomplete;
-(int)maxObjectsCount;
-(void)addStreamObjects:(id)arg1 needsSortAndDedupe:(char)arg2 notify:(char)arg3 ;
-(void)_streamResponse:(id)arg1 couldBeGap:(char)arg2 isFromFillingInGap:(char)arg3 source:(int)arg4 ;
-(id)definitiveStatuses:(id)arg1 ;
-(void)_loadBeforeGap:(id)arg1 source:(int)arg2 ;
-(id)_guid;
-(int)minStatusesToConsiderBeingGap;
-(void)setShouldObserveDeleteStatusNotifications:(char)arg1 ;
-(id)newestStatusID;
-(/*^block*/id)loadGapResponseBlock:(id)arg1 source:(int)arg2 ;
-(id)newestStatusThatIsNotMine;
-(id)_storedStreamPath;
-(char)shouldObserveDeleteStatusNotifications;
-(void)markAtEnd;
-(/*^block*/id)loadNewerResponseBlock:(int)arg1 ;
-(/*^block*/id)loadOlderResponseBlock:(int)arg1 ;
-(id)oldestStatus;
-(void)_loadNewerWithSource:(int)arg1 ;
-(void)_loadOlderWithSource:(int)arg1 ;
-(char)_status:(id)arg1 isNewerThanStatus:(id)arg2 ;
-(id)_sortStreamObjects:(id)arg1 ;
-(id)oldestStatusID;
-(char)loadOlderWithSource:(int)arg1 ;
-(char)isLoadingOlder;
-(void)dealloc;
-(id)init;
-(char)isAtEnd;
-(char)hasData;
-(id)lastUpdated;
@end

