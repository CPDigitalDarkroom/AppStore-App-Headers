/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 14, 2016 at 9:31:37 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/8A9DE0F0-8C0D-4043-A8B5-545C839396E1/Twitter.app/Twitter
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Twitter/Twitter-Structs.h>
#import <Twitter/T1MomentPageBackgroundViewController.h>
#import <Twitter/TFNTwitterAVScribePlayerDelegate.h>

@class T1AudioPlayerActionHandler, TFNTwitterStatus, TFNTwitterAVScribePlayer, TFNTwitterAudioPlaylist, T1NativeAudioCardViewModel, NSError, TFNTwitterAudioTrack, NSString;

@interface T1MomentPageAudioElementViewController : T1MomentPageBackgroundViewController <TFNTwitterAVScribePlayerDelegate> {

	char _docked;
	char _audioPlaying;
	T1AudioPlayerActionHandler* _actionHandler;
	TFNTwitterStatus* _status;
	TFNTwitterAVScribePlayer* _player;
	TFNTwitterAudioPlaylist* _playlist;
	T1NativeAudioCardViewModel* _audioCardViewModel;
	NSError* _playbackError;

}

@property (nonatomic,retain) T1AudioPlayerActionHandler * actionHandler;                   //@synthesize actionHandler=_actionHandler - In the implementation block
@property (nonatomic,retain) TFNTwitterStatus * status;                                    //@synthesize status=_status - In the implementation block
@property (nonatomic,retain) TFNTwitterAVScribePlayer * player;                            //@synthesize player=_player - In the implementation block
@property (nonatomic,retain) TFNTwitterAudioPlaylist * playlist;                           //@synthesize playlist=_playlist - In the implementation block
@property (nonatomic,retain) T1NativeAudioCardViewModel * audioCardViewModel;              //@synthesize audioCardViewModel=_audioCardViewModel - In the implementation block
@property (assign,getter=isAudioPlaying,nonatomic) char audioPlaying;                      //@synthesize audioPlaying=_audioPlaying - In the implementation block
@property (nonatomic,retain) NSError * playbackError;                                      //@synthesize playbackError=_playbackError - In the implementation block
@property (nonatomic,readonly) TFNTwitterAudioTrack * currentTrack; 
@property (assign,nonatomic) char docked;                                                  //@synthesize docked=_docked - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)backgroundViewControllerForMomentPage:(id)arg1 account:(id)arg2 scribeContext:(id)arg3 ;
+(char)_isAppInstalledForTrack:(id)arg1 ;
-(id)callToActionText;
-(char)hasErrors;
-(char)shouldResumeMedia;
-(char)needsActivityIndicator;
-(void)preloadMediaForDisplaySize:(CGSize)arg1 ;
-(void)purgeMedia;
-(void)performCallToAction;
-(char)isPlayingMedia;
-(char)playbackFailed;
-(id)accessoryBadgeText;
-(id)initWithStatus:(id)arg1 account:(id)arg2 renderLayout:(id)arg3 referenceMediaSize:(CGSize)arg4 scribeContext:(id)arg5 ;
-(void)setDocked:(char)arg1 ;
-(char)docked;
-(void)setAudioPlaying:(char)arg1 ;
-(void)_fetchMedia;
-(char)isAudioPlaying;
-(NSError *)playbackError;
-(TFNTwitterAudioTrack *)currentTrack;
-(T1NativeAudioCardViewModel *)audioCardViewModel;
-(void)setPlaybackError:(NSError *)arg1 ;
-(void)_requestPlaylistWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)avScribePlayer:(id)arg1 scribeAction:(id)arg2 page:(id)arg3 section:(id)arg4 component:(id)arg5 element:(id)arg6 withCurrentPlaybackTime:(double)arg7 parameters:(id)arg8 ;
-(void)avScribePlayer:(id)arg1 scribePromotedEvent:(int)arg2 parameters:(id)arg3 ;
-(void)avPlayer:(id)arg1 didError:(id)arg2 withMessage:(id)arg3 ;
-(void)avPlayer:(id)arg1 playbackTimeDidProgress:(double)arg2 withIncrement:(double)arg3 ;
-(void)avPlayerDidFinishPlayback:(id)arg1 ;
-(void)avPlayerDidRecoverFromStall:(id)arg1 ;
-(void)avPlayerDidStall:(id)arg1 ;
-(void)setAudioCardViewModel:(T1NativeAudioCardViewModel *)arg1 ;
-(void)setPlayer:(TFNTwitterAVScribePlayer *)arg1 ;
-(TFNTwitterAVScribePlayer *)player;
-(void)setVolume:(float)arg1 ;
-(void)dealloc;
-(void)_reset;
-(TFNTwitterStatus *)status;
-(void)setStatus:(TFNTwitterStatus *)arg1 ;
-(void)pauseMedia;
-(void)resumeMedia;
-(void)setPlaylist:(TFNTwitterAudioPlaylist *)arg1 ;
-(TFNTwitterAudioPlaylist *)playlist;
-(id)errorString;
-(T1AudioPlayerActionHandler *)actionHandler;
-(void)setActionHandler:(T1AudioPlayerActionHandler *)arg1 ;
@end

