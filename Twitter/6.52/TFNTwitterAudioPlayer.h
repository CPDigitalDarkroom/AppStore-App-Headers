/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 14, 2016 at 9:31:41 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/8A9DE0F0-8C0D-4043-A8B5-545C839396E1/Twitter.app/Twitter
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Twitter/Twitter-Structs.h>
#import <UIKit/UIActionSheetDelegate.h>
#import <Twitter/TFNTwitterAudioPlayerViewDelegate.h>
#import <Twitter/TFNCanvasViewGestureHandlerDelegate.h>
#import <Twitter/TFNCanvasEventHandler.h>
#import <Twitter/TFNTwitterAVScribePlayerDelegate.h>

@protocol TFNTwitterAudioPlayerDelegate, TFNCanvasViewGestureHandlerProtocol, TFNTwitterAudioPlayerActionHandler;
@class NSString, UIView, TFNTwitterAudioPlaylist, TFNCanvasView, NSMutableArray, TFNHUD, NSDictionary, UIViewController, TFNTwitterAccount, TFNTwitterAudioPlayerConfiguration, TFNTwitterStatus, TFNTwitterAudioPlayerView, TFNActionSheetController, UIActionSheet, TFNTwitterAudioAVPlayer;

@interface TFNTwitterAudioPlayer : NSObject <UIActionSheetDelegate, TFNTwitterAudioPlayerViewDelegate, TFNCanvasViewGestureHandlerDelegate, TFNCanvasEventHandler, TFNTwitterAVScribePlayerDelegate> {

	id<TFNTwitterAudioPlayerDelegate> _delegate;
	/*^block*/id _disposeBlock;
	NSString* _partner;
	UIView* _previewView;
	TFNTwitterAudioPlaylist* _playlist;
	TFNCanvasView* _canvasView;
	id<TFNCanvasViewGestureHandlerProtocol> _canvasViewController;
	NSMutableArray* _avPlayers;
	int _currentTrackIndex;
	TFNHUD* _errorHUD;
	NSDictionary* _scribeBaseParameters;
	char _didPresentPlayer;
	char _isReplay;
	char _disposed;
	char _playingBeforeScrubbing;
	char _ctaClickDidScribe;
	char _ctaImpressionDidScribe;
	double _playbackTimeBeforeScrubbing;
	char _didDismissDueToPlayerError;
	double _lastLatencyMeasurementStartTime;
	double _accumulatedPeriodicBeaconDuration;
	UIViewController* _presentingViewController;
	TFNTwitterAccount* _account;
	id<TFNTwitterAudioPlayerActionHandler> _actionHandler;
	TFNTwitterAudioPlayerConfiguration* _configuration;
	TFNTwitterStatus* _status;
	TFNTwitterAudioPlayerView* _playerView;
	TFNActionSheetController* _actionSheetController;
	UIActionSheet* _legacyActionSheet;
	double _playbackDuration;

}

@property (nonatomic,readonly) TFNTwitterAccount * account;                                              //@synthesize account=_account - In the implementation block
@property (nonatomic,readonly) id<TFNTwitterAudioPlayerActionHandler> actionHandler;                     //@synthesize actionHandler=_actionHandler - In the implementation block
@property (nonatomic,readonly) TFNTwitterAudioPlayerConfiguration * configuration;                       //@synthesize configuration=_configuration - In the implementation block
@property (nonatomic,readonly) TFNTwitterAudioAVPlayer * currentAudioAVPlayer; 
@property (nonatomic,readonly) TFNTwitterStatus * status;                                                //@synthesize status=_status - In the implementation block
@property (assign,nonatomic) double playbackDuration;                                                    //@synthesize playbackDuration=_playbackDuration - In the implementation block
@property (nonatomic,retain) TFNTwitterAudioPlayerView * playerView;                                     //@synthesize playerView=_playerView - In the implementation block
@property (nonatomic,retain) TFNActionSheetController * actionSheetController;                           //@synthesize actionSheetController=_actionSheetController - In the implementation block
@property (nonatomic,retain) UIActionSheet * legacyActionSheet;                                          //@synthesize legacyActionSheet=_legacyActionSheet - In the implementation block
@property (assign,nonatomic,__weak) UIViewController * presentingViewController;                         //@synthesize presentingViewController=_presentingViewController - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (assign,nonatomic,__weak) id<TFNCanvasEventHandlerDelegate> eventHandlerDelegate; 
-(void)handleViewEvent:(id)arg1 ;
-(void)setPlayerView:(TFNTwitterAudioPlayerView *)arg1 ;
-(id)currentAVPlayer;
-(char)docked;
-(void)avScribePlayer:(id)arg1 scribeAction:(id)arg2 page:(id)arg3 section:(id)arg4 component:(id)arg5 element:(id)arg6 withCurrentPlaybackTime:(double)arg7 parameters:(id)arg8 ;
-(void)avScribePlayer:(id)arg1 scribePromotedEvent:(int)arg2 parameters:(id)arg3 ;
-(void)avPlayer:(id)arg1 didError:(id)arg2 withMessage:(id)arg3 ;
-(void)avPlayer:(id)arg1 playbackTimeDidProgress:(double)arg2 withIncrement:(double)arg3 ;
-(void)avPlayerDidFinishPlayback:(id)arg1 ;
-(void)avPlayerDidRecoverFromStall:(id)arg1 ;
-(void)avPlayerDidStall:(id)arg1 ;
-(void)disposeAnimated:(char)arg1 ;
-(void)_disposeComponents;
-(void)_scribeConsumptionDuration;
-(void)_scribeAction:(id)arg1 withElement:(id)arg2 parameters:(id)arg3 ;
-(void)_cleanupActionSheet:(char)arg1 ;
-(void)_logPromotedEvent:(int)arg1 withParameters:(id)arg2 ;
-(void)_requestPlaylist:(id)arg1 withCompletionHandler:(/*^block*/id)arg2 ;
-(void)_playlistDidFinishLoading;
-(void)_playlistDidFailToLoadWithError:(id)arg1 ;
-(void)_playlistArtworkDidDownload;
-(TFNTwitterAudioAVPlayer *)currentAudioAVPlayer;
-(void)_moreActions;
-(void)_presentationDidFinish;
-(void)_scribeCTAImpression;
-(void)_displayErrorHUDWithText:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(double)_currentScrubHeadTime;
-(char)_hasMoreTracks;
-(void)_replayFromTime:(double)arg1 ;
-(void)_scrubbingDidBegin;
-(void)_scrubbingDidChange;
-(void)_scrubbingDidEnd;
-(void)_scribeCTAClick;
-(void)_invokeCTA;
-(int)audioPlayerView:(id)arg1 appInstallStatusForTrack:(id)arg2 ;
-(void)_favoriteStatus;
-(void)_replyStatus;
-(void)_retweetStatusWithView:(id)arg1 ;
-(void)_viewTweetDetails;
-(void)_viewTweeter;
-(void)_longPressTweeterWithAvatarView:(id)arg1 ;
-(void)_sendCurrentTrackBeaconsForScribeAction:(id)arg1 ;
-(int)_promotedEventForScribeAction:(id)arg1 ;
-(void)_scribeAction:(id)arg1 withPage:(id)arg2 section:(id)arg3 component:(id)arg4 element:(id)arg5 parameters:(id)arg6 ;
-(double)_measureLatencyWithAction:(id)arg1 ;
-(id)_currentConnectionType;
-(void)audioPlayerView:(id)arg1 didChangeScrubbingState:(int)arg2 ;
-(void)audioPlayerView:(id)arg1 didRequestAction:(int)arg2 ;
-(CGRect)dockableViewController:(id)arg1 dockFrameInHostView:(id)arg2 forDockableView:(id)arg3 ;
-(void)dockableViewController:(id)arg1 didDismissDockableView:(id)arg2 ;
-(void)dockableViewController:(id)arg1 willAnimateToDismissDockableView:(id)arg2 viaGesture:(char)arg3 ;
-(void)dockableViewController:(id)arg1 willAnimateToDockDockableView:(id)arg2 viaGesture:(char)arg3 ;
-(void)dockableViewController:(id)arg1 willAnimateToFullscreenDockableView:(id)arg2 viaGesture:(char)arg3 ;
-(char)dockableViewControllerShouldAnimateFullscreenWithBounce:(id)arg1 ;
-(id)initWithDelegate:(id)arg1 configuration:(id)arg2 actionHandler:(id)arg3 account:(id)arg4 status:(id)arg5 scribeBaseParameters:(id)arg6 partner:(id)arg7 fromViewController:(id)arg8 previewView:(id)arg9 disposeBlock:(/*^block*/id)arg10 ;
-(void)playWithPlaylist:(id)arg1 ;
-(TFNActionSheetController *)actionSheetController;
-(void)setActionSheetController:(TFNActionSheetController *)arg1 ;
-(UIActionSheet *)legacyActionSheet;
-(void)setLegacyActionSheet:(UIActionSheet *)arg1 ;
-(TFNTwitterAudioPlayerView *)playerView;
-(void)dispose;
-(void)play;
-(void)_seekToTime:(double)arg1 ;
-(double)playbackDuration;
-(void)setPlaybackDuration:(double)arg1 ;
-(void)dealloc;
-(UIViewController *)presentingViewController;
-(void)setPresentingViewController:(UIViewController *)arg1 ;
-(TFNTwitterAudioPlayerConfiguration *)configuration;
-(void)actionSheet:(id)arg1 clickedButtonAtIndex:(int)arg2 ;
-(void)actionSheet:(id)arg1 willDismissWithButtonIndex:(int)arg2 ;
-(void)actionSheet:(id)arg1 didDismissWithButtonIndex:(int)arg2 ;
-(void)pause;
-(TFNTwitterStatus *)status;
-(TFNTwitterAccount *)account;
-(id<TFNTwitterAudioPlayerActionHandler>)actionHandler;
@end

