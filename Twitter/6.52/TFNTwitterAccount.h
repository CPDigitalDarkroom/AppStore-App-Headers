/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 14, 2016 at 9:31:41 PM Eastern Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /var/mobile/Containers/Bundle/Application/8A9DE0F0-8C0D-4043-A8B5-545C839396E1/Twitter.app/Twitter
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Twitter/Twitter-Structs.h>
#import <Twitter/TFNTwitterCardAPICapiConfiguration.h>
#import <Twitter/TFNTwitterAudioPartnerDataProvider.h>
#import <Twitter/TFNTwitterAmplifyConfiguration.h>
#import <Twitter/TFNTwitterAPIConfiguration.h>
#import <Twitter/TFNStoreOpenerOptions.h>
#import <Twitter/TFNPickableValue.h>
#import <Twitter/TFNTwitterAuthenticatedAPIHostDelegate.h>

@protocol TFNTwitterFeatureSwitches, TFNTwitterMomentsGuideDataManager, OS_dispatch_queue, TFNTwitterPromotableTrend;
@class NSArray, NSSet, NSNumber, NSDate, NSString, NSMutableDictionary, ACAccount, NSMutableArray, TFNHTTPRequest, TFNTwitterPostalAddress, TFNTwitterCreditCardProxy, TFNTwitterCardPersistedStateManager, TFNTwitterTimelineManager, TFNTwitterAdsManager, TFNTwitterUser, TFNTwitterSettings, TFNTwitterNotificationSettingsManager, TFNTwitterVITNotificationsSettingsManager, TFNTwitterMomentsStateManager, TFNMomentsTutorialManager, TFNTwitterSearchTypeaheadStore, TFNTwitterCompositionPersistenceManager, NSObject, TFNTwitterAccountModel, TFNTwitterHomeMutingSet, NSOperation, TFNTwitterPromptbird, TFNTwitterCompositionOutboxController, TFNTwitterApplePushDestination, TFNTwitterLoginVerification, TFNTwitterAPIConfiguration, TFNTwitterScribe, NSMutableSet, TFNTwitterHomeFriendshipSet, TFNTwitterCustomTimeline, TFNTwitterCustomTimelineList, TFNTwitterAdsAccountUsersSet, TFNFindFriendsService, TFNTwitterPromotedEventLogger, NSDictionary, TFNTwitterCachableVideoMonetizationSettings, T1AdaptiveMediaParameters, UIImage;

@interface TFNTwitterAccount : NSObject <TFNTwitterCardAPICapiConfiguration, TFNTwitterAudioPartnerDataProvider, TFNTwitterAmplifyConfiguration, TFNTwitterAPIConfiguration, TFNStoreOpenerOptions, TFNPickableValue, TFNTwitterAuthenticatedAPIHostDelegate> {

	NSDate* _freshActivityAboutMe;
	NSString* _unreadActivityCountCache;
	char _ageGatingFollowChallengeCompleted;
	NSDate* _ageVerificationLastCheckedAndFailed;
	NSMutableDictionary* _followCountUpdaters;
	NSMutableDictionary* _unfollowCountUpdaters;
	ACAccount* _systemAccount;
	NSMutableArray* _savedSearches;
	NSArray* _sulCategories;
	NSArray* _pendingFollowerRequests;
	char _refreshingFollowerRequests;
	double _lastFollowerRequestListRefresh;
	id<TFNTwitterFeatureSwitches> _featureSwitches;
	TFNHTTPRequest* _userStream;
	char _droppedLastUserStreamConnection;
	float _userStreamReconnectDelay;
	NSArray* _postalAddresses;
	TFNTwitterPostalAddress* _defaultPostalAddress;
	NSArray* _paymentMethods;
	NSArray* _partialPaymentMethods;
	NSString* _confirmationEmailAddress;
	NSArray* _billingPhoneNumbers;
	NSString* _defaultBillingPhoneNumber;
	TFNTwitterCreditCardProxy* _defaultCreditCard;
	char _paymentProfilesFetching;
	char _paymentProfilesError;
	NSDate* _paymentProfilesLastChecked;
	TFNTwitterCardPersistedStateManager* _cardPersistedStateManager;
	struct {
		unsigned staleSavedSearches : 1;
		unsigned staleLists : 1;
		unsigned loadingSavedSearches : 1;
		unsigned loadingLists : 1;
		unsigned loadingListSubscriptions : 1;
		unsigned loadingListFollowing : 1;
		unsigned loadingSULCategories : 1;
		unsigned lastGeotaggingState : 1;
		unsigned osNotificationsStateinitialized : 1;
		unsigned removingPush : 1;
	}  _flags;
	id _featureSwitchObserver;
	long long _userID;
	NSDate* _freshMentions;
	TFNTwitterTimelineManager* _timelineManager;
	TFNTwitterAdsManager* _adsManager;
	TFNTwitterUser* _user;
	TFNTwitterSettings* _settings;
	double _lastSettingsRequestTime;
	NSMutableArray* _settingsResponseBlockQueue;
	TFNTwitterNotificationSettingsManager* _notificationSettingsManager;
	TFNTwitterVITNotificationsSettingsManager* _vitNotificationsSettingsManager;
	TFNTwitterMomentsStateManager* _momentsStateManager;
	TFNMomentsTutorialManager* _momentsTutorialManager;
	id<TFNTwitterMomentsGuideDataManager> _momentsDataManager;
	TFNTwitterSearchTypeaheadStore* _typeaheadStore;
	TFNTwitterCompositionPersistenceManager* _compositionPersistenceManager;
	char _isActive;
	NSObject*<OS_dispatch_queue> _isActiveQueue;
	char _needToSaveCredentials;
	char _loadingMyUser;
	char _forceUserUpdate;
	double _lastMyUserUpdate;
	NSMutableArray* _loadingMyUserResponseBlocks;
	int _retryAferDurationForUserUpdate;
	TFNTwitterAccountModel* _model;
	NSMutableDictionary* _pendingFavorites;
	unsigned _lastPendingFavoriteId;
	NSMutableDictionary* _pendingRetweets;
	unsigned _lastPendingRetweetId;
	char _loadedBasicInfo;
	char _loadedDetailInfo;
	char _loadedNotificationSettings;
	char _loadedTypeaheadStore;
	TFNTwitterHomeMutingSet* _homeMutingSet;
	NSOperation* _reloadTypeaheadOperation;
	NSOperation* _reloadTypeaheadTopicCacheOperation;
	NSOperation* _reloadTypeaheadUserCacheOperation;
	NSOperation* _reloadTypeaheadOneClickCacheOperation;
	NSOperation* _blockedContentOperation;
	char _allowDeferredPasswordFetch;
	char _deferredMigratedToAppOAuthCredentials;
	double _deferredLastOAuthCredentialsMigrationScribe;
	char _migratedToAppOAuthCredentials;
	char _verified;
	char _systemAccountIsInvalid;
	char _addingToSystem;
	char _neverAddToSystem;
	char _migratedOAuthCredentialsToBothKeychainGroups;
	char _everTweetedFromThisDevice;
	char _whoToFollowTimelineHasPressedFindFriends;
	char _tweetComposeMapShownOnce;
	char _emptyTimelineHasPressedFindFriends;
	char _hasAttemptedToSaveWebCredentials;
	char _shouldReauthAfterAccountSyncing;
	char _shouldAddToSystemAccountsAfterReauth;
	char _accountHasBeenRemoved;
	char _forceCustomTimelinesEnabled;
	char _forceHomeTimelineUpdateIndicatorEnabled;
	char _doingReverseAuth;
	char _hasFailedReverseAuth;
	char _hasDismissedTrendsPlusPrompt;
	char _hasDismissedDMTabTakeoverPrompt;
	char _dmTabTakeoverPromptSuggested;
	char _hasDismissedVITNotificationsSettingsTakeoverPrompt;
	char _composeGeoDefaultTooltipShownInitial;
	char _composeDraftsTooltipHasBeenTapped;
	char _videoCaptureTooltipShownFirstLaunched;
	char _videoCaptureTooltipShownFirstOverrecord;
	char _videoCaptureTooltipShownFirstSegmentPlayed;
	char _videoCaptureTooltipShownFirstSegmentRecorded;
	char _videoCaptureTooltipShownFirstVideoAvailable;
	char _needsToChangePasswordForMandatoryPhoneSignUp;
	char _processingBlockedIDs;
	SCD_Struct_TF29 _creationVersion;
	NSString* _oAuthTokenSecret;
	NSDate* _lastOAuthCredentialsMigrationScribe;
	TFNTwitterPromptbird* _promptbird;
	TFNTwitterCompositionOutboxController* _outboxController;
	NSString* _accountID;
	NSString* _username;
	NSString* _oAuthToken;
	NSString* _systemAccountIdentifier;
	NSDate* _lastActiveDate;
	int _oAuthCredentialsMigrationErrorCount;
	unsigned _oAuthCredentialsKeychainGroupMigrationErrorCount;
	NSString* _apiRoot;
	NSString* _dtabHeaderValue;
	int _selectedMentionFilterType;
	int _aboutMeSourceType;
	int _aboutMeFilterType;
	TFNTwitterApplePushDestination* _applePushDestination;
	TFNTwitterLoginVerification* _loginVerification;
	int _backupCodeScreenshots;
	NSDate* _lastTweetedFromDevice;
	NSDate* _newestTweetDate;
	TFNTwitterAPIConfiguration* _apiConfiguration;
	TFNTwitterScribe* _scribe;
	NSString* _password;
	NSString* _fullName;
	NSMutableSet* _blockedIDs;
	NSDate* _lastUserStreamEventDate;
	int _receiveNotificationsForDeviceFollowCount;
	id<TFNTwitterPromotableTrend> _lastImpressedPromotedTrend;
	NSString* _phoneNumber;
	NSDate* _accountCreationDate;
	NSDate* _credentialsVerificationLastUpdate;
	NSArray* _pickedInterests;
	NSArray* _blockedPlaceIds;
	TFNTwitterHomeFriendshipSet* _homeFriendshipSet;
	TFNTwitterCustomTimeline* _mostRecentlyCuratedCustomTimeline;
	TFNTwitterCustomTimelineList* _customTimelinesList;
	int _reverseAuthSource;
	int _placePickerDisclaimerSeenCount;
	unsigned _composeGeoDefaultTooltipNumberOfTimesShown;
	NSDate* _composeGeoDefaultTooltipLastPresentationTime;
	unsigned _composeGeoPhotoTooltipNumberOfTimesShown;
	NSDate* _composeGeoPhotoTooltipLastPresentationTime;
	TFNTwitterAdsAccountUsersSet* _adsAccountUsersSet;
	NSDate* _lastBlockedIDsCheckDate;
	TFNFindFriendsService* _findFriendsService;
	TFNTwitterPromotedEventLogger* _promotedEventLogger;
	NSDictionary* _timelineManagerDic;
	NSMutableSet* _lastPassBlockedIDs;
	TFNTwitterCachableVideoMonetizationSettings* _cachedMonetizationSettings;
	unsigned long long _lastReauthSuccessMachTime;

}

@property (nonatomic,readonly) char isInAdaptiveMediaExperiment; 
@property (nonatomic,readonly) char isInAdaptiveMediaWideSingleBucket; 
@property (nonatomic,readonly) char isInTweetLayoutExperimentMergedTaggingAny; 
@property (nonatomic,readonly) char isInTweetLayoutExperimentMergedTaggingSimple; 
@property (nonatomic,readonly) char isInTweetLayoutExperimentMergedTaggingWithDash; 
@property (nonatomic,readonly) char isInTweetLayoutExperimentSmallerAvatar; 
@property (nonatomic,readonly) char isInTweetLayoutExperimentFullPackageSimple; 
@property (nonatomic,readonly) char isInTweetLayoutExperimentFullPackageWithDash; 
@property (nonatomic,readonly) char isSmallerTweetDetailFontEnabled; 
@property (nonatomic,readonly) char isVitStatusOptionVerifiedBadgeEnabled; 
@property (nonatomic,readonly) char isRankedTimelineTweetHighlightingEnabled; 
@property (nonatomic,readonly) char isMediaForwardQuoteTweetEnabled; 
@property (nonatomic,readonly) char isStatusHashtagsMentionsLinkified; 
@property (nonatomic,readonly) char isStatusHashtagsMentionsLinkifiedBasic; 
@property (nonatomic,readonly) char isStatusHashtagsMentionsLinkifiedPrefersEntities; 
@property (nonatomic,readonly) char isTappableSocialProofEnabled; 
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) NSString * capiEndpoint; 
@property (nonatomic,readonly) id<T1TalonUnwrappingFeatureSwitches> talonFeatureSwitches; 
@property (nonatomic,readonly) char isAppRedeemEnabled; 
@property (nonatomic,readonly) NSString * didValueLinkFormat; 
@property (nonatomic,readonly) NSString * redemptionLinkFormat; 
@property (nonatomic,readonly) float appRatingThreshold; 
@property (nonatomic,readonly) double webViewDwellShortInterval; 
@property (nonatomic,readonly) double webViewDwellMediumInterval; 
@property (nonatomic,readonly) double webViewDwellLongInterval; 
@property (nonatomic,readonly) char isQualifiedTweetDwellEnabled; 
@property (nonatomic,readonly) char isMediaEffectsDwellEnabled; 
@property (nonatomic,readonly) char isTweetViewDwellEnabled; 
@property (nonatomic,readonly) char isMediaTweetDwellEnabled; 
@property (nonatomic,readonly) double tweetViewDwellMinimumDuration; 
@property (nonatomic,readonly) float tweetViewVisibilityPercentageThreshold; 
@property (nonatomic,readonly) float mediaViewVisibilityPercentageThreshold; 
@property (nonatomic,readonly) char isMediaDwellKenBurnsAnimationEnabled; 
@property (nonatomic,readonly) double mediaTweetKenBurnsAnimationStartDuration; 
@property (nonatomic,readonly) double mediaTweetKenBurnsAnimationStopDuration; 
@property (nonatomic,readonly) float mediaTweetKenBurnsZoomPercentage; 
@property (nonatomic,readonly) char isMediaSlideshowEnabled; 
@property (nonatomic,readonly) double mediaSlideshowAnimationStartDuration; 
@property (nonatomic,readonly) double mediaSlideshowAnimationDuration; 
@property (nonatomic,readonly) double mediaSlideshowDelayDuration; 
@property (nonatomic,readonly) int userProfileWTFModuleAfterAdInsertionIndex; 
@property (nonatomic,readonly) char isPromotedByHeaderEnabled; 
@property (nonatomic,readonly) char isAdSlotsEnabled; 
@property (nonatomic,readonly) unsigned staleAdsStrategy; 
@property (nonatomic,readonly) double staleAdsDedupingTimeout; 
@property (nonatomic,readonly) float staleAdsFlybyVisibilityPercentage; 
@property (nonatomic,readonly) double staleAdsFlybyVisibilityDuration; 
@property (nonatomic,readonly) char isStaleAdsFlyBysEnabled; 
@property (nonatomic,readonly) unsigned infoTextOptions; 
@property (nonatomic,readonly) NSArray * whitelistedSnapreelSources; 
@property (nonatomic,readonly) NSString * adsInfoLink; 
@property (nonatomic,readonly) unsigned webCardCTAButtonType; 
@property (nonatomic,readonly) char isSensitiveCardSuppressingEnabled; 
@property (nonatomic,readonly) char isConversationCardsIsEarnedPropagationEnabled; 
@property (nonatomic,readonly) char isBillablePollEnabled; 
@property (nonatomic,readonly) T1UpdateIndicatorConfiguration homeTimelineUpdateIndicatorConfiguration; 
@property (getter=isRetryMediaRequestsEnabled,nonatomic,readonly) char retryMediaRequestsEnabled; 
@property (nonatomic,readonly) T1AdaptiveMediaParameters * adaptiveMediaParameters; 
@property (getter=isImmersiveVideoEnabled,nonatomic,readonly) char immersiveVideoEnabled; 
@property (nonatomic,readonly) char autoplayEnabled; 
@property (nonatomic,readonly) char autoplayEnabledForPromotedTweets; 
@property (nonatomic,readonly) char isMediaStreamNativeVideoEnabled; 
@property (nonatomic,readonly) char isMediaLibraryEnabled; 
@property (nonatomic,readonly) float autoplayStartPlayerViewVisibleYFraction; 
@property (nonatomic,readonly) char isScribeObserverEnabled; 
@property (nonatomic,readonly) char isVideoValueReportingScribeObserverEnabled; 
@property (nonatomic,readonly) char isMoatScribeObserverEnabled; 
@property (nonatomic,readonly) char isVideoTypeEngagementMetadataScribingEnabled; 
@property (nonatomic,readonly) double secondsToWaitForDynamicAd; 
@property (nonatomic,readonly) char shouldWaitForDynamicAd; 
@property (nonatomic,readonly) double viewThresholdContent; 
@property (nonatomic,readonly) NSArray * amplifyCDNHosts; 
@property (nonatomic,readonly) NSSet * autoplayPublisherBlacklist; 
@property (nonatomic,readonly) char isVideoAdPrerollEnabled; 
@property (nonatomic,readonly) char isVideoBirdUrlEnabled; 
@property (nonatomic,readonly) char isVideoDynamicAdEnabled; 
@property (nonatomic,readonly) char isVideoDynamicAdMediaInfoEnabled; 
@property (nonatomic,readonly) char isVideoVAMPBeaconEnabled; 
@property (nonatomic,readonly) double skipAdDurationRequirement; 
@property (nonatomic,readonly) NSNumber * skipButtonTime; 
@property (nonatomic,readonly) double viewThresholdAfterSkipPreroll; 
@property (assign,nonatomic) char shouldLoopContentVideo; 
@property (readonly,nonatomic) id<T1PeopleAddressBookService> addressBookService; 
@property (nonatomic,retain) NSDate * ageVerificationLastCheckedAndFailed; 
@property (nonatomic,readonly) ACAccount * systemAccount; 
@property (nonatomic,readonly) NSArray * sulCategories; 
@property (nonatomic,readonly) int scribeAPISampleSize; 
@property (nonatomic,readonly) int scribeAPIErrorSampleSize; 
@property (nonatomic,readonly) char isScribeClientNetworkRequestEnabled; 
@property (nonatomic,readonly) char isScribeLegacyClientNetworkRequestEnabled; 
@property (nonatomic,readonly) char isAttachmentURLParameterEnabled; 
@property (nonatomic,readonly) char isExtendedPayloadEnabled; 
@property (nonatomic,readonly) char isLongTweetRenderEnabled; 
@property (nonatomic,readonly) char paymentProfilesFetching; 
@property (assign,nonatomic) char paymentProfilesError; 
@property (nonatomic,retain) NSDate * paymentProfilesLastChecked; 
@property (nonatomic,readonly) NSArray * postalAddresses; 
@property (nonatomic,readonly) TFNTwitterPostalAddress * defaultPostalAddress; 
@property (nonatomic,readonly) NSArray * paymentMethods; 
@property (nonatomic,readonly) NSArray * partialPaymentMethods; 
@property (nonatomic,readonly) NSArray * billingPhoneNumbers; 
@property (nonatomic,readonly) NSString * defaultBillingPhoneNumber; 
@property (nonatomic,readonly) TFNTwitterCreditCardProxy * defaultCreditCard; 
@property (nonatomic,readonly) TFNTwitterCreditCardProxy * validPayment; 
@property (nonatomic,readonly) NSString * confirmationEmailAddress; 
@property (nonatomic,readonly) id<TFNTwitterFeatureSwitches> featureSwitches; 
@property (nonatomic,readonly) char shouldOpenAppStoreInStandaloneApp; 
@property (nonatomic,readonly) double timeoutToOpenAppStoreInStandaloneApp; 
@property (getter=isAppStorePreloadEnabled,nonatomic,readonly) char appStorePreloadEnabled; 
@property (nonatomic,readonly) TFNTwitterCardPersistedStateManager * cardPersistedStateManager; 
@property (nonatomic,readonly) NSDate * freshActivityDate; 
@property (assign,nonatomic) char processingBlockedIDs;                                                                  //@synthesize processingBlockedIDs=_processingBlockedIDs - In the implementation block
@property (nonatomic,retain) NSDate * lastBlockedIDsCheckDate;                                                           //@synthesize lastBlockedIDsCheckDate=_lastBlockedIDsCheckDate - In the implementation block
@property (nonatomic,retain) TFNFindFriendsService * findFriendsService;                                                 //@synthesize findFriendsService=_findFriendsService - In the implementation block
@property (nonatomic,retain) TFNTwitterPromotedEventLogger * promotedEventLogger;                                        //@synthesize promotedEventLogger=_promotedEventLogger - In the implementation block
@property (nonatomic,readonly) NSDictionary * timelineManagerDic;                                                        //@synthesize timelineManagerDic=_timelineManagerDic - In the implementation block
@property (nonatomic,retain) NSMutableSet * lastPassBlockedIDs;                                                          //@synthesize lastPassBlockedIDs=_lastPassBlockedIDs - In the implementation block
@property (nonatomic,retain) TFNTwitterCachableVideoMonetizationSettings * cachedMonetizationSettings;                   //@synthesize cachedMonetizationSettings=_cachedMonetizationSettings - In the implementation block
@property (assign,nonatomic) char migratedOAuthCredentialsToBothKeychainGroups;                                          //@synthesize migratedOAuthCredentialsToBothKeychainGroups=_migratedOAuthCredentialsToBothKeychainGroups - In the implementation block
@property (assign,nonatomic) unsigned oAuthCredentialsKeychainGroupMigrationErrorCount;                                  //@synthesize oAuthCredentialsKeychainGroupMigrationErrorCount=_oAuthCredentialsKeychainGroupMigrationErrorCount - In the implementation block
@property (assign,nonatomic) char verified;                                                                              //@synthesize verified=_verified - In the implementation block
@property (nonatomic,readonly) NSString * accountID;                                                                     //@synthesize accountID=_accountID - In the implementation block
@property (nonatomic,readonly) long long userID; 
@property (nonatomic,readonly) NSString * username;                                                                      //@synthesize username=_username - In the implementation block
@property (nonatomic,copy) NSString * oAuthToken;                                                                        //@synthesize oAuthToken=_oAuthToken - In the implementation block
@property (nonatomic,copy) NSString * oAuthTokenSecret;                                                                  //@synthesize oAuthTokenSecret=_oAuthTokenSecret - In the implementation block
@property (nonatomic,copy) NSString * systemAccountIdentifier;                                                           //@synthesize systemAccountIdentifier=_systemAccountIdentifier - In the implementation block
@property (nonatomic,retain) NSDate * lastActiveDate;                                                                    //@synthesize lastActiveDate=_lastActiveDate - In the implementation block
@property (assign,nonatomic) char systemAccountIsInvalid;                                                                //@synthesize systemAccountIsInvalid=_systemAccountIsInvalid - In the implementation block
@property (assign,nonatomic) char addingToSystem;                                                                        //@synthesize addingToSystem=_addingToSystem - In the implementation block
@property (assign,nonatomic) char neverAddToSystem;                                                                      //@synthesize neverAddToSystem=_neverAddToSystem - In the implementation block
@property (assign,nonatomic) char migratedToAppOAuthCredentials;                                                         //@synthesize migratedToAppOAuthCredentials=_migratedToAppOAuthCredentials - In the implementation block
@property (assign,nonatomic) int oAuthCredentialsMigrationErrorCount;                                                    //@synthesize oAuthCredentialsMigrationErrorCount=_oAuthCredentialsMigrationErrorCount - In the implementation block
@property (nonatomic,retain) NSDate * lastOAuthCredentialsMigrationScribe;                                               //@synthesize lastOAuthCredentialsMigrationScribe=_lastOAuthCredentialsMigrationScribe - In the implementation block
@property (nonatomic,copy) NSString * apiRoot;                                                                           //@synthesize apiRoot=_apiRoot - In the implementation block
@property (nonatomic,copy) NSString * dtabHeaderValue;                                                                   //@synthesize dtabHeaderValue=_dtabHeaderValue - In the implementation block
@property (assign,nonatomic) char lastGeotaggingState; 
@property (nonatomic,readonly) TFNTwitterTimelineManager * timelineManager; 
@property (nonatomic,readonly) TFNTwitterAdsManager * adsManager; 
@property (nonatomic,readonly) TFNTwitterVITNotificationsSettingsManager * vitNotificationsSettingsManager; 
@property (nonatomic,readonly) TFNTwitterMomentsStateManager * momentsStateManager; 
@property (nonatomic,readonly) TFNMomentsTutorialManager * momentsTutorialManager; 
@property (nonatomic,readonly) id<TFNTwitterMomentsGuideDataManager> momentsDataManager; 
@property (assign,nonatomic) int selectedMentionFilterType;                                                              //@synthesize selectedMentionFilterType=_selectedMentionFilterType - In the implementation block
@property (assign,nonatomic) int aboutMeSourceType;                                                                      //@synthesize aboutMeSourceType=_aboutMeSourceType - In the implementation block
@property (assign,nonatomic) int aboutMeFilterType;                                                                      //@synthesize aboutMeFilterType=_aboutMeFilterType - In the implementation block
@property (nonatomic,retain) TFNTwitterApplePushDestination * applePushDestination;                                      //@synthesize applePushDestination=_applePushDestination - In the implementation block
@property (nonatomic,readonly) TFNTwitterNotificationSettingsManager * notificationSettingsManager; 
@property (nonatomic,readonly) char loginVerificationEnabled; 
@property (nonatomic,readonly) unsigned loginVerificationMode; 
@property (nonatomic,readonly) TFNTwitterLoginVerification * loginVerification;                                          //@synthesize loginVerification=_loginVerification - In the implementation block
@property (assign,nonatomic) int backupCodeScreenshots;                                                                  //@synthesize backupCodeScreenshots=_backupCodeScreenshots - In the implementation block
@property (assign,nonatomic) char everTweetedFromThisDevice;                                                             //@synthesize everTweetedFromThisDevice=_everTweetedFromThisDevice - In the implementation block
@property (assign,nonatomic) char whoToFollowTimelineHasPressedFindFriends;                                              //@synthesize whoToFollowTimelineHasPressedFindFriends=_whoToFollowTimelineHasPressedFindFriends - In the implementation block
@property (assign,nonatomic) char tweetComposeMapShownOnce;                                                              //@synthesize tweetComposeMapShownOnce=_tweetComposeMapShownOnce - In the implementation block
@property (assign,nonatomic) char emptyTimelineHasPressedFindFriends;                                                    //@synthesize emptyTimelineHasPressedFindFriends=_emptyTimelineHasPressedFindFriends - In the implementation block
@property (nonatomic,retain) NSDate * lastTweetedFromDevice;                                                             //@synthesize lastTweetedFromDevice=_lastTweetedFromDevice - In the implementation block
@property (nonatomic,retain) NSDate * newestTweetDate;                                                                   //@synthesize newestTweetDate=_newestTweetDate - In the implementation block
@property (retain) TFNTwitterAPIConfiguration * apiConfiguration;                                                        //@synthesize apiConfiguration=_apiConfiguration - In the implementation block
@property (nonatomic,readonly) TFNTwitterSettings * settings; 
@property (nonatomic,readonly) double lastSettingsRequestTime; 
@property (nonatomic,readonly) TFNTwitterScribe * scribe;                                                                //@synthesize scribe=_scribe - In the implementation block
@property (nonatomic,readonly) TFNTwitterCompositionOutboxController * outboxController;                                 //@synthesize outboxController=_outboxController - In the implementation block
@property (nonatomic,readonly) NSArray * drafts; 
@property (nonatomic,readonly) TFNTwitterCompositionPersistenceManager * compositionPersistenceManager; 
@property (nonatomic,readonly) TFNTwitterUser * user; 
@property (assign,nonatomic) char isActive; 
@property (nonatomic,copy) NSString * password;                                                                          //@synthesize password=_password - In the implementation block
@property (nonatomic,copy) NSString * fullName;                                                                          //@synthesize fullName=_fullName - In the implementation block
@property (nonatomic,readonly) char hasOAuthTokens; 
@property (nonatomic,readonly) char hasCredentials; 
@property (assign,nonatomic) char hasAttemptedToSaveWebCredentials;                                                      //@synthesize hasAttemptedToSaveWebCredentials=_hasAttemptedToSaveWebCredentials - In the implementation block
@property (nonatomic,readonly) NSString * oAuthConsumerKey; 
@property (nonatomic,readonly) NSString * oAuthConsumerSecret; 
@property (assign,nonatomic) char shouldReauthAfterAccountSyncing;                                                       //@synthesize shouldReauthAfterAccountSyncing=_shouldReauthAfterAccountSyncing - In the implementation block
@property (assign,nonatomic) char shouldAddToSystemAccountsAfterReauth;                                                  //@synthesize shouldAddToSystemAccountsAfterReauth=_shouldAddToSystemAccountsAfterReauth - In the implementation block
@property (assign,nonatomic) unsigned long long lastReauthSuccessMachTime;                                               //@synthesize lastReauthSuccessMachTime=_lastReauthSuccessMachTime - In the implementation block
@property (assign) char accountHasBeenRemoved;                                                                           //@synthesize accountHasBeenRemoved=_accountHasBeenRemoved - In the implementation block
@property (nonatomic,retain) NSMutableSet * blockedIDs;                                                                  //@synthesize blockedIDs=_blockedIDs - In the implementation block
@property (nonatomic,retain) NSDate * lastUserStreamEventDate;                                                           //@synthesize lastUserStreamEventDate=_lastUserStreamEventDate - In the implementation block
@property (assign,nonatomic) int receiveNotificationsForDeviceFollowCount;                                               //@synthesize receiveNotificationsForDeviceFollowCount=_receiveNotificationsForDeviceFollowCount - In the implementation block
@property (nonatomic,retain) id<TFNTwitterPromotableTrend> lastImpressedPromotedTrend;                                   //@synthesize lastImpressedPromotedTrend=_lastImpressedPromotedTrend - In the implementation block
@property (nonatomic,readonly) TFNTwitterAccountModel * model;                                                           //@synthesize model=_model - In the implementation block
@property (nonatomic,readonly) TFNTwitterSearchTypeaheadStore * typeaheadStore; 
@property (assign,nonatomic) char osNotificationsInitialized; 
@property (nonatomic,copy) NSString * phoneNumber;                                                                       //@synthesize phoneNumber=_phoneNumber - In the implementation block
@property (nonatomic,retain) NSDate * accountCreationDate;                                                               //@synthesize accountCreationDate=_accountCreationDate - In the implementation block
@property (nonatomic,retain) NSDate * credentialsVerificationLastUpdate;                                                 //@synthesize credentialsVerificationLastUpdate=_credentialsVerificationLastUpdate - In the implementation block
@property (nonatomic,retain) NSArray * pickedInterests;                                                                  //@synthesize pickedInterests=_pickedInterests - In the implementation block
@property (assign,nonatomic) SCD_Struct_TF29 creationVersion;                                                            //@synthesize creationVersion=_creationVersion - In the implementation block
@property (nonatomic,retain) NSArray * blockedPlaceIds;                                                                  //@synthesize blockedPlaceIds=_blockedPlaceIds - In the implementation block
@property (nonatomic,readonly) TFNTwitterHomeFriendshipSet * homeFriendshipSet;                                          //@synthesize homeFriendshipSet=_homeFriendshipSet - In the implementation block
@property (nonatomic,retain) TFNTwitterCustomTimeline * mostRecentlyCuratedCustomTimeline;                               //@synthesize mostRecentlyCuratedCustomTimeline=_mostRecentlyCuratedCustomTimeline - In the implementation block
@property (nonatomic,retain) TFNTwitterCustomTimelineList * customTimelinesList;                                         //@synthesize customTimelinesList=_customTimelinesList - In the implementation block
@property (assign,nonatomic) char forceCustomTimelinesEnabled;                                                           //@synthesize forceCustomTimelinesEnabled=_forceCustomTimelinesEnabled - In the implementation block
@property (assign,nonatomic) char forceHomeTimelineUpdateIndicatorEnabled;                                               //@synthesize forceHomeTimelineUpdateIndicatorEnabled=_forceHomeTimelineUpdateIndicatorEnabled - In the implementation block
@property (assign,nonatomic) char doingReverseAuth;                                                                      //@synthesize doingReverseAuth=_doingReverseAuth - In the implementation block
@property (assign,nonatomic) char hasFailedReverseAuth;                                                                  //@synthesize hasFailedReverseAuth=_hasFailedReverseAuth - In the implementation block
@property (assign,nonatomic) int reverseAuthSource;                                                                      //@synthesize reverseAuthSource=_reverseAuthSource - In the implementation block
@property (nonatomic,readonly) TFNTwitterPromptbird * promptbird;                                                        //@synthesize promptbird=_promptbird - In the implementation block
@property (assign,nonatomic) char hasDismissedTrendsPlusPrompt;                                                          //@synthesize hasDismissedTrendsPlusPrompt=_hasDismissedTrendsPlusPrompt - In the implementation block
@property (assign,nonatomic) char hasDismissedDMTabTakeoverPrompt;                                                       //@synthesize hasDismissedDMTabTakeoverPrompt=_hasDismissedDMTabTakeoverPrompt - In the implementation block
@property (assign,nonatomic) char dmTabTakeoverPromptSuggested;                                                          //@synthesize dmTabTakeoverPromptSuggested=_dmTabTakeoverPromptSuggested - In the implementation block
@property (assign,nonatomic) char hasDismissedVITNotificationsSettingsTakeoverPrompt;                                    //@synthesize hasDismissedVITNotificationsSettingsTakeoverPrompt=_hasDismissedVITNotificationsSettingsTakeoverPrompt - In the implementation block
@property (assign,nonatomic) int placePickerDisclaimerSeenCount;                                                         //@synthesize placePickerDisclaimerSeenCount=_placePickerDisclaimerSeenCount - In the implementation block
@property (assign,nonatomic) char composeGeoDefaultTooltipShownInitial;                                                  //@synthesize composeGeoDefaultTooltipShownInitial=_composeGeoDefaultTooltipShownInitial - In the implementation block
@property (assign,nonatomic) unsigned composeGeoDefaultTooltipNumberOfTimesShown;                                        //@synthesize composeGeoDefaultTooltipNumberOfTimesShown=_composeGeoDefaultTooltipNumberOfTimesShown - In the implementation block
@property (nonatomic,retain) NSDate * composeGeoDefaultTooltipLastPresentationTime;                                      //@synthesize composeGeoDefaultTooltipLastPresentationTime=_composeGeoDefaultTooltipLastPresentationTime - In the implementation block
@property (assign,nonatomic) unsigned composeGeoPhotoTooltipNumberOfTimesShown;                                          //@synthesize composeGeoPhotoTooltipNumberOfTimesShown=_composeGeoPhotoTooltipNumberOfTimesShown - In the implementation block
@property (nonatomic,retain) NSDate * composeGeoPhotoTooltipLastPresentationTime;                                        //@synthesize composeGeoPhotoTooltipLastPresentationTime=_composeGeoPhotoTooltipLastPresentationTime - In the implementation block
@property (assign,nonatomic) char composeDraftsTooltipHasBeenTapped;                                                     //@synthesize composeDraftsTooltipHasBeenTapped=_composeDraftsTooltipHasBeenTapped - In the implementation block
@property (assign,nonatomic) char videoCaptureTooltipShownFirstLaunched;                                                 //@synthesize videoCaptureTooltipShownFirstLaunched=_videoCaptureTooltipShownFirstLaunched - In the implementation block
@property (assign,nonatomic) char videoCaptureTooltipShownFirstOverrecord;                                               //@synthesize videoCaptureTooltipShownFirstOverrecord=_videoCaptureTooltipShownFirstOverrecord - In the implementation block
@property (assign,nonatomic) char videoCaptureTooltipShownFirstSegmentPlayed;                                            //@synthesize videoCaptureTooltipShownFirstSegmentPlayed=_videoCaptureTooltipShownFirstSegmentPlayed - In the implementation block
@property (assign,nonatomic) char videoCaptureTooltipShownFirstSegmentRecorded;                                          //@synthesize videoCaptureTooltipShownFirstSegmentRecorded=_videoCaptureTooltipShownFirstSegmentRecorded - In the implementation block
@property (assign,nonatomic) char videoCaptureTooltipShownFirstVideoAvailable;                                           //@synthesize videoCaptureTooltipShownFirstVideoAvailable=_videoCaptureTooltipShownFirstVideoAvailable - In the implementation block
@property (assign,nonatomic) char needsToChangePasswordForMandatoryPhoneSignUp;                                          //@synthesize needsToChangePasswordForMandatoryPhoneSignUp=_needsToChangePasswordForMandatoryPhoneSignUp - In the implementation block
@property (nonatomic,readonly) TFNTwitterAdsAccountUsersSet * adsAccountUsersSet;                                        //@synthesize adsAccountUsersSet=_adsAccountUsersSet - In the implementation block
@property (nonatomic,readonly) char shouldExcludeFromAllExperimentsExceptTimelines; 
@property (nonatomic,copy,readonly) NSString * valueName; 
@property (nonatomic,readonly) UIImage * valueIcon; 
@property (nonatomic,copy,readonly) NSString * valueDetail; 
@property (nonatomic,copy,readonly) NSString * valueShortName; 
+(id)twitterRulesURL;
+(unsigned)maxFullNameLength;
+(id)passwordResetURLStringForUsername:(id)arg1 ;
+(unsigned)minPasswordLength;
+(unsigned)maxUsernameLength;
+(id)twitterFollowArticleURL;
+(id)twitterSuspendedHelpURL;
+(id)clientApplicationID;
+(id)validFullNameForName:(id)arg1 ;
+(id)fetchProfilesProcessingQueue;
-(NSString *)valueName;
-(NSString *)valueDetail;
-(char)isOwnedByUs;
-(char)loginVerificationEnabled;
-(unsigned)loginVerificationMode;
-(void)unregisterDeviceForLoginVerification:(/*^block*/id)arg1 useInRequestOAuth:(char)arg2 ;
-(id)enabledVerticals;
-(void)logPromotedEventIfNeeded:(int)arg1 onUser:(id)arg2 ;
-(char)isFavoriteStatus:(id)arg1 ;
-(void)unfavoriteStatus:(id)arg1 responseBlock:(/*^block*/id)arg2 ;
-(void)favoriteStatus:(id)arg1 responseBlock:(/*^block*/id)arg2 ;
-(char)isHomeTimelineNewTweetsBannerEnabled;
-(T1UpdateIndicatorConfiguration)homeTimelineUpdateIndicatorConfiguration;
-(char)isVITNotificationsSettingsEnabled;
-(char)shouldShowVITNotificationFilters;
-(char)isVITScopedNotificationsEnabled;
-(char)isNewsAutoRefreshEnabled;
-(id)countryForNewsTab;
-(id)langForNewsTab;
-(unsigned)numberOfTopStoriesForNewsTab;
-(unsigned)maxNumberOfUnseenTopStoriesForNewsTab;
-(unsigned)autoRefreshIntervalSecondsForNewsTab;
-(TFNTwitterTimelineManager *)timelineManager;
-(char)isNewsTabEnabledNoDDGImpression;
-(char)isAdsCompanionEnabled;
-(char)hasAdsAccounts;
-(NSArray *)pickedInterests;
-(TFNTwitterSearchTypeaheadStore *)typeaheadStore;
-(id)authenticatedRequestWithResponseBlock:(/*^block*/id)arg1 ;
-(void)setPickedInterests:(NSArray *)arg1 ;
-(TFNTwitterAdsManager *)adsManager;
-(unsigned)staleAdsStrategy;
-(NSArray *)sulCategories;
-(char)isTweetGeoTagEnabled;
-(char)isDmAnyoneEnabled;
-(unsigned)maximumDirectMessageConversationParticipantCount;
-(T1AdaptiveMediaParameters *)adaptiveMediaParameters;
-(id)_adaptiveMediaBucket;
-(id<TFNTwitterFeatureSwitches>)featureSwitches;
-(char)isInTweetLayoutExperimentMergedTaggingSimple;
-(char)isInTweetLayoutExperimentMergedTaggingWithDash;
-(char)isInTweetLayoutExperimentFullPackageAny;
-(char)isInTweetLayoutExperimentFullPackageSimple;
-(char)isInTweetLayoutExperimentFullPackageWithDash;
-(char)isStatusHashtagsMentionsLinkifiedBasic;
-(char)isStatusHashtagsMentionsLinkifiedPrefersEntities;
-(char)isLongTweetRenderEnabled;
-(char)myUserIsEqualToUser:(id)arg1 ;
-(char)isSelfRetweetAndQuoteTweetEnabled;
-(char)canRetweetStatus:(id)arg1 ;
-(char)isInAdaptiveMediaExperiment;
-(char)isInAdaptiveMediaWideSingleBucket;
-(char)isInTweetLayoutExperimentMergedTaggingAny;
-(char)isInTweetLayoutExperimentSmallerAvatar;
-(char)isVitStatusOptionVerifiedBadgeEnabled;
-(char)isRankedTimelineTweetHighlightingEnabled;
-(char)isMediaForwardQuoteTweetEnabled;
-(char)isStatusHashtagsMentionsLinkified;
-(char)isTappableSocialProofEnabled;
-(char)isSmallerTweetDetailFontEnabled;
-(char)canQuoteStatus:(id)arg1 ;
-(char)shouldUseSharedWebCredentialsInReauthFlow;
-(char)hasAttemptedToSaveWebCredentials;
-(void)saveOAuthCredentialWithCompletionBlock:(/*^block*/id)arg1 ;
-(void)refreshForced:(char)arg1 source:(int)arg2 ;
-(char)shouldAddToSystemAccountsAfterReauth;
-(void)updateSystemAccount;
-(void)addToSystemAccounts;
-(NSString *)systemAccountIdentifier;
-(void)setSystemAccountIsInvalid:(char)arg1 ;
-(void)setHasAttemptedToSaveWebCredentials:(char)arg1 ;
-(void)setLastReauthSuccessMachTime:(unsigned long long)arg1 ;
-(char)hasOAuthTokens;
-(void)updateUserInfoAndCredentialsWithToken:(id)arg1 secret:(id)arg2 username:(id)arg3 userID:(long long)arg4 ;
-(char)isDirectMessageGIFAutoplayEnabled;
-(char)isDirectMessageGIFAutoplayAllEnabled;
-(float)autoplayStartPlayerViewVisibleYFraction;
-(id)definitiveStatus:(id)arg1 ;
-(char)isPeopleDiscoveryQuotedTweetLikeButtonEnabled;
-(void)logPromotedEventIfNeeded:(int)arg1 onTrend:(id)arg2 ;
-(void)setLastImpressedPromotedTrend:(id<TFNTwitterPromotableTrend>)arg1 ;
-(char)isTrendsPlusAnimationEnabled;
-(char)isCustomCameraForProfileEnabled;
-(char)needsToChangePasswordForMandatoryPhoneSignUp;
-(void)setNeedsToChangePasswordForMandatoryPhoneSignUp:(char)arg1 ;
-(void)requestStatusWithID:(id)arg1 type:(unsigned)arg2 responseBlock:(/*^block*/id)arg3 ;
-(void)lookupFullRelationshipForUser:(id)arg1 responseBlock:(/*^block*/id)arg2 ;
-(char)isCoreServices2TranslateStatusCommandEnabled;
-(void)translateTweet:(id)arg1 language:(id)arg2 responseBlock:(/*^block*/id)arg3 ;
-(char)_isTweetPivotsDisplayEnabled;
-(char)isTweetPivotsProductDomainEnabled;
-(char)isInCommerceTweetPivotBucket;
-(char)isTweetPivotsTvDomainEnabled;
-(char)isInTvTweetPivotBucket;
-(id)_tvTweetPivotBucket;
-(id)_formatStringForTvTweetPivot;
-(char)shouldRetrievePivots;
-(char)isTweetPivotsDisplayEnabledInTimeline;
-(char)isTweetPivotsDisplayEnabledInTweetDetails;
-(char)shouldDisplayPivot:(id)arg1 ;
-(id)promptStringForPivot:(id)arg1 ;
-(char)isConversationsShowSeparateConversationContextPrototypeEnabled;
-(char)isMomentsEnabled;
-(char)isMomentsGuideEnabled;
-(char)isMomentsGuideEnabledWithDDGImpression;
-(char)canSubscribeToMoment:(id)arg1 ;
-(char)hasNonDefaultValueForMomentsGuide;
-(int)momentsMinimumUpdateThreshold;
-(char)isMomentPageTypeEnabled:(int)arg1 ;
-(void)partiallyApplyMomentsFeatureSwitches;
-(char)isMomentsScoresEnabled;
-(double)momentsScoresPollingInterval;
-(char)isMomentsCardAutoplayEnabled;
-(char)isMomentsHeartAnimationsEnabled;
-(char)isMomentsQuoteTweetEnabled;
-(char)isMomentsStreamingVideoPreloadingEnabled;
-(char)isMomentsCapsuleGestureUpdateEnabled;
-(char)isMomentsLetterboxMediaEnabled;
-(char)isMomentsMomentsInMomentsEnabled;
-(char)isMomentsHomeTimelineCarouselEnabled;
-(char)isMomentsGuideLoadCapsuleContentEnabled;
-(char)isMomentsImageSharingEnabled;
-(char)isVideoComposeCaptureEnabled;
-(char)isInComposeReplyContextHoldback;
-(char)isTextStorageVersionEnabled;
-(char)isComposerKeyboardRefreshEnabled;
-(char)isCardComposePreviewEnabled;
-(char)isPoll2ChoiceTextOnlyComposeEnabled;
-(char)isComposerAutocompleteSearchEnabled;
-(char)shouldCardComposePreviewTombstoneIfNotDisplayed;
-(char)isCustomCameraEnabled;
-(char)isNewPhotoGalleryEnabled;
-(id)foundMediaConfiguration;
-(char)isComposerHashflagRenderingEnabled;
-(char)isPhotoStickersEnabled;
-(double)pollDurationComposeDefaultInterval;
-(char)isUpdateEmailFlowEnabled;
-(char)isAnimatedContentComposerAnimationEnabled;
-(char)allowPhoneNumberVerification;
-(char)isLibPhoneNumberFormattingEnabled;
-(id)twoChoicePollingCardCAPIURI;
-(char)isStructuredProfileLocationEnabled;
-(char)isProfileBirthdayDisplayEnabled;
-(char)isProfileVineDisplayEnabled;
-(void)refreshMyUserIfNecessary;
-(void)unmuteUser:(id)arg1 responseBlock:(/*^block*/id)arg2 ;
-(void)lookupRelationshipsForUsers:(id)arg1 ;
-(unsigned)pendingFollowerRequestsCountForceRefresh:(char)arg1 ;
-(char)isSportsEventScoreCardEnabled;
-(TFNTwitterAdsAccountUsersSet *)adsAccountUsersSet;
-(char)_userIsAdvertiser;
-(char)canViewAdsForUser:(id)arg1 ;
-(char)hasMultipleAdsAccounts;
-(char)isScribeLegacyClientNetworkRequestEnabled;
-(char)isScribeClientNetworkRequestEnabled;
-(char)isBuyNowFullBleedCardEnabled;
-(char)isBuyNowCardWideLayoutEnabled;
-(unsigned)commerceBuyNowCardMaxAdditionalImages;
-(void)logPromotedEventIfNeeded:(int)arg1 onStatus:(id)arg2 extraParameters:(id)arg3 ;
-(char)isCardForwardEnabled;
-(char)isAdSlotsEnabled;
-(id)directMessageContext;
-(double)inboxPollingInterval;
-(double)conversationPollingInterval;
-(id)initWithUsername:(id)arg1 password:(id)arg2 apiRoot:(id)arg3 dtabHeaderValue:(id)arg4 ;
-(void)setOAuthToken:(NSString *)arg1 ;
-(void)setOAuthTokenSecret:(NSString *)arg1 ;
-(void)setHasFailedReverseAuth:(char)arg1 ;
-(void)currentBackupCode:(/*^block*/id)arg1 ;
-(void)makeNewBackupCode:(/*^block*/id)arg1 ;
-(id)initWithUsername:(id)arg1 userID:(long long)arg2 apiRoot:(id)arg3 dtabHeaderValue:(id)arg4 ;
-(char)isLoginChallengeEnabled;
-(NSArray *)drafts;
-(char)shouldShowGlossyLocationEnablePrompt;
-(char)isVideoMonetizationControlEnabled;
-(id)definitiveUser:(id)arg1 ;
-(char)hasPendingFollowerRequestFromUser:(id)arg1 ;
-(id)statusForID:(long long)arg1 ;
-(void)refreshMyUserImmediatelyWithResponseBlock:(/*^block*/id)arg1 ;
-(char)isProfileForcedExtendedProfileRequestEnabled;
-(void)lookupRelationshipsForUsers:(id)arg1 responseBlock:(/*^block*/id)arg2 ;
-(void)requestUserWithUsername:(id)arg1 responseBlock:(/*^block*/id)arg2 ;
-(void)requestUserWithID:(id)arg1 responseBlock:(/*^block*/id)arg2 ;
-(NSNumber *)skipButtonTime;
-(double)skipAdDurationRequirement;
-(char)isPhotosDragToCropEnabled;
-(void)setHasDismissedVITNotificationsSettingsTakeoverPrompt:(char)arg1 ;
-(int)selectedMentionFilterType;
-(char)isDirectMessageShareTweetAddressBookEnabled;
-(void)lifelineFollow:(id)arg1 impressionID:(id)arg2 isEarned:(char)arg3 supportsChallenges:(char)arg4 responseBlock:(/*^block*/id)arg5 ;
-(void)lifelineUnfollowUser:(id)arg1 impressionID:(id)arg2 isEarned:(char)arg3 responseBlock:(/*^block*/id)arg4 ;
-(char)isAddressBookAccessGateEnabled;
-(char)isAddressBookAccessGateExperimentEnabled;
-(void)fetchPaymentProfilesWithCompletionBlock:(/*^block*/id)arg1 ;
-(id)offerAvailablePaymentMethods:(unsigned)arg1 ;
-(void)refreshHomeTimelineWithSource:(int)arg1 ;
-(void)removeStatusFromStreams:(id)arg1 reason:(unsigned)arg2 ;
-(void)muteUser:(id)arg1 responseBlock:(/*^block*/id)arg2 ;
-(void)blockUser:(id)arg1 impressionID:(id)arg2 isEarned:(char)arg3 responseBlock:(/*^block*/id)arg4 ;
-(void)unfollowUser:(id)arg1 impressionID:(id)arg2 isEarned:(char)arg3 responseBlock:(/*^block*/id)arg4 ;
-(char)isVideoComposeImportEnabled;
-(char)isVideoComposeCaptureLandscapeEnabled;
-(char)isTimelineVisualGapUpdateExperimentEnabled:(char)arg1 ;
-(id)photoFilterLibraryId;
-(id)pendingFollowerRequestsUserIDsForceRefresh:(char)arg1 ;
-(char)isLiveAddressBookSyncingEnabled;
-(double)waitTimeFlingThreshold;
-(char)isWaitTimeScribingEnabled;
-(unsigned)waitTimeSampleRate;
-(unsigned)minSizeOfImageInMediaForward;
-(char)shouldShowImagesBelowMinSizeInline;
-(char)isCustomCameraForReplyBarEnabled;
-(char)isCustomCameraForDirectMessageEnabled;
-(char)showHudBeforeSending;
-(char)isAnimatedContent5MBLimitEnabled;
-(char)isPhotoFilterSwipingInComposerEnabled;
-(char)isPhotoFilterSwipingInPhotoGalleryEnabled;
-(char)isThriftLoggingEnabled;
-(char)dmTabTakeoverPromptSuggested;
-(char)hasDismissedDMTabTakeoverPrompt;
-(TFNTwitterPromptbird *)promptbird;
-(void)sendDDGImpressionForJapanNewsV2;
-(char)isNewsCategoryNavigationEnabled;
-(void)updateSettingsPassword:(id)arg1 currentPassword:(id)arg2 responseBlock:(/*^block*/id)arg3 ;
-(char)isEmbeddedCollectionEnabledForViewModel:(id)arg1 ;
-(TFNTwitterHomeFriendshipSet *)homeFriendshipSet;
-(char)isEventTimelinesSportsExperienceEnabled;
-(char)isEventTimelinesCricketExperienceEnabled;
-(char)isEventTimelinesSoccerExperienceEnabled;
-(char)isEventTimelinesBasketballExperienceEnabled;
-(id)tvShowBannerURLStringForEntityID:(id)arg1 ;
-(id)fourChoicePollingCardCAPIURI;
-(NSString *)capiEndpoint;
-(id)cardComposePreviewEndpointURL;
-(int)cardComposePreviewFetchDelayMsec;
-(unsigned)cardComposePreviewPermittedRetryCount;
-(double)cardComposePreviewRetryTotalTimeout;
-(char)isPoll34ChoiceTextOnlyComposeEnabled;
-(char)isImagePollComposeEnabled;
-(char)isRetryPollCreationEnabled;
-(double)poll2ChoiceTextCapiRefreshInterval;
-(char)isPollDurationComposeEnabled;
-(char)isPollNewIconEnabled;
-(double)pollDurationComposeMinInterval;
-(double)pollDurationComposeMaxInterval;
-(char)autoplayEnabled;
-(id<TFNTwitterMomentsGuideDataManager>)momentsDataManager;
-(TFNTwitterMomentsStateManager *)momentsStateManager;
-(TFNMomentsTutorialManager *)momentsTutorialManager;
-(char)isMediaAsyncUploadBeyond30SecondsEnabled;
-(float)mediaAsyncUploadMaxVideoDuration;
-(char)videoCaptureTooltipShownFirstVideoAvailable;
-(void)setVideoCaptureTooltipShownFirstVideoAvailable:(char)arg1 ;
-(id<T1PeopleAddressBookService>)addressBookService;
-(void)userForUserID:(id)arg1 responseBlock:(/*^block*/id)arg2 ;
-(NSDate *)freshActivityDate;
-(char)isNotificationsTabRedesignEnabled;
-(id)autosaveName;
-(void)setFreshActivityDate:(id)arg1 fireUpdate:(char)arg2 ;
-(char)isAbuseFilteringFeatureEnabled;
-(id)userForID:(long long)arg1 ;
-(void)lookupFullRelationshipForUser:(id)arg1 ;
-(void)followUser:(id)arg1 impressionID:(id)arg2 isEarned:(char)arg3 supportsChallenges:(char)arg4 responseBlock:(/*^block*/id)arg5 ;
-(void)getHasConfirmedPhoneNumber:(/*^block*/id)arg1 ;
-(void)updateSettingsEmail:(id)arg1 password:(id)arg2 responseBlock:(/*^block*/id)arg3 ;
-(char)isBlockedProfileEnabled;
-(char)hasCredentials;
-(char)accountHasBeenRemoved;
-(id)initWithUsername:(id)arg1 ;
-(char)isInNewsExperiment;
-(char)isNewsTabEnabled;
-(void)updateUserMuteCachePolling:(char)arg1 ;
-(void)removeDraft:(id)arg1 ;
-(char)isDirectMessageShareTweetNewUserTooltipEnabled;
-(void)getSettingsMaxStale:(double)arg1 responseBlock:(/*^block*/id)arg2 ;
-(void)unblockUser:(id)arg1 impressionID:(id)arg2 isEarned:(char)arg3 responseBlock:(/*^block*/id)arg4 ;
-(char)shouldDisplayUserMuteConfirmationAlert;
-(void)updateTimesShownUserMuteConfirmationAlert;
-(char)isPeopleDiscoveryEnabled;
-(char)shouldJumpBackToHomeWithActiveTimeStamp:(double)arg1 inactiveTimeStamp:(double)arg2 ;
-(char)isNotificationsTabScribeBadgeCountEnabled;
-(unsigned)unreadDMsCount;
-(char)isGroupDirectMessagesPromptEnabled;
-(char)isInTweetTranslationExperiment;
-(char)allowsTweetTranslationForStatus:(id)arg1 ;
-(char)isRetryMediaRequestsEnabled;
-(id<T1TalonUnwrappingFeatureSwitches>)talonFeatureSwitches;
-(unsigned)infoTextOptions;
-(void)setHasDismissedDMTabTakeoverPrompt:(char)arg1 ;
-(char)_isVITScopedNotificationsForVerifiedUsersEnabled;
-(char)_isVITScopedNotificationsForNonVerifiedUsersEnabled;
-(char)isVITRedesignEducationPromptEnabled;
-(int)newestVITNotificationSettingsRevision;
-(char)shouldOverwriteAbuseFilterSetting;
-(char)shouldOverwriteLowQualityFilterSetting;
-(char)defaultAbuseFilterSetting;
-(char)defaultLowQualityFilterSetting;
-(id)webViewOauthPrefixes;
-(float)appRatingThreshold;
-(id)audioClientPageReferrerTemplate;
-(id)audioClientUserIdHashingTemplate;
-(char)isAudioClientPageReferrerEnabled;
-(char)isAudioClientUserIdHashingEnabled;
-(char)isAudioCustomPromotedLoggingEnabled;
-(char)isAudioMacawnymizerBeaconingEnabled;
-(char)isAudioPlayerEnabled;
-(char)isAudioPlayerTFXAnimationEnabled;
-(char)canSendSMSToTwitter;
-(char)emptyTimelineHasPressedFindFriends;
-(char)showFindFriendsCallToAction;
-(char)showNewFindFriendsCallToAction;
-(char)isFindFriendsServiceReverseAddressBookSourceEnabled;
-(char)isFindFriendsServiceWhoToFollowSourceEnabled;
-(char)isRichContactUploadAndMatchEnabled;
-(int)richContactDataBatchSize;
-(TFNTwitterApplePushDestination *)applePushDestination;
-(void)refreshPushSettings:(/*^block*/id)arg1 ;
-(char)isInNotificationsTabRedesignExperimentControlNoImpression;
-(void)unregisterForPush:(/*^block*/id)arg1 ;
-(void)registerForPushWithDeviceToken:(id)arg1 pushDestination:(id)arg2 responseBlock:(/*^block*/id)arg3 ;
-(char)shouldShowPushSettingFollowedVerified;
-(char)isCommerceOffersEnabled;
-(char)isVitNotableEventPushNotificationAvailableForVerifiedUsers;
-(char)isVitNotableEventPushNotificationAvailableForAnyUser;
-(char)isSearchFeatureReverseBoldingEnabled;
-(char)isDeleteRecentOrSavedSearchesFeatureSwitchEnabled;
-(char)isReverseBoldingEnabled;
-(char)isDeleteRecentOrSavedSearchesEnabled;
-(TFNTwitterVITNotificationsSettingsManager *)vitNotificationsSettingsManager;
-(void)setSelectedMentionFilterType:(int)arg1 ;
-(char)shouldDefaultVitIntoFiltering;
-(char)isProfileBirthdayAnimationV2Enabled;
-(char)isProfileBirthdayBalloonOverridesEnabled;
-(char)isProfileBirthdayAnimationEnabled;
-(id)profileBirthdayBalloonOverrides;
-(char)isNotificationsTabRedesignEnabledPeekNoImpression;
-(char)isEventsBellbirdRedesignEnabled;
-(char)isSearchQueryExplanationEnabled;
-(char)birthdayHeartAnimationsEnabled;
-(char)isConversationsRemoveMentionsPrototypeEnabled;
-(char)isComposerGeoImageLatLonEnabled;
-(char)isInComposerGeoInlineLocationPickerExperimentLogImpression;
-(char)isInComposerGeoInlineLocationPickerExperimentNoLogImpression;
-(char)isConversationsShowConversationContextPrototypeEnabled;
-(char)isConversationsAutoPopulateReplyMetadataEnabled;
-(char)isPolledContentImpressionEnabled;
-(char)isCustomTimelineListEntryPointEnabled;
-(void)logPromotedEventIfNeeded:(int)arg1 onStatus:(id)arg2 ;
-(id)initWithUsername:(id)arg1 userID:(long long)arg2 ;
-(char)isDirectMessageRoundedUIEnabled;
-(void)updateProfileName:(id)arg1 email:(id)arg2 url:(id)arg3 location:(id)arg4 placeID:(id)arg5 description:(id)arg6 birthday:(id)arg7 vineProfileVisible:(id)arg8 responseBlock:(/*^block*/id)arg9 ;
-(id)commerceBillingCountryCodes;
-(int)pollingIntervalForLoginChallenge;
-(float)intervalMultiplierForLoginChallengePolling;
-(char)isCommerceExternalBrowserAutologinEnabled;
-(char)isCommerceExternalBrowserAutologinInterstitialPageEnabled;
-(char)isSearchFeatureTypeaheadConciergeEnabled;
-(id)definitiveUsers:(id)arg1 ;
-(char)isMutingUser:(id)arg1 ;
-(NSMutableSet *)blockedIDs;
-(void)unretweet:(id)arg1 responseBlock:(/*^block*/id)arg2 ;
-(void)retweet:(id)arg1 responseBlock:(/*^block*/id)arg2 ;
-(void)setDmTabTakeoverPromptSuggested:(char)arg1 ;
-(char)isBellbirdRedesignEnabledForEventType:(id)arg1 ;
-(char)isSMS2faEnabled;
-(void)setPaymentProfilesLastChecked:(NSDate *)arg1 ;
-(void)addOfferCreditCard:(id)arg1 withResponseBlock:(/*^block*/id)arg2 ;
-(char)isInternationalShippingEnabled;
-(id)internationalShippingAvailableCountries;
-(NSString *)confirmationEmailAddress;
-(char)isCustomerFeedbackCardExpirationEnabled;
-(TFNTwitterCardPersistedStateManager *)cardPersistedStateManager;
-(char)videoCaptureTooltipShownFirstLaunched;
-(void)setVideoCaptureTooltipShownFirstLaunched:(char)arg1 ;
-(char)videoCaptureTooltipShownFirstSegmentRecorded;
-(void)setVideoCaptureTooltipShownFirstSegmentRecorded:(char)arg1 ;
-(char)videoCaptureTooltipShownFirstOverrecord;
-(void)setVideoCaptureTooltipShownFirstOverrecord:(char)arg1 ;
-(char)videoCaptureTooltipShownFirstSegmentPlayed;
-(void)setVideoCaptureTooltipShownFirstSegmentPlayed:(char)arg1 ;
-(TFNTwitterCompositionOutboxController *)outboxController;
-(char)isEmojiFavoritesEnabled;
-(char)showsEmojiFavoritesOnNormalTap;
-(char)showsEmojiFavoritesExtendedPicker;
-(void)sendFeedbackForSuggestsInfo:(id)arg1 feedbackType:(id)arg2 statusIDNumbers:(id)arg3 undo:(char)arg4 ;
-(void)sendFeedbackForUserSuggestsInfo:(id)arg1 feedbackType:(id)arg2 userIDNumbers:(id)arg3 undo:(char)arg4 ;
-(void)sendFeedbackForMomentsSuggestsInfo:(id)arg1 feedbackType:(id)arg2 momentIDs:(id)arg3 undo:(char)arg4 ;
-(void)saveInfo;
-(void)saveStreams:(char)arg1 ;
-(void)saveAds:(char)arg1 ;
-(void)saveMomentsState:(char)arg1 ;
-(void)updateScribeOptions;
-(void)saveLoginVerificationToKeychainFromUserDefaultsIfNecessary;
-(char)whoToFollowTimelineHasPressedFindFriends;
-(void)setWhoToFollowTimelineHasPressedFindFriends:(char)arg1 ;
-(char)isConversationCardsIsEarnedPropagationEnabled;
-(void)updateSettings:(id)arg1 responseBlock:(/*^block*/id)arg2 ;
-(id)phoneVerificationCountryExclusions;
-(id)phoneVerificationCarrierExclusions;
-(char)isEditProfileWithFacebookEnabled;
-(char)isProfileOnboardingBioAutoFocusEnabled;
-(char)isNewsFeaturedStoryEnabled;
-(char)isNewsSeamfulEnabled;
-(char)isNewsSeamfulV2Enabled;
-(char)isNewsHeadlineCategoryEnabled;
-(void)listWithUserID:(id)arg1 username:(id)arg2 slug:(id)arg3 responseBlock:(/*^block*/id)arg4 ;
-(void)unfollowList:(id)arg1 responseBlock:(/*^block*/id)arg2 ;
-(void)followList:(id)arg1 responseBlock:(/*^block*/id)arg2 ;
-(char)isPeriscopeRetweetHeartEnabled;
-(char)isPeriscopeLikeHeartEnabled;
-(double)periscopeCAPIRefreshInterval;
-(char)isPeriscopeSearchEnabled;
-(id)commerceBannedCountryCodes;
-(char)isPartialPaymentProfileUpgradeEnabled;
-(char)isAllowUnverifiedEmailAddressInBuyNowEnabled;
-(char)isOrderHistoryEnabled;
-(char)isTaxTypeEstimatedClientAvailable;
-(char)isBuyNowEnabled;
-(char)isCommerceCartAPIsEnabled;
-(char)isDirectMessageVideosAndGIFsEnabled;
-(char)isDirectMessageFoundMediaEnabled;
-(void)deviceFollowUser:(id)arg1 impressionID:(id)arg2 isEarned:(char)arg3 supportsChallenges:(char)arg4 responseBlock:(/*^block*/id)arg5 ;
-(void)deviceUnfollowUser:(id)arg1 impressionID:(id)arg2 isEarned:(char)arg3 responseBlock:(/*^block*/id)arg4 ;
-(char)isAppRedeemEnabled;
-(void)getPurchaseHistoryPagedFrom:(id)arg1 withResponseBlock:(/*^block*/id)arg2 ;
-(char)composeDraftsTooltipHasBeenTapped;
-(void)setComposeDraftsTooltipHasBeenTapped:(char)arg1 ;
-(NSDate *)composeGeoDefaultTooltipLastPresentationTime;
-(void)setComposeGeoDefaultTooltipLastPresentationTime:(NSDate *)arg1 ;
-(double)composeGeoTooltipFatigueTimeInterval;
-(unsigned)composeGeoDefaultTooltipNumberOfTimesShown;
-(int)composeGeoTooltipFatigueAmount;
-(void)setComposeGeoDefaultTooltipNumberOfTimesShown:(unsigned)arg1 ;
-(char)shouldUseSharedWebCredentialsInSignInFlow;
-(char)isAutoUpdatingFavoritesTimelineEnabled;
-(void)updateProfileImage:(id)arg1 responseBlock:(/*^block*/id)arg2 ;
-(void)updateBannerImage:(id)arg1 imageSize:(CGSize)arg2 responseBlock:(/*^block*/id)arg3 ;
-(id)savedSearches;
-(id)oneClickSearchesWithoutRecentOrSavedSearches;
-(void)removeRecentSearch:(id)arg1 ;
-(void)removeSavedSearch:(id)arg1 ;
-(void)setAgeVerificationLastCheckedAndFailed:(NSDate *)arg1 ;
-(void)followUserWithFollowRequest:(id)arg1 ;
-(void)saveDraft:(id)arg1 ;
-(double)peopleDiscoveryFeaturedUsersCarouselAutopagingInterval;
-(int)receiveNotificationsForDeviceFollowCount;
-(char)isSensitiveMediaAppealEnabled;
-(char)isAuthorOfStatus:(id)arg1 ;
-(char)isSensitiveMediaAppealableForStatus:(id)arg1 ;
-(char)isNewReportFlowV2Enabled;
-(char)isQueryForBlockedUserIDsEnabled;
-(char)isMutedListEnabled;
-(char)isBlockedListEnabled;
-(char)isAutoMutedListEnabled;
-(void)setShouldReauthAfterAccountSyncing:(char)arg1 ;
-(unsigned long long)lastReauthSuccessMachTime;
-(int)reverseAuthSource;
-(void)legacyReverseAuthDidCompleteWithSuccess:(char)arg1 error:(id)arg2 ;
-(char)shouldReauthAfterAccountSyncing;
-(char)isVitVerifiedFollowersViewEnabled;
-(int)followersCountForTitleEnabled;
-(int)followersCountForTitleMinimum;
-(int)aboutMeSourceType;
-(void)setAboutMeSourceType:(int)arg1 ;
-(int)aboutMeFilterType;
-(void)setAboutMeFilterType:(int)arg1 ;
-(char)isMediaEffectsDwellEnabled;
-(char)isImmersiveVideoEnabled;
-(char)isDirectMessageShareTweetInRetweetMenuEnabled;
-(void)dismissStatus:(id)arg1 inCarousel:(id)arg2 withEvent:(int)arg3 ;
-(NSString *)adsInfoLink;
-(char)isGetURLTitleEnabled;
-(void)removeTaggedUserFromStatus:(id)arg1 ;
-(void)deleteStatus:(id)arg1 ;
-(void)unpinTweetWithID:(id)arg1 responseBlock:(/*^block*/id)arg2 ;
-(void)pinTweetWithID:(id)arg1 responseBlock:(/*^block*/id)arg2 ;
-(void)removeBannerImageWithResponseBlock:(/*^block*/id)arg1 ;
-(char)isProfileBirthdayCollectionEnabled;
-(char)isProfileVineEditingEnabled;
-(char)isMediaLibraryEnabled;
-(char)isHashflagsEnabled;
-(char)isDirectMessageInlineActionEnabled;
-(char)isPromotedByHeaderEnabled;
-(void)_compositionDidSend:(id)arg1 ;
-(char)isSuppressingTextOnDynamicAdsEnabledForViewModel:(id)arg1 ;
-(char)isPushLandingPagesExperienceEnabled;
-(char)isInPushLandingPagesExperiment;
-(char)canViewTweetAnalyticsForStatus:(id)arg1 ;
-(TFNTwitterCompositionPersistenceManager *)compositionPersistenceManager;
-(void)fetchMonetizationSetting:(/*^block*/id)arg1 ;
-(void)reportSpamStatus:(id)arg1 spamType:(unsigned)arg2 shouldBlockUser:(char)arg3 responseBlock:(/*^block*/id)arg4 ;
-(char)isRevenueProfileCardEnabled;
-(char)isResizableHeaderSnappingEnabled;
-(void)setMigratedToAppOAuthCredentials:(char)arg1 ;
-(void)setCreationVersion:(SCD_Struct_TF29)arg1 ;
-(id)updateMyUser:(id)arg1 ;
-(TFNTwitterPostalAddress *)defaultPostalAddress;
-(NSArray *)paymentMethods;
-(NSArray *)partialPaymentMethods;
-(void)fetchPaymentProfiles;
-(void)addPaymentMethodCreditCard:(id)arg1 shippingAddress:(id)arg2 includeEmailAddress:(char)arg3 emailAddress:(id)arg4 withResponseBlock:(/*^block*/id)arg5 ;
-(void)addPaymentMethodCreditCard:(id)arg1 emailAddress:(id)arg2 withResponseBlock:(/*^block*/id)arg3 ;
-(char)isBlockerInterstitialEnabled;
-(int)userProfileWTFModuleAfterAdInsertionIndex;
-(char)isUnlimitedProfileTweetsTimelineEnabled;
-(NSDate *)accountCreationDate;
-(void)followUserIds:(id)arg1 responseBlock:(/*^block*/id)arg2 ;
-(TFNFindFriendsService *)findFriendsService;
-(void)disableRetweetsUser:(id)arg1 impressionID:(id)arg2 isEarned:(char)arg3 responseBlock:(/*^block*/id)arg4 ;
-(void)enableRetweetsUser:(id)arg1 impressionID:(id)arg2 isEarned:(char)arg3 responseBlock:(/*^block*/id)arg4 ;
-(void)registerForPushWithDeviceToken:(id)arg1 responseBlock:(/*^block*/id)arg2 ;
-(NSDate *)ageVerificationLastCheckedAndFailed;
-(void)updateSettingsEmail:(id)arg1 responseBlock:(/*^block*/id)arg2 ;
-(void)updateSettingsDiscoverableByPhone:(char)arg1 responseBlock:(/*^block*/id)arg2 ;
-(char)isMediaAsyncUploadGifEnabled;
-(float)mediaAsyncUploadMaxGifSize;
-(char)isNotificationInstructionsLinkFeatureEnabled;
-(char)isInNotificationInstructionsLinkExperiment;
-(char)isSafariViewControllerEnabled;
-(char)isAppStorePreloadEnabled;
-(char)isAppStoreCarouselPreloadEnabled;
-(int)appStorePreloadsCountLimit;
-(char)isVideoDynamicAdEnabled;
-(double)webViewDwellIntervalForKey:(id)arg1 withFallback:(double)arg2 ;
-(NSString *)didValueLinkFormat;
-(NSString *)redemptionLinkFormat;
-(double)webViewDwellShortInterval;
-(double)webViewDwellMediumInterval;
-(double)webViewDwellLongInterval;
-(char)isTweetViewDwellEnabled;
-(char)isMediaTweetDwellEnabled;
-(double)tweetViewDwellMinimumDuration;
-(float)tweetViewVisibilityPercentageThreshold;
-(float)mediaViewVisibilityPercentageThreshold;
-(char)isQualifiedTweetDwellEnabled;
-(char)isMediaDwellKenBurnsAnimationEnabled;
-(double)mediaTweetKenBurnsAnimationStartDuration;
-(double)mediaTweetKenBurnsAnimationStopDuration;
-(float)mediaTweetKenBurnsZoomPercentage;
-(char)isMediaSlideshowEnabled;
-(double)mediaSlideshowAnimationStartDuration;
-(double)mediaSlideshowAnimationDuration;
-(double)mediaSlideshowDelayDuration;
-(double)staleAdsDedupingTimeout;
-(float)staleAdsFlybyVisibilityPercentage;
-(double)staleAdsFlybyVisibilityDuration;
-(char)isStaleAdsFlyBysEnabled;
-(NSArray *)whitelistedSnapreelSources;
-(unsigned)webCardCTAButtonType;
-(char)isSensitiveCardSuppressingEnabled;
-(char)isBillablePollEnabled;
-(TFNTwitterCreditCardProxy *)defaultCreditCard;
-(TFNTwitterCreditCardProxy *)validPayment;
-(NSString *)defaultBillingPhoneNumber;
-(char)paymentProfilesError;
-(void)getProductInfo:(id)arg1 forShippingAddress:(id)arg2 allowUnconfirmedEmail:(char)arg3 withResponseBlock:(/*^block*/id)arg4 ;
-(void)purchaseWithCart:(id)arg1 withResponseBlock:(/*^block*/id)arg2 ;
-(void)createCart:(id)arg1 withResponseBlock:(/*^block*/id)arg2 ;
-(char)_isUnlimitedProfileTweetsTimelineEnabled;
-(char)_isUnlimitedProfileTweetsTimelineNonVerifiedUsersEnabled;
-(void)deletePaymentProfilesWithResponseBlock:(/*^block*/id)arg1 ;
-(char)paymentProfilesFetching;
-(float)photoHighBandwidthUploadResolution;
-(float)photoMediumBandwidthUploadResolution;
-(float)photoLowBandwidthUploadResolution;
-(char)isDMSpamFilteringUIEnabled;
-(char)isDirectMessageReadReceiptsEnabled;
-(char)isDirectMessageSendProgressEnabled;
-(void)refreshMyUserImmediately;
-(char)isAttachmentURLParameterEnabled;
-(char)isComposePlacePickerAutotaggingEnabled;
-(char)placePickerPreciseLocationSwitchEnabled;
-(char)lastGeotaggingState;
-(char)placePickerDisclaimerEnabled;
-(void)setLastGeotaggingState:(char)arg1 ;
-(int)placePickerDisclaimerSeenCount;
-(void)setPlacePickerDisclaimerSeenCount:(int)arg1 ;
-(char)everTweetedFromThisDevice;
-(void)setEverTweetedFromThisDevice:(char)arg1 ;
-(char)_inactivePeriodSatisfiesJumpBackIntervalWithActiveTimeStamp:(double)arg1 inactiveTimeStamp:(double)arg2 ;
-(char)_isJumpBackToHomeEnabled;
-(double)_jumpBackToHomeTimeInterval;
-(char)isHomeTimelineNewTweetsBannerExperimentEnabled;
-(char)isRankedTimelineMessagingEnabled;
-(char)isRankedTimelineSettingsUIEnabled;
-(char)isTimelineModuleFootersEnabled;
-(void)setShouldLoopContentVideo:(char)arg1 ;
-(id)_newsExperiments;
-(id)_newsBucket;
-(char)isJapanNewsV2Enabled;
-(char)isNewsTabRelatedTweetsEnabled;
-(char)isNewsAuthorAccountSectionEnabled;
-(char)isNewsHeadlineTimeStampEnabled;
-(char)isJapanNewsV2RankingEnabled;
-(char)shouldShowJapanNewsCategoryBusiness;
-(char)shouldShowJapanNewsCategoryDomestic;
-(char)shouldShowJapanNewsCategoryEntertainment;
-(char)shouldShowJapanNewsCategoryInternational;
-(char)shouldShowJapanNewsCategoryScienceTech;
-(char)shouldShowJapanNewsCategorySports;
-(void)updateSettingsUsername:(id)arg1 responseBlock:(/*^block*/id)arg2 ;
-(char)areSuggestsModulesEnabled;
-(void)updateSettingsDiscoverableByEmail:(char)arg1 responseBlock:(/*^block*/id)arg2 ;
-(id)_partnerKeyWithName:(id)arg1 ;
-(id)audioClientUserIdHashingSaltForPartner:(id)arg1 ;
-(id)audioControlBackgroundColorForPartner:(id)arg1 ;
-(id)audioCTAColorForPartner:(id)arg1 ;
-(id)audioDockedLogoURLForPartner:(id)arg1 ;
-(id)audioLogoURLForPartner:(id)arg1 ;
-(id)audioMacawnymizerIntegrationKeyForPartner:(id)arg1 ;
-(unsigned)audioThemeForPartner:(id)arg1 ;
-(void)updateSettingsAllowMediaTagging:(unsigned)arg1 responseBlock:(/*^block*/id)arg2 ;
-(char)isDirectMessageVideosAndGIFsReadEnabled;
-(id)directMessageEmojiSuggestions;
-(void)_userDidLoad:(id)arg1 ;
-(char)autoplayEnabledForPromotedTweets;
-(NSSet *)autoplayPublisherBlacklist;
-(char)shouldLoopContentVideo;
-(char)isSPDYEnabled;
-(char)isCardsRegistryEnabled;
-(char)isCardEnabledForCardName:(id)arg1 displayMode:(int)arg2 ;
-(char)isBadgeAppIconFixEnabled;
-(char)isAccessibilitySettingsEnabled;
-(void)updateLoginVerificationFromKeychain;
-(id)signLoginVerificationChallenge:(id)arg1 ;
-(char)validateKey;
-(void)canRegisterForLoginVerification:(/*^block*/id)arg1 ;
-(void)setBackupCodeScreenshots:(int)arg1 ;
-(void)registerForPushLoginVerification:(/*^block*/id)arg1 ;
-(char)isCardForwardInSearchEnabled;
-(char)isBusinessProfilesEnabled;
-(char)isBusinessProfilesBusinessURLsEnabled;
-(void)saveOffer:(id)arg1 withResponseBlock:(/*^block*/id)arg2 ;
-(void)getOfferDetails:(id)arg1 withResponseBlock:(/*^block*/id)arg2 ;
-(void)createContactEmail:(id)arg1 withResponseBlock:(/*^block*/id)arg2 ;
-(TFNTwitterNotificationSettingsManager *)notificationSettingsManager;
-(int)backupCodeScreenshots;
-(void)refreshInteractionsTimelineWithSource:(int)arg1 ;
-(NSArray *)amplifyCDNHosts;
-(char)isScribeObserverEnabled;
-(double)secondsToWaitForDynamicAd;
-(char)shouldWaitForDynamicAd;
-(char)isMediaStreamNativeVideoEnabled;
-(char)isVideoDynamicAdMediaInfoEnabled;
-(char)isVideoVAMPBeaconEnabled;
-(char)isVideoBirdUrlEnabled;
-(char)isVideoAdPrerollEnabled;
-(double)viewThresholdAfterSkipPreroll;
-(double)viewThresholdContent;
-(double)viewThresholdPostroll;
-(char)isVideoValueReportingScribeObserverEnabled;
-(char)isMoatScribeObserverEnabled;
-(char)isVideoTypeEngagementMetadataScribingEnabled;
-(char)isBusinessProfilesStateEnabled;
-(char)isBusinessProfilesFeaturedTabEnabled;
-(char)isResinEnabled;
-(char)isResinResponsivenessLevelEnabled;
-(char)isResinCustomerServicePointerEnabled;
-(char)isResinOnlineHoursEnabled;
-(char)isResinDirectMessageCTAEnabled;
-(void)refreshBlocksApplyingUpdatesMonitoring:(id)arg1 ;
-(void)logPromotedEventIfNeeded:(int)arg1 onVideo:(id)arg2 extraParameters:(id)arg3 ;
-(char)isDirectMessageSpotlightIndexingEnabled;
-(int)directMessageMaxGroupSize;
-(char)_isTweetAnalyticsEnabled;
-(char)_hasAnalyticsAccess;
-(char)_isTweetAnalyticsUseAnalyticsTypeEnabled;
-(char)isComposeGeoTooltipEnabled;
-(void)setComposeGeoDefaultTooltipShownInitial:(char)arg1 ;
-(NSDate *)composeGeoPhotoTooltipLastPresentationTime;
-(void)setComposeGeoPhotoTooltipLastPresentationTime:(NSDate *)arg1 ;
-(unsigned)composeGeoPhotoTooltipNumberOfTimesShown;
-(void)setComposeGeoPhotoTooltipNumberOfTimesShown:(unsigned)arg1 ;
-(void)acceptFollowerRequestFromUser:(id)arg1 responseBlock:(/*^block*/id)arg2 ;
-(void)denyFollowerRequestFromUser:(id)arg1 responseBlock:(/*^block*/id)arg2 ;
-(void)addCommercePhoneNumber:(id)arg1 withResponseBlock:(/*^block*/id)arg2 ;
-(void)addBillingAddress:(id)arg1 toCreditCard:(id)arg2 withResponseBlock:(/*^block*/id)arg3 ;
-(char)hasDismissedVITNotificationsSettingsTakeoverPrompt;
-(char)isCardRegisteredForCardSwitch:(id)arg1 ;
-(char)isOffersFullBleedCardEnabled;
-(char)isBadgeWithUnreadCountEnabled;
-(unsigned)totalUnreadCount;
-(void)purgeAllCachedAvatars;
-(char)isPerftownEnabled;
-(char)isDownloadCacheProfilingEnabled;
-(void)scribeAppOAuthCredentialsMigrationStateIfNeeded;
-(char)isExploreLandingPageEnabled;
-(char)isStoreTwitterContactEnabled;
-(void)unfollowUserIds:(id)arg1 responseBlock:(/*^block*/id)arg2 ;
-(char)forceHomeTimelineUpdateIndicatorEnabled;
-(id)authenticatedMutableURLRequestForURL:(id)arg1 parameters:(id)arg2 method:(int)arg3 multipart:(char)arg4 ;
-(char)isVideoComposeReplyCaptureEnabled;
-(char)isVideoComposeReplyImportEnabled;
-(char)isCountrySettingEnabled;
-(id)countrySettingCodesWhitelist;
-(void)updateSettingsCountryCode:(id)arg1 responseBlock:(/*^block*/id)arg2 ;
-(void)updateSettingsAllowAutomatedMute:(char)arg1 responseBlock:(/*^block*/id)arg2 ;
-(void)updateSettingsTailorAds:(char)arg1 responseBlock:(/*^block*/id)arg2 ;
-(void)updateSettingsDmReadReceipts:(unsigned)arg1 responseBlock:(/*^block*/id)arg2 ;
-(void)updateSettingsAcceptDirectMessagesFrom:(unsigned)arg1 responseBlock:(/*^block*/id)arg2 ;
-(void)updateSettingsAccountProtection:(char)arg1 responseBlock:(/*^block*/id)arg2 ;
-(char)isMobileNotificationSettingsV2Enabled;
-(id)definitiveActivities:(id)arg1 ;
-(unsigned)unreadActivitiesCount;
-(void)_addToSystemAccountsWithCompletionBlock:(/*^block*/id)arg1 ;
-(void)_setSystemAccount:(id)arg1 ;
-(char)_hasAppOAuthCredentials;
-(char)_needsScribeAppOAuthCredentialsMigrationState;
-(char)_pendingAppOAuthCredentialsMigration;
-(void)_handleReverseAuthAccessTokenResponseWithSuccess:(char)arg1 response:(id)arg2 error:(id)arg3 source:(int)arg4 completion:(/*^block*/id)arg5 ;
-(void)_incrementOAuthCredentialMigrationErrorCountIfNecessary:(id)arg1 source:(int)arg2 ;
-(void)_resetSystemAccount;
-(id)signURLRequest:(id)arg1 error:(id*)arg2 ;
-(void)_handleReverseAuthRequestTokenResponseWithSuccess:(char)arg1 response:(id)arg2 error:(id)arg3 source:(int)arg4 completion:(/*^block*/id)arg5 ;
-(id)initWithUserDefaultsDictionary:(id)arg1 ;
-(id)userDefaultsDictionaryValueForGroupUserDefaults:(char)arg1 ;
-(void)saveOAuthTokenSecretToKeychainIfNecessary;
-(void)deleteInfoFiles;
-(void)purgeTypeaheadCachedState;
-(void)resetOAuthCredentials;
-(void)updateWithAccount:(id)arg1 ;
-(void)setSystemAccountIdentifier:(NSString *)arg1 ;
-(void)deleteDatabaseFilesAndFinalize;
-(id)deleteOAuthCredentialsInKeychain;
-(void)setAccountHasBeenRemoved:(char)arg1 ;
-(void)setLastActiveDate:(NSDate *)arg1 ;
-(NSDate *)lastActiveDate;
-(void)flushTypeaheadCachedState;
-(char)osNotificationsInitialized;
-(void)setOsNotificationsInitialized:(char)arg1 ;
-(void)reloadTypeaheadCachedStateOnContentReady;
-(void)_lookupRelationshipsForUsersWithIDs:(id)arg1 usersWithUsernames:(id)arg2 completion:(/*^block*/id)arg3 ;
-(id)_batchUserIds:(id)arg1 ;
-(void)_handleFollowCountsStartOfRequestToUser:(id)arg1 forFollowing:(char)arg2 ;
-(void)setNeedsFollowerRequestsRefresh;
-(void)_handleFollowCountsForCompletionOfRequestToUserWithID:(id)arg1 forFollowing:(char)arg2 success:(char)arg3 ;
-(void)_expireExtendedProfilesForUserID:(id)arg1 ;
-(void)_sendFollowRequestWithFollowRequest:(id)arg1 responseBlock:(/*^block*/id)arg2 ;
-(id)_followCountUpdatersForFollowing:(char)arg1 ;
-(void)_fetchPendingFollowerIDsWithCursor:(id)arg1 responseBlock:(/*^block*/id)arg2 ;
-(void)cancelFollowRequestWithUser:(id)arg1 impressionID:(id)arg2 isEarned:(char)arg3 responseBlock:(/*^block*/id)arg4 ;
-(char)_listSet:(id)arg1 containsList:(id)arg2 ;
-(char)ownsList:(id)arg1 ;
-(int)_profileRequestVisibilityForExtendedProfileVisibility:(int)arg1 ;
-(/*^block*/id)_updatePinnedTweetResponseBlockWithResponseBlock:(/*^block*/id)arg1 restorePinnedTweetID:(id)arg2 ;
-(void)_logRequestResetPushDestinations:(id)arg1 ;
-(void)_logResponseResetPushDestinations:(id)arg1 ;
-(void)_postNotificationWithName:(id)arg1 error:(id)arg2 ;
-(void)updateSULCategories;
-(void)_resetCreationVersion;
-(void)_addressBookDidUpload:(id)arg1 ;
-(id)initWithUsername:(id)arg1 userID:(long long)arg2 password:(id)arg3 apiRoot:(id)arg4 dtabHeaderValue:(id)arg5 ;
-(void)_setUpAccountID;
-(id)_scribeOptions;
-(void)_setUpModelWithDatabaseFileFullPath:(id)arg1 ;
-(void)_performDeferredPasswordFetchIfAllowed;
-(id)initWithUserDefaultsDictionary:(id)arg1 accountModelDatabaseFilePath:(id)arg2 ;
-(id)_scribeOptionsFromDictionary:(id)arg1 ;
-(NSDate *)lastOAuthCredentialsMigrationScribe;
-(TFNTwitterLoginVerification *)loginVerification;
-(NSDate *)lastBlockedIDsCheckDate;
-(char)composeGeoDefaultTooltipShownInitial;
-(void)_saveOAuthTokenSecretWithCompletionBlock:(/*^block*/id)arg1 ;
-(void)setMigratedOAuthCredentialsToBothKeychainGroups:(char)arg1 ;
-(id)_keychainErrorScribeParameters:(id)arg1 ;
-(void)_postSaveCredentialToKeychainErrorNotification:(id)arg1 ;
-(char)isOAuthCredentialsKeychainGroupMigrationEnabled;
-(void)_migrateOAuthCredentialsToBothKeychainGroups;
-(int)oAuthCredentialsKeychainGroupMigrationMaximumErrorCount;
-(unsigned)oAuthCredentialsKeychainGroupMigrationErrorCount;
-(void)setOAuthCredentialsKeychainGroupMigrationErrorCount:(unsigned)arg1 ;
-(NSString *)apiRoot;
-(void)_loadBasicInfo;
-(void)loadDetailInfo;
-(id)_notificationSettingsFile;
-(id)draftsWithAutosaved:(char)arg1 ;
-(SCD_Struct_TF29)creationVersion;
-(void)_timelineManagerDidDeserializeTimeline:(id)arg1 ;
-(void)_notificationsStreamDidUpdate:(id)arg1 ;
-(void)saveConnectReadPosition;
-(char)myUserNeedsRefresh;
-(void)_verifyCredentials:(/*^block*/id)arg1 ;
-(void)fetchConnectReadPositionFromPolling:(char)arg1 ;
-(void)refreshTimelinesWithSource:(int)arg1 ;
-(void)getSettings:(/*^block*/id)arg1 ;
-(void)refreshOneClickTypeaheadStoreCache:(char)arg1 ;
-(void)refreshUserTypeaheadStoreCache:(char)arg1 ;
-(TFNTwitterPromotedEventLogger *)promotedEventLogger;
-(void)refreshUserTypeaheadStoreCacheNoRetry;
-(void)refreshOneClickTypeaheadStoreCacheNoRetry;
-(void)_handleOneClickRequestResponse:(id)arg1 ;
-(void)_handleOneClickRequestFailure:(id)arg1 retry:(char)arg2 ;
-(void)_postSettingsDidChangeNotificationWithOldSettings:(id)arg1 newSettings:(id)arg2 ;
-(TFNTwitterCachableVideoMonetizationSettings *)cachedMonetizationSettings;
-(void)removeStatusFromCacheWithStatusID:(long long)arg1 ;
-(char)isVitNotificationFilteringEnabled;
-(char)isVitNotificationFilteringRoleEnabled;
-(char)isVitPushSettingFollowedVerifiedForVerifiedUsersEnabled;
-(char)isVitPushSettingFollowedVerifiedForNonVerifiedUsersEnabled;
-(TFNTwitterAPIConfiguration *)apiConfiguration;
-(id)_apiConfiguration;
-(void)setAccountCreationDate:(NSDate *)arg1 ;
-(void)setCredentialsVerificationLastUpdate:(NSDate *)arg1 ;
-(void)_didFailToRefreshUser:(id)arg1 ;
-(void)_notifyWithFavorite:(char)arg1 originalStatus:(id)arg2 changePending:(char)arg3 ;
-(void)dismissSuggestsInfo:(id)arg1 feedbackType:(id)arg2 statusIDNumbers:(id)arg3 undo:(char)arg4 ;
-(void)dismissUserSuggestsInfo:(id)arg1 feedbackType:(id)arg2 userIDNumbers:(id)arg3 undo:(char)arg4 ;
-(void)_notifyRetweet:(id)arg1 originalStatus:(id)arg2 changePending:(char)arg3 ;
-(void)_updateStatesForRetweetStatus:(id)arg1 originalStatus:(id)arg2 ;
-(void)_notifyUnretweetForOriginalStatus:(id)arg1 changePending:(char)arg2 ;
-(void)_updateStatesForUnretweetWithOriginalRetweetID:(long long)arg1 originalStatus:(id)arg2 ;
-(char)processingBlockedIDs;
-(char)_refreshBlocksEnabled;
-(char)blockedIDsNeedRefreshing;
-(void)setLastBlockedIDsCheckDate:(NSDate *)arg1 ;
-(void)setProcessingBlockedIDs:(char)arg1 ;
-(void)_refreshBlocksApplyingUpdatesCursor:(id)arg1 applyUpdates:(char)arg2 monitoring:(id)arg3 ;
-(void)_didReceiveBlockingIDSuccess:(char)arg1 object:(id)arg2 error:(id)arg3 applyUpdates:(char)arg4 monitoring:(id)arg5 ;
-(void)_processBlockedIDsResponse:(id)arg1 applyUpdates:(char)arg2 monitoring:(id)arg3 ;
-(char)_updateBlockedUsers:(id)arg1 applyUpdates:(char)arg2 ;
-(void)_updateUnblockedUsers:(id)arg1 applyUpdates:(char)arg2 ;
-(char)_eradicateBlockedUserIDs:(id)arg1 ;
-(char)_eradicateBlockedUser:(id)arg1 isLastUserInSet:(char)arg2 ;
-(char)_removeStatusFromUser:(id)arg1 isLastUserInSet:(char)arg2 reason:(unsigned)arg3 ;
-(id)allStatusesWithCachedCanonicalStatuses;
-(/*^block*/id)_blockExtendedResponseBlockForUser:(id)arg1 baseResponseBlock:(/*^block*/id)arg2 ;
-(char)isEngagementCleaningForMuteEnabled;
-(id)definitiveActivity:(id)arg1 ;
-(void)reloadTypeaheadCachedState;
-(char)_homeTimelineStreamContainsRetweetedStatusID:(long long)arg1 ;
-(char)isSearchFeatureTypeaheadPrefetchRefreshOnAddressBookUploadEnabled;
-(void)_deleteBasicInfoFile;
-(void)_deleteDetailInfoFile;
-(void)_saveBasicInfoToDisk;
-(void)_saveDetailInfoToDisk;
-(id)_basicInfoFile;
-(void)_loadBasicInfoWithDictionary:(id)arg1 ;
-(id)_basicInfoDictionary;
-(id)_detailInfoFile;
-(void)_loadDetailInfoWithDictionary:(id)arg1 ;
-(id)_detailInfoDictionary;
-(id)authenticatedAPIRequest;
-(id)initWithUsername:(id)arg1 password:(id)arg2 apiRoot:(id)arg3 ;
-(id)initWithUsername:(id)arg1 userID:(long long)arg2 apiRoot:(id)arg3 ;
-(void)setLastOAuthCredentialsMigrationScribe:(NSDate *)arg1 ;
-(double)lastSettingsRequestTime;
-(char)wasCreatedInWeeHeavy1OrLater;
-(char)wasCreatedInUnionJackOrLater;
-(char)isSerializingAds;
-(void)updateSettingsAllowAbuseFiltering:(char)arg1 responseBlock:(/*^block*/id)arg2 ;
-(char)shouldShowBioForOnboardingUserRecommendations;
-(char)shouldShowBioForProfileSimilarTo;
-(id)requestWithResponseBlock:(/*^block*/id)arg1 ;
-(id)authenticatedRequestWithApiRoot:(id)arg1 responseBlock:(/*^block*/id)arg2 ;
-(id)applicationAuthenticatedRequestWithResponseBlock:(/*^block*/id)arg1 ;
-(void)reportSpamUser:(id)arg1 impressionID:(id)arg2 shouldBlockUser:(char)arg3 isEarned:(char)arg4 responseBlock:(/*^block*/id)arg5 ;
-(void)waitUntilAllDatabaseOperationsAreFinished;
-(TFNTwitterCustomTimelineList *)customTimelinesList;
-(void)_postStreamDidUpdateNotification;
-(char)shouldExcludeFromAllExperimentsExceptTimelines;
-(id)_recentConvoUsersFile;
-(id)_favoriteUsersListFile;
-(void)_setHomeFriendshipSetForTesting:(id)arg1 ;
-(char)addingToSystem;
-(void)setAddingToSystem:(char)arg1 ;
-(void)setNeverAddToSystem:(char)arg1 ;
-(int)oAuthCredentialsMigrationErrorCount;
-(void)setOAuthCredentialsMigrationErrorCount:(int)arg1 ;
-(char)migratedOAuthCredentialsToBothKeychainGroups;
-(void)setApiRoot:(NSString *)arg1 ;
-(NSString *)dtabHeaderValue;
-(void)setDtabHeaderValue:(NSString *)arg1 ;
-(void)setApplePushDestination:(TFNTwitterApplePushDestination *)arg1 ;
-(char)tweetComposeMapShownOnce;
-(void)setTweetComposeMapShownOnce:(char)arg1 ;
-(void)setEmptyTimelineHasPressedFindFriends:(char)arg1 ;
-(NSDate *)lastTweetedFromDevice;
-(NSDate *)newestTweetDate;
-(void)setNewestTweetDate:(NSDate *)arg1 ;
-(void)setApiConfiguration:(TFNTwitterAPIConfiguration *)arg1 ;
-(void)setShouldAddToSystemAccountsAfterReauth:(char)arg1 ;
-(void)setBlockedIDs:(NSMutableSet *)arg1 ;
-(NSDate *)lastUserStreamEventDate;
-(void)setLastUserStreamEventDate:(NSDate *)arg1 ;
-(id<TFNTwitterPromotableTrend>)lastImpressedPromotedTrend;
-(NSArray *)blockedPlaceIds;
-(void)setBlockedPlaceIds:(NSArray *)arg1 ;
-(TFNTwitterCustomTimeline *)mostRecentlyCuratedCustomTimeline;
-(void)setMostRecentlyCuratedCustomTimeline:(TFNTwitterCustomTimeline *)arg1 ;
-(void)setCustomTimelinesList:(TFNTwitterCustomTimelineList *)arg1 ;
-(char)forceCustomTimelinesEnabled;
-(void)setForceCustomTimelinesEnabled:(char)arg1 ;
-(void)setForceHomeTimelineUpdateIndicatorEnabled:(char)arg1 ;
-(char)doingReverseAuth;
-(void)setDoingReverseAuth:(char)arg1 ;
-(char)hasFailedReverseAuth;
-(void)setReverseAuthSource:(int)arg1 ;
-(char)hasDismissedTrendsPlusPrompt;
-(void)setHasDismissedTrendsPlusPrompt:(char)arg1 ;
-(void)setFindFriendsService:(TFNFindFriendsService *)arg1 ;
-(void)setPromotedEventLogger:(TFNTwitterPromotedEventLogger *)arg1 ;
-(NSDictionary *)timelineManagerDic;
-(NSMutableSet *)lastPassBlockedIDs;
-(void)setLastPassBlockedIDs:(NSMutableSet *)arg1 ;
-(void)setCachedMonetizationSettings:(TFNTwitterCachableVideoMonetizationSettings *)arg1 ;
-(id)definitiveStatuses:(id)arg1 ;
-(char)shouldRunFeatureSwitchesAATest;
-(id)definitiveLists:(id)arg1 ;
-(id)perftownEventWhitelist;
-(char)isExtendedPayloadEnabled;
-(int)scribeAPISampleSize;
-(void)setReceiveNotificationsForDeviceFollowCount:(int)arg1 ;
-(void)refreshBlocks;
-(char)vineSeamlessLoopingEnabled;
-(id)definitiveTwitterObjects:(id)arg1 ;
-(NSDate *)paymentProfilesLastChecked;
-(double)minimumProfilesFetchIntervalSeconds;
-(void)_clearPaymentInformation;
-(void)setPaymentProfilesError:(char)arg1 ;
-(void)setConfirmationEmailAddress:(NSString *)arg1 ;
-(void)setDefaultBillingPhoneNumber:(NSString *)arg1 ;
-(void)setBillingPhoneNumbers:(NSArray *)arg1 ;
-(id)_paymentMethodsForJSONDictionary:(id)arg1 addressDict:(id)arg2 defaultEntry:(id*)arg3 ;
-(void)setPaymentMethods:(NSArray *)arg1 ;
-(void)setDefaultCreditCard:(TFNTwitterCreditCardProxy *)arg1 ;
-(void)setDefaultPostalAddress:(TFNTwitterPostalAddress *)arg1 ;
-(void)setPartialPaymentMethods:(NSArray *)arg1 ;
-(void)setPaymentProfilesFetching:(char)arg1 ;
-(char)_didFetchPaymentProfilesRecently;
-(/*^block*/id)_fetchProfilesResponseHandlerWithCompletionBlock:(/*^block*/id)arg1 ;
-(void)_enforceCachedProfilesResponse:(/*^block*/id)arg1 orFetch:(/*^block*/id)arg2 ;
-(void)_handleStoreProfileResponse:(char)arg1 jsonData:(id)arg2 error:(id)arg3 card:(id)arg4 shippingAddress:(id)arg5 withResponseBlock:(/*^block*/id)arg6 storeForRedemption:(char)arg7 ;
-(void)_handleGetSignatureResponse:(char)arg1 data:(id)arg2 error:(id)arg3 completion:(/*^block*/id)arg4 ;
-(void)_handleCreateContactResponse:(char)arg1 data:(id)arg2 error:(id)arg3 completion:(/*^block*/id)arg4 ;
-(char)_isNoNetworkOrServerNotReachableError:(id)arg1 ;
-(id)_errorFromProfileErrorResponse:(id)arg1 ;
-(void)addUSPostalAddress:(id)arg1 withResponseBlock:(/*^block*/id)arg2 ;
-(NSArray *)billingPhoneNumbers;
-(NSDate *)credentialsVerificationLastUpdate;
-(void)_customTimelinesListDidUpdate:(id)arg1 ;
-(void)getHasConfirmedPhoneNumberMaxStale:(double)arg1 responseBlock:(/*^block*/id)arg2 ;
-(char)isSerializingStreams;
-(char)isSerializingMoments;
-(void)_applyInitialFeatureSwitches;
-(char)_isVITModeEnabled;
-(char)isTimelineVisualGapUpdateEnabled;
-(id)eventTypesSupportingBellbirdRedesign;
-(id)_notificationsTabRedesignBucketWithImpression:(char)arg1 ;
-(char)_meetsTrendsPlusPrecondition;
-(char)_isInTrendsPlusBucket:(id)arg1 logImpression:(char)arg2 ;
-(char)_isTrendsPlusEnabledWithBucket:(id)arg1 logImpression:(char)arg2 ;
-(char)isTrendsPlusMagnifierOnTopEnabledWithLogImpression:(char)arg1 ;
-(char)_hasActionPrerequisites;
-(char)isCustomTimelinesEnabled;
-(int)customTimelineNameMaximumLength;
-(int)customTimelineDescriptionMaximumLength;
-(char)isIPadTabBadgingEnabled;
-(char)isIPadSearchFiltersEnabled;
-(char)isIPadPhotoFilteringEnabled;
-(char)isMuteFilterExpiryEnabled;
-(char)isIPadAuroraInterfaceEnabled;
-(char)isSeeItButtonEnabled;
-(char)isTrendTimelineCompressionEnabled;
-(char)isComposePlacePickerFlagPlaceEnabled;
-(id)vineVideoHosts;
-(char)isDmBackgroundFetchEnabled;
-(char)isSearchFeatureTimelineFilterEnabled;
-(char)isSearchFeatureTimelineGalleryEnabled;
-(char)isHomeTimelineRefreshAfterPollingEnabled;
-(int)forwardCardHeight;
-(char)isSearchUITakeOverEnabled;
-(char)isSPDYDualSessionEnabled;
-(char)isTrendLocationsFeatureSwitchEnabled;
-(int)inAppInstallNotificationPollingInterval;
-(int)inAppInstallNotificationTooOld;
-(char)isTrendsSeparatorUIEnabled;
-(id)_dateWithYear:(int)arg1 month:(int)arg2 day:(int)arg3 ;
-(char)isPhotoUploadPreserveExifDataEnabled;
-(double)globalConfigurationTTL;
-(double)mobileConfigurationTTL;
-(char)shouldShowOptionalCreatePlaceFields;
-(char)isWebKitWebViewEnabled;
-(char)isIOS8UIPopoverControllerFixEnabled;
-(char)isSnapreelAllGifsVinesEnabled;
-(char)isTrendsPlusMagnifierOnTopEnabled;
-(char)isTrendsPlusSearchEntryWithDiscoEnabled;
-(char)isTrendsPlusLegacyTrendsReplacementEnabled;
-(char)isTrendsTakeOverEnabled;
-(void)removeUserFromCache:(id)arg1 ;
-(void)updateSavedSearches;
-(id)oneClickSearches;
-(char)isLoadingSavedSearches;
-(char)containsSavedSearch:(id)arg1 ;
-(void)addSavedSearch:(id)arg1 ;
-(int)scribeAPIErrorSampleSize;
-(char)shouldOpenAppStoreInStandaloneApp;
-(double)timeoutToOpenAppStoreInStandaloneApp;
-(void)migrateToAppOAuthCredentialsWithSource:(int)arg1 completion:(/*^block*/id)arg2 ;
-(id)definitiveCustomTimelines:(id)arg1 ;
-(void)_delLoginVerificationStatus;
-(void)_unenroll:(/*^block*/id)arg1 ;
-(id)_currentOfflineCode;
-(void)_currentOnlineCode:(/*^block*/id)arg1 ;
-(char)_makeNewOfflineCode;
-(void)_makeNewOnlineCode:(/*^block*/id)arg1 ;
-(unsigned)_modeForEnrollmentStringValue:(id)arg1 ;
-(char)migratedToAppOAuthCredentials;
-(char)neverAddToSystem;
-(char)systemAccountIsInvalid;
-(id)authenticatedMutableURLRequestForURL:(id)arg1 parameters:(id)arg2 method:(int)arg3 multipart:(char)arg4 requireSystemAuth:(char)arg5 allowPartialAuth:(char)arg6 error:(id*)arg7 ;
-(id)userForUsername:(id)arg1 ;
-(void)authorizePurchaseOfProduct:(id)arg1 withCreditCard:(id)arg2 withResponseBlock:(/*^block*/id)arg3 ;
-(void)getPurchaseRecord:(id)arg1 withResponseBlock:(/*^block*/id)arg2 ;
-(void)setLastTweetedFromDevice:(NSDate *)arg1 ;
-(void)_updateFreshActivityWithActivityCursor:(id)arg1 ;
-(char)hasFreshActivity;
-(id)unreadActivitiesCountString;
-(char)isPhotosSegmentedUploadEnabled;
-(char)isPhotosSegmentedUploadSegmentSizeBackoffPolicyEnabled;
-(char)photosSegmentedUploadDisabledForDirectMessage;
-(int)photosSegmentedUploadSegmentSizeForWiFi;
-(int)photosSegmentedUploadSegmentSizeForCellular;
-(int)photosSegmentedUploadMinimumSegmentSize;
-(int)photosSegmentedUploadMaxiumRetryPerRequest;
-(char)isVideosSegmentedUploadSegmentSizeBackoffPolicyEnabled;
-(int)videosSegmentedUploadSegmentSizeForWiFi;
-(int)videosSegmentedUploadSegmentSizeForCellular;
-(int)videosSegmentedUploadMinimumSegmentSize;
-(int)videosSegmentedUploadMaxiumRetryPerRequest;
-(int)mediaUploadGroupPolicy;
-(char)isMediaAsyncUploadVideoEnabled;
-(char)isMediaAsyncUploadURLEnabled;
-(NSString *)oAuthTokenSecret;
-(NSString *)oAuthToken;
-(NSString *)oAuthConsumerKey;
-(NSString *)oAuthConsumerSecret;
-(TFNTwitterScribe *)scribe;
-(TFNTwitterUser *)user;
-(NSString *)password;
-(void)setPassword:(NSString *)arg1 ;
-(void)setPostalAddresses:(NSArray *)arg1 ;
-(NSArray *)postalAddresses;
-(id)recentSearches;
-(void)clearRecentSearches;
-(void)dealloc;
-(id)init;
-(char)isEqual:(id)arg1 ;
-(unsigned)hash;
-(NSString *)description;
-(char)isActive;
-(int)compare:(id)arg1 ;
-(TFNTwitterSettings *)settings;
-(TFNTwitterAccountModel *)model;
-(void)setIsActive:(char)arg1 ;
-(NSString *)phoneNumber;
-(void)_applicationWillEnterForeground:(id)arg1 ;
-(NSString *)accountID;
-(ACAccount *)systemAccount;
-(long long)userID;
-(NSString *)fullName;
-(void)setFullName:(NSString *)arg1 ;
-(char)verified;
-(void)setVerified:(char)arg1 ;
-(NSString *)username;
-(void)setPhoneNumber:(NSString *)arg1 ;
@end

